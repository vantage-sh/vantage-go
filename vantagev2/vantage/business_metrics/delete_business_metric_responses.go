// Code generated by go-swagger; DO NOT EDIT.

package business_metrics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vantage-sh/vantage-go/vantagev2/models"
)

// DeleteBusinessMetricReader is a Reader for the DeleteBusinessMetric structure.
type DeleteBusinessMetricReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteBusinessMetricReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteBusinessMetricNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewDeleteBusinessMetricForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteBusinessMetricNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /business_metrics/{business_metric_token}] deleteBusinessMetric", response, response.Code())
	}
}

// NewDeleteBusinessMetricNoContent creates a DeleteBusinessMetricNoContent with default headers values
func NewDeleteBusinessMetricNoContent() *DeleteBusinessMetricNoContent {
	return &DeleteBusinessMetricNoContent{}
}

/*
DeleteBusinessMetricNoContent describes a response with status code 204, with default header values.

DeleteBusinessMetricNoContent delete business metric no content
*/
type DeleteBusinessMetricNoContent struct {
	Payload *models.BusinessMetric
}

// IsSuccess returns true when this delete business metric no content response has a 2xx status code
func (o *DeleteBusinessMetricNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete business metric no content response has a 3xx status code
func (o *DeleteBusinessMetricNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete business metric no content response has a 4xx status code
func (o *DeleteBusinessMetricNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete business metric no content response has a 5xx status code
func (o *DeleteBusinessMetricNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete business metric no content response a status code equal to that given
func (o *DeleteBusinessMetricNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete business metric no content response
func (o *DeleteBusinessMetricNoContent) Code() int {
	return 204
}

func (o *DeleteBusinessMetricNoContent) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /business_metrics/{business_metric_token}][%d] deleteBusinessMetricNoContent %s", 204, payload)
}

func (o *DeleteBusinessMetricNoContent) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /business_metrics/{business_metric_token}][%d] deleteBusinessMetricNoContent %s", 204, payload)
}

func (o *DeleteBusinessMetricNoContent) GetPayload() *models.BusinessMetric {
	return o.Payload
}

func (o *DeleteBusinessMetricNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BusinessMetric)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteBusinessMetricForbidden creates a DeleteBusinessMetricForbidden with default headers values
func NewDeleteBusinessMetricForbidden() *DeleteBusinessMetricForbidden {
	return &DeleteBusinessMetricForbidden{}
}

/*
DeleteBusinessMetricForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteBusinessMetricForbidden struct {
	Payload *models.Errors
}

// IsSuccess returns true when this delete business metric forbidden response has a 2xx status code
func (o *DeleteBusinessMetricForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete business metric forbidden response has a 3xx status code
func (o *DeleteBusinessMetricForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete business metric forbidden response has a 4xx status code
func (o *DeleteBusinessMetricForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete business metric forbidden response has a 5xx status code
func (o *DeleteBusinessMetricForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete business metric forbidden response a status code equal to that given
func (o *DeleteBusinessMetricForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete business metric forbidden response
func (o *DeleteBusinessMetricForbidden) Code() int {
	return 403
}

func (o *DeleteBusinessMetricForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /business_metrics/{business_metric_token}][%d] deleteBusinessMetricForbidden %s", 403, payload)
}

func (o *DeleteBusinessMetricForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /business_metrics/{business_metric_token}][%d] deleteBusinessMetricForbidden %s", 403, payload)
}

func (o *DeleteBusinessMetricForbidden) GetPayload() *models.Errors {
	return o.Payload
}

func (o *DeleteBusinessMetricForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteBusinessMetricNotFound creates a DeleteBusinessMetricNotFound with default headers values
func NewDeleteBusinessMetricNotFound() *DeleteBusinessMetricNotFound {
	return &DeleteBusinessMetricNotFound{}
}

/*
DeleteBusinessMetricNotFound describes a response with status code 404, with default header values.

NotFound
*/
type DeleteBusinessMetricNotFound struct {
	Payload *models.Errors
}

// IsSuccess returns true when this delete business metric not found response has a 2xx status code
func (o *DeleteBusinessMetricNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete business metric not found response has a 3xx status code
func (o *DeleteBusinessMetricNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete business metric not found response has a 4xx status code
func (o *DeleteBusinessMetricNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete business metric not found response has a 5xx status code
func (o *DeleteBusinessMetricNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete business metric not found response a status code equal to that given
func (o *DeleteBusinessMetricNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete business metric not found response
func (o *DeleteBusinessMetricNotFound) Code() int {
	return 404
}

func (o *DeleteBusinessMetricNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /business_metrics/{business_metric_token}][%d] deleteBusinessMetricNotFound %s", 404, payload)
}

func (o *DeleteBusinessMetricNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /business_metrics/{business_metric_token}][%d] deleteBusinessMetricNotFound %s", 404, payload)
}

func (o *DeleteBusinessMetricNotFound) GetPayload() *models.Errors {
	return o.Payload
}

func (o *DeleteBusinessMetricNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
