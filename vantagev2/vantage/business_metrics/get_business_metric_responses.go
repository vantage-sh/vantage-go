// Code generated by go-swagger; DO NOT EDIT.

package business_metrics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vantage-sh/vantage-go/vantagev2/models"
)

// GetBusinessMetricReader is a Reader for the GetBusinessMetric structure.
type GetBusinessMetricReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBusinessMetricReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBusinessMetricOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetBusinessMetricNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /business_metrics/{business_metric_token}] getBusinessMetric", response, response.Code())
	}
}

// NewGetBusinessMetricOK creates a GetBusinessMetricOK with default headers values
func NewGetBusinessMetricOK() *GetBusinessMetricOK {
	return &GetBusinessMetricOK{}
}

/*
GetBusinessMetricOK describes a response with status code 200, with default header values.

GetBusinessMetricOK get business metric o k
*/
type GetBusinessMetricOK struct {
	Payload *models.BusinessMetric
}

// IsSuccess returns true when this get business metric o k response has a 2xx status code
func (o *GetBusinessMetricOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get business metric o k response has a 3xx status code
func (o *GetBusinessMetricOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get business metric o k response has a 4xx status code
func (o *GetBusinessMetricOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get business metric o k response has a 5xx status code
func (o *GetBusinessMetricOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get business metric o k response a status code equal to that given
func (o *GetBusinessMetricOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get business metric o k response
func (o *GetBusinessMetricOK) Code() int {
	return 200
}

func (o *GetBusinessMetricOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /business_metrics/{business_metric_token}][%d] getBusinessMetricOK %s", 200, payload)
}

func (o *GetBusinessMetricOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /business_metrics/{business_metric_token}][%d] getBusinessMetricOK %s", 200, payload)
}

func (o *GetBusinessMetricOK) GetPayload() *models.BusinessMetric {
	return o.Payload
}

func (o *GetBusinessMetricOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BusinessMetric)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBusinessMetricNotFound creates a GetBusinessMetricNotFound with default headers values
func NewGetBusinessMetricNotFound() *GetBusinessMetricNotFound {
	return &GetBusinessMetricNotFound{}
}

/*
GetBusinessMetricNotFound describes a response with status code 404, with default header values.

NotFound
*/
type GetBusinessMetricNotFound struct {
	Payload *models.Errors
}

// IsSuccess returns true when this get business metric not found response has a 2xx status code
func (o *GetBusinessMetricNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get business metric not found response has a 3xx status code
func (o *GetBusinessMetricNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get business metric not found response has a 4xx status code
func (o *GetBusinessMetricNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get business metric not found response has a 5xx status code
func (o *GetBusinessMetricNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get business metric not found response a status code equal to that given
func (o *GetBusinessMetricNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get business metric not found response
func (o *GetBusinessMetricNotFound) Code() int {
	return 404
}

func (o *GetBusinessMetricNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /business_metrics/{business_metric_token}][%d] getBusinessMetricNotFound %s", 404, payload)
}

func (o *GetBusinessMetricNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /business_metrics/{business_metric_token}][%d] getBusinessMetricNotFound %s", 404, payload)
}

func (o *GetBusinessMetricNotFound) GetPayload() *models.Errors {
	return o.Payload
}

func (o *GetBusinessMetricNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
