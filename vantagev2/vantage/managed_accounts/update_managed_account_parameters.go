// Code generated by go-swagger; DO NOT EDIT.

package managed_accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/vantage-sh/vantage-go/vantagev2/models"
)

// NewUpdateManagedAccountParams creates a new UpdateManagedAccountParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateManagedAccountParams() *UpdateManagedAccountParams {
	return &UpdateManagedAccountParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateManagedAccountParamsWithTimeout creates a new UpdateManagedAccountParams object
// with the ability to set a timeout on a request.
func NewUpdateManagedAccountParamsWithTimeout(timeout time.Duration) *UpdateManagedAccountParams {
	return &UpdateManagedAccountParams{
		timeout: timeout,
	}
}

// NewUpdateManagedAccountParamsWithContext creates a new UpdateManagedAccountParams object
// with the ability to set a context for a request.
func NewUpdateManagedAccountParamsWithContext(ctx context.Context) *UpdateManagedAccountParams {
	return &UpdateManagedAccountParams{
		Context: ctx,
	}
}

// NewUpdateManagedAccountParamsWithHTTPClient creates a new UpdateManagedAccountParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateManagedAccountParamsWithHTTPClient(client *http.Client) *UpdateManagedAccountParams {
	return &UpdateManagedAccountParams{
		HTTPClient: client,
	}
}

/*
UpdateManagedAccountParams contains all the parameters to send to the API endpoint

	for the update managed account operation.

	Typically these are written to a http.Request.
*/
type UpdateManagedAccountParams struct {

	// ManagedAccountToken.
	ManagedAccountToken string

	// UpdateManagedAccount.
	UpdateManagedAccount *models.UpdateManagedAccount

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update managed account params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateManagedAccountParams) WithDefaults() *UpdateManagedAccountParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update managed account params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateManagedAccountParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update managed account params
func (o *UpdateManagedAccountParams) WithTimeout(timeout time.Duration) *UpdateManagedAccountParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update managed account params
func (o *UpdateManagedAccountParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update managed account params
func (o *UpdateManagedAccountParams) WithContext(ctx context.Context) *UpdateManagedAccountParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update managed account params
func (o *UpdateManagedAccountParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update managed account params
func (o *UpdateManagedAccountParams) WithHTTPClient(client *http.Client) *UpdateManagedAccountParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update managed account params
func (o *UpdateManagedAccountParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithManagedAccountToken adds the managedAccountToken to the update managed account params
func (o *UpdateManagedAccountParams) WithManagedAccountToken(managedAccountToken string) *UpdateManagedAccountParams {
	o.SetManagedAccountToken(managedAccountToken)
	return o
}

// SetManagedAccountToken adds the managedAccountToken to the update managed account params
func (o *UpdateManagedAccountParams) SetManagedAccountToken(managedAccountToken string) {
	o.ManagedAccountToken = managedAccountToken
}

// WithUpdateManagedAccount adds the updateManagedAccount to the update managed account params
func (o *UpdateManagedAccountParams) WithUpdateManagedAccount(updateManagedAccount *models.UpdateManagedAccount) *UpdateManagedAccountParams {
	o.SetUpdateManagedAccount(updateManagedAccount)
	return o
}

// SetUpdateManagedAccount adds the updateManagedAccount to the update managed account params
func (o *UpdateManagedAccountParams) SetUpdateManagedAccount(updateManagedAccount *models.UpdateManagedAccount) {
	o.UpdateManagedAccount = updateManagedAccount
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateManagedAccountParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param managed_account_token
	if err := r.SetPathParam("managed_account_token", o.ManagedAccountToken); err != nil {
		return err
	}
	if o.UpdateManagedAccount != nil {
		if err := r.SetBodyParam(o.UpdateManagedAccount); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
