// Code generated by go-swagger; DO NOT EDIT.

package managed_accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vantage-sh/vantage-go/vantagev2/models"
)

// UpdateManagedAccountReader is a Reader for the UpdateManagedAccount structure.
type UpdateManagedAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateManagedAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateManagedAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateManagedAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateManagedAccountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /managed_accounts/{managed_account_token}] updateManagedAccount", response, response.Code())
	}
}

// NewUpdateManagedAccountOK creates a UpdateManagedAccountOK with default headers values
func NewUpdateManagedAccountOK() *UpdateManagedAccountOK {
	return &UpdateManagedAccountOK{}
}

/*
UpdateManagedAccountOK describes a response with status code 200, with default header values.

UpdateManagedAccountOK update managed account o k
*/
type UpdateManagedAccountOK struct {
	Payload *models.ManagedAccount
}

// IsSuccess returns true when this update managed account o k response has a 2xx status code
func (o *UpdateManagedAccountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update managed account o k response has a 3xx status code
func (o *UpdateManagedAccountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update managed account o k response has a 4xx status code
func (o *UpdateManagedAccountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update managed account o k response has a 5xx status code
func (o *UpdateManagedAccountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update managed account o k response a status code equal to that given
func (o *UpdateManagedAccountOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update managed account o k response
func (o *UpdateManagedAccountOK) Code() int {
	return 200
}

func (o *UpdateManagedAccountOK) Error() string {
	return fmt.Sprintf("[PUT /managed_accounts/{managed_account_token}][%d] updateManagedAccountOK  %+v", 200, o.Payload)
}

func (o *UpdateManagedAccountOK) String() string {
	return fmt.Sprintf("[PUT /managed_accounts/{managed_account_token}][%d] updateManagedAccountOK  %+v", 200, o.Payload)
}

func (o *UpdateManagedAccountOK) GetPayload() *models.ManagedAccount {
	return o.Payload
}

func (o *UpdateManagedAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ManagedAccount)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateManagedAccountBadRequest creates a UpdateManagedAccountBadRequest with default headers values
func NewUpdateManagedAccountBadRequest() *UpdateManagedAccountBadRequest {
	return &UpdateManagedAccountBadRequest{}
}

/*
UpdateManagedAccountBadRequest describes a response with status code 400, with default header values.

BadRequest
*/
type UpdateManagedAccountBadRequest struct {
	Payload *models.Errors
}

// IsSuccess returns true when this update managed account bad request response has a 2xx status code
func (o *UpdateManagedAccountBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update managed account bad request response has a 3xx status code
func (o *UpdateManagedAccountBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update managed account bad request response has a 4xx status code
func (o *UpdateManagedAccountBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update managed account bad request response has a 5xx status code
func (o *UpdateManagedAccountBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update managed account bad request response a status code equal to that given
func (o *UpdateManagedAccountBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update managed account bad request response
func (o *UpdateManagedAccountBadRequest) Code() int {
	return 400
}

func (o *UpdateManagedAccountBadRequest) Error() string {
	return fmt.Sprintf("[PUT /managed_accounts/{managed_account_token}][%d] updateManagedAccountBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateManagedAccountBadRequest) String() string {
	return fmt.Sprintf("[PUT /managed_accounts/{managed_account_token}][%d] updateManagedAccountBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateManagedAccountBadRequest) GetPayload() *models.Errors {
	return o.Payload
}

func (o *UpdateManagedAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateManagedAccountNotFound creates a UpdateManagedAccountNotFound with default headers values
func NewUpdateManagedAccountNotFound() *UpdateManagedAccountNotFound {
	return &UpdateManagedAccountNotFound{}
}

/*
UpdateManagedAccountNotFound describes a response with status code 404, with default header values.

NotFound
*/
type UpdateManagedAccountNotFound struct {
	Payload *models.Errors
}

// IsSuccess returns true when this update managed account not found response has a 2xx status code
func (o *UpdateManagedAccountNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update managed account not found response has a 3xx status code
func (o *UpdateManagedAccountNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update managed account not found response has a 4xx status code
func (o *UpdateManagedAccountNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update managed account not found response has a 5xx status code
func (o *UpdateManagedAccountNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update managed account not found response a status code equal to that given
func (o *UpdateManagedAccountNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update managed account not found response
func (o *UpdateManagedAccountNotFound) Code() int {
	return 404
}

func (o *UpdateManagedAccountNotFound) Error() string {
	return fmt.Sprintf("[PUT /managed_accounts/{managed_account_token}][%d] updateManagedAccountNotFound  %+v", 404, o.Payload)
}

func (o *UpdateManagedAccountNotFound) String() string {
	return fmt.Sprintf("[PUT /managed_accounts/{managed_account_token}][%d] updateManagedAccountNotFound  %+v", 404, o.Payload)
}

func (o *UpdateManagedAccountNotFound) GetPayload() *models.Errors {
	return o.Payload
}

func (o *UpdateManagedAccountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
