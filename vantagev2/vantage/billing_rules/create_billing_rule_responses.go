// Code generated by go-swagger; DO NOT EDIT.

package billing_rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vantage-sh/vantage-go/vantagev2/models"
)

// CreateBillingRuleReader is a Reader for the CreateBillingRule structure.
type CreateBillingRuleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateBillingRuleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateBillingRuleCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateBillingRuleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /billing_rules] createBillingRule", response, response.Code())
	}
}

// NewCreateBillingRuleCreated creates a CreateBillingRuleCreated with default headers values
func NewCreateBillingRuleCreated() *CreateBillingRuleCreated {
	return &CreateBillingRuleCreated{}
}

/*
CreateBillingRuleCreated describes a response with status code 201, with default header values.

CreateBillingRuleCreated create billing rule created
*/
type CreateBillingRuleCreated struct {
	Payload *models.BillingRule
}

// IsSuccess returns true when this create billing rule created response has a 2xx status code
func (o *CreateBillingRuleCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create billing rule created response has a 3xx status code
func (o *CreateBillingRuleCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create billing rule created response has a 4xx status code
func (o *CreateBillingRuleCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create billing rule created response has a 5xx status code
func (o *CreateBillingRuleCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create billing rule created response a status code equal to that given
func (o *CreateBillingRuleCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create billing rule created response
func (o *CreateBillingRuleCreated) Code() int {
	return 201
}

func (o *CreateBillingRuleCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /billing_rules][%d] createBillingRuleCreated %s", 201, payload)
}

func (o *CreateBillingRuleCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /billing_rules][%d] createBillingRuleCreated %s", 201, payload)
}

func (o *CreateBillingRuleCreated) GetPayload() *models.BillingRule {
	return o.Payload
}

func (o *CreateBillingRuleCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BillingRule)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateBillingRuleBadRequest creates a CreateBillingRuleBadRequest with default headers values
func NewCreateBillingRuleBadRequest() *CreateBillingRuleBadRequest {
	return &CreateBillingRuleBadRequest{}
}

/*
CreateBillingRuleBadRequest describes a response with status code 400, with default header values.

BadRequest
*/
type CreateBillingRuleBadRequest struct {
	Payload *models.Errors
}

// IsSuccess returns true when this create billing rule bad request response has a 2xx status code
func (o *CreateBillingRuleBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create billing rule bad request response has a 3xx status code
func (o *CreateBillingRuleBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create billing rule bad request response has a 4xx status code
func (o *CreateBillingRuleBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create billing rule bad request response has a 5xx status code
func (o *CreateBillingRuleBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create billing rule bad request response a status code equal to that given
func (o *CreateBillingRuleBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create billing rule bad request response
func (o *CreateBillingRuleBadRequest) Code() int {
	return 400
}

func (o *CreateBillingRuleBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /billing_rules][%d] createBillingRuleBadRequest %s", 400, payload)
}

func (o *CreateBillingRuleBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /billing_rules][%d] createBillingRuleBadRequest %s", 400, payload)
}

func (o *CreateBillingRuleBadRequest) GetPayload() *models.Errors {
	return o.Payload
}

func (o *CreateBillingRuleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
