// Code generated by go-swagger; DO NOT EDIT.

package invoices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetInvoicesParams creates a new GetInvoicesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetInvoicesParams() *GetInvoicesParams {
	return &GetInvoicesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetInvoicesParamsWithTimeout creates a new GetInvoicesParams object
// with the ability to set a timeout on a request.
func NewGetInvoicesParamsWithTimeout(timeout time.Duration) *GetInvoicesParams {
	return &GetInvoicesParams{
		timeout: timeout,
	}
}

// NewGetInvoicesParamsWithContext creates a new GetInvoicesParams object
// with the ability to set a context for a request.
func NewGetInvoicesParamsWithContext(ctx context.Context) *GetInvoicesParams {
	return &GetInvoicesParams{
		Context: ctx,
	}
}

// NewGetInvoicesParamsWithHTTPClient creates a new GetInvoicesParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetInvoicesParamsWithHTTPClient(client *http.Client) *GetInvoicesParams {
	return &GetInvoicesParams{
		HTTPClient: client,
	}
}

/*
GetInvoicesParams contains all the parameters to send to the API endpoint

	for the get invoices operation.

	Typically these are written to a http.Request.
*/
type GetInvoicesParams struct {

	/* Limit.

	   The amount of results to return. The maximum is 1000.

	   Format: int32
	*/
	Limit *int32

	/* ManagedAccountToken.

	   Filter invoices by managed account token (MSP accounts only)
	*/
	ManagedAccountToken *string

	/* Page.

	   The page of results to return.

	   Format: int32
	*/
	Page *int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get invoices params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInvoicesParams) WithDefaults() *GetInvoicesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get invoices params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInvoicesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get invoices params
func (o *GetInvoicesParams) WithTimeout(timeout time.Duration) *GetInvoicesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get invoices params
func (o *GetInvoicesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get invoices params
func (o *GetInvoicesParams) WithContext(ctx context.Context) *GetInvoicesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get invoices params
func (o *GetInvoicesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get invoices params
func (o *GetInvoicesParams) WithHTTPClient(client *http.Client) *GetInvoicesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get invoices params
func (o *GetInvoicesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLimit adds the limit to the get invoices params
func (o *GetInvoicesParams) WithLimit(limit *int32) *GetInvoicesParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the get invoices params
func (o *GetInvoicesParams) SetLimit(limit *int32) {
	o.Limit = limit
}

// WithManagedAccountToken adds the managedAccountToken to the get invoices params
func (o *GetInvoicesParams) WithManagedAccountToken(managedAccountToken *string) *GetInvoicesParams {
	o.SetManagedAccountToken(managedAccountToken)
	return o
}

// SetManagedAccountToken adds the managedAccountToken to the get invoices params
func (o *GetInvoicesParams) SetManagedAccountToken(managedAccountToken *string) {
	o.ManagedAccountToken = managedAccountToken
}

// WithPage adds the page to the get invoices params
func (o *GetInvoicesParams) WithPage(page *int32) *GetInvoicesParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the get invoices params
func (o *GetInvoicesParams) SetPage(page *int32) {
	o.Page = page
}

// WriteToRequest writes these params to a swagger request
func (o *GetInvoicesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Limit != nil {

		// query param limit
		var qrLimit int32

		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt32(qrLimit)
		if qLimit != "" {

			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}
	}

	if o.ManagedAccountToken != nil {

		// query param managed_account_token
		var qrManagedAccountToken string

		if o.ManagedAccountToken != nil {
			qrManagedAccountToken = *o.ManagedAccountToken
		}
		qManagedAccountToken := qrManagedAccountToken
		if qManagedAccountToken != "" {

			if err := r.SetQueryParam("managed_account_token", qManagedAccountToken); err != nil {
				return err
			}
		}
	}

	if o.Page != nil {

		// query param page
		var qrPage int32

		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt32(qrPage)
		if qPage != "" {

			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
