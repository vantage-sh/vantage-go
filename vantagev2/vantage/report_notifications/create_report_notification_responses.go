// Code generated by go-swagger; DO NOT EDIT.

package report_notifications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vantage-sh/vantage-go/vantagev2/models"
)

// CreateReportNotificationReader is a Reader for the CreateReportNotification structure.
type CreateReportNotificationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateReportNotificationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateReportNotificationCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateReportNotificationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateReportNotificationUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /report_notifications] createReportNotification", response, response.Code())
	}
}

// NewCreateReportNotificationCreated creates a CreateReportNotificationCreated with default headers values
func NewCreateReportNotificationCreated() *CreateReportNotificationCreated {
	return &CreateReportNotificationCreated{}
}

/*
CreateReportNotificationCreated describes a response with status code 201, with default header values.

CreateReportNotificationCreated create report notification created
*/
type CreateReportNotificationCreated struct {
	Payload *models.ReportNotification
}

// IsSuccess returns true when this create report notification created response has a 2xx status code
func (o *CreateReportNotificationCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create report notification created response has a 3xx status code
func (o *CreateReportNotificationCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create report notification created response has a 4xx status code
func (o *CreateReportNotificationCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create report notification created response has a 5xx status code
func (o *CreateReportNotificationCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create report notification created response a status code equal to that given
func (o *CreateReportNotificationCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create report notification created response
func (o *CreateReportNotificationCreated) Code() int {
	return 201
}

func (o *CreateReportNotificationCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /report_notifications][%d] createReportNotificationCreated %s", 201, payload)
}

func (o *CreateReportNotificationCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /report_notifications][%d] createReportNotificationCreated %s", 201, payload)
}

func (o *CreateReportNotificationCreated) GetPayload() *models.ReportNotification {
	return o.Payload
}

func (o *CreateReportNotificationCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ReportNotification)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateReportNotificationBadRequest creates a CreateReportNotificationBadRequest with default headers values
func NewCreateReportNotificationBadRequest() *CreateReportNotificationBadRequest {
	return &CreateReportNotificationBadRequest{}
}

/*
CreateReportNotificationBadRequest describes a response with status code 400, with default header values.

BadRequest
*/
type CreateReportNotificationBadRequest struct {
	Payload *models.Errors
}

// IsSuccess returns true when this create report notification bad request response has a 2xx status code
func (o *CreateReportNotificationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create report notification bad request response has a 3xx status code
func (o *CreateReportNotificationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create report notification bad request response has a 4xx status code
func (o *CreateReportNotificationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create report notification bad request response has a 5xx status code
func (o *CreateReportNotificationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create report notification bad request response a status code equal to that given
func (o *CreateReportNotificationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create report notification bad request response
func (o *CreateReportNotificationBadRequest) Code() int {
	return 400
}

func (o *CreateReportNotificationBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /report_notifications][%d] createReportNotificationBadRequest %s", 400, payload)
}

func (o *CreateReportNotificationBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /report_notifications][%d] createReportNotificationBadRequest %s", 400, payload)
}

func (o *CreateReportNotificationBadRequest) GetPayload() *models.Errors {
	return o.Payload
}

func (o *CreateReportNotificationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateReportNotificationUnprocessableEntity creates a CreateReportNotificationUnprocessableEntity with default headers values
func NewCreateReportNotificationUnprocessableEntity() *CreateReportNotificationUnprocessableEntity {
	return &CreateReportNotificationUnprocessableEntity{}
}

/*
CreateReportNotificationUnprocessableEntity describes a response with status code 422, with default header values.

UnprocessableEntity
*/
type CreateReportNotificationUnprocessableEntity struct {
	Payload *models.Errors
}

// IsSuccess returns true when this create report notification unprocessable entity response has a 2xx status code
func (o *CreateReportNotificationUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create report notification unprocessable entity response has a 3xx status code
func (o *CreateReportNotificationUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create report notification unprocessable entity response has a 4xx status code
func (o *CreateReportNotificationUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create report notification unprocessable entity response has a 5xx status code
func (o *CreateReportNotificationUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create report notification unprocessable entity response a status code equal to that given
func (o *CreateReportNotificationUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create report notification unprocessable entity response
func (o *CreateReportNotificationUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateReportNotificationUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /report_notifications][%d] createReportNotificationUnprocessableEntity %s", 422, payload)
}

func (o *CreateReportNotificationUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /report_notifications][%d] createReportNotificationUnprocessableEntity %s", 422, payload)
}

func (o *CreateReportNotificationUnprocessableEntity) GetPayload() *models.Errors {
	return o.Payload
}

func (o *CreateReportNotificationUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
