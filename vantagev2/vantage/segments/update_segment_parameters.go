// Code generated by go-swagger; DO NOT EDIT.

package segments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/vantage-sh/vantage-go/vantagev2/models"
)

// NewUpdateSegmentParams creates a new UpdateSegmentParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateSegmentParams() *UpdateSegmentParams {
	return &UpdateSegmentParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateSegmentParamsWithTimeout creates a new UpdateSegmentParams object
// with the ability to set a timeout on a request.
func NewUpdateSegmentParamsWithTimeout(timeout time.Duration) *UpdateSegmentParams {
	return &UpdateSegmentParams{
		timeout: timeout,
	}
}

// NewUpdateSegmentParamsWithContext creates a new UpdateSegmentParams object
// with the ability to set a context for a request.
func NewUpdateSegmentParamsWithContext(ctx context.Context) *UpdateSegmentParams {
	return &UpdateSegmentParams{
		Context: ctx,
	}
}

// NewUpdateSegmentParamsWithHTTPClient creates a new UpdateSegmentParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateSegmentParamsWithHTTPClient(client *http.Client) *UpdateSegmentParams {
	return &UpdateSegmentParams{
		HTTPClient: client,
	}
}

/*
UpdateSegmentParams contains all the parameters to send to the API endpoint

	for the update segment operation.

	Typically these are written to a http.Request.
*/
type UpdateSegmentParams struct {

	// SegmentToken.
	SegmentToken string

	// UpdateSegment.
	UpdateSegment *models.UpdateSegment

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update segment params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateSegmentParams) WithDefaults() *UpdateSegmentParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update segment params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateSegmentParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update segment params
func (o *UpdateSegmentParams) WithTimeout(timeout time.Duration) *UpdateSegmentParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update segment params
func (o *UpdateSegmentParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update segment params
func (o *UpdateSegmentParams) WithContext(ctx context.Context) *UpdateSegmentParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update segment params
func (o *UpdateSegmentParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update segment params
func (o *UpdateSegmentParams) WithHTTPClient(client *http.Client) *UpdateSegmentParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update segment params
func (o *UpdateSegmentParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSegmentToken adds the segmentToken to the update segment params
func (o *UpdateSegmentParams) WithSegmentToken(segmentToken string) *UpdateSegmentParams {
	o.SetSegmentToken(segmentToken)
	return o
}

// SetSegmentToken adds the segmentToken to the update segment params
func (o *UpdateSegmentParams) SetSegmentToken(segmentToken string) {
	o.SegmentToken = segmentToken
}

// WithUpdateSegment adds the updateSegment to the update segment params
func (o *UpdateSegmentParams) WithUpdateSegment(updateSegment *models.UpdateSegment) *UpdateSegmentParams {
	o.SetUpdateSegment(updateSegment)
	return o
}

// SetUpdateSegment adds the updateSegment to the update segment params
func (o *UpdateSegmentParams) SetUpdateSegment(updateSegment *models.UpdateSegment) {
	o.UpdateSegment = updateSegment
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateSegmentParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param segment_token
	if err := r.SetPathParam("segment_token", o.SegmentToken); err != nil {
		return err
	}
	if o.UpdateSegment != nil {
		if err := r.SetBodyParam(o.UpdateSegment); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
