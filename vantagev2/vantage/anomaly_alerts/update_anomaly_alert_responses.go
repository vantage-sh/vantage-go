// Code generated by go-swagger; DO NOT EDIT.

package anomaly_alerts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vantage-sh/vantage-go/vantagev2/models"
)

// UpdateAnomalyAlertReader is a Reader for the UpdateAnomalyAlert structure.
type UpdateAnomalyAlertReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateAnomalyAlertReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateAnomalyAlertOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateAnomalyAlertBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateAnomalyAlertForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateAnomalyAlertNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateAnomalyAlertUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /anomaly_alerts/{anomaly_alert_token}] updateAnomalyAlert", response, response.Code())
	}
}

// NewUpdateAnomalyAlertOK creates a UpdateAnomalyAlertOK with default headers values
func NewUpdateAnomalyAlertOK() *UpdateAnomalyAlertOK {
	return &UpdateAnomalyAlertOK{}
}

/*
UpdateAnomalyAlertOK describes a response with status code 200, with default header values.

UpdateAnomalyAlertOK update anomaly alert o k
*/
type UpdateAnomalyAlertOK struct {
	Payload *models.AnomalyAlert
}

// IsSuccess returns true when this update anomaly alert o k response has a 2xx status code
func (o *UpdateAnomalyAlertOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update anomaly alert o k response has a 3xx status code
func (o *UpdateAnomalyAlertOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update anomaly alert o k response has a 4xx status code
func (o *UpdateAnomalyAlertOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update anomaly alert o k response has a 5xx status code
func (o *UpdateAnomalyAlertOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update anomaly alert o k response a status code equal to that given
func (o *UpdateAnomalyAlertOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update anomaly alert o k response
func (o *UpdateAnomalyAlertOK) Code() int {
	return 200
}

func (o *UpdateAnomalyAlertOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /anomaly_alerts/{anomaly_alert_token}][%d] updateAnomalyAlertOK %s", 200, payload)
}

func (o *UpdateAnomalyAlertOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /anomaly_alerts/{anomaly_alert_token}][%d] updateAnomalyAlertOK %s", 200, payload)
}

func (o *UpdateAnomalyAlertOK) GetPayload() *models.AnomalyAlert {
	return o.Payload
}

func (o *UpdateAnomalyAlertOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AnomalyAlert)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAnomalyAlertBadRequest creates a UpdateAnomalyAlertBadRequest with default headers values
func NewUpdateAnomalyAlertBadRequest() *UpdateAnomalyAlertBadRequest {
	return &UpdateAnomalyAlertBadRequest{}
}

/*
UpdateAnomalyAlertBadRequest describes a response with status code 400, with default header values.

BadRequest
*/
type UpdateAnomalyAlertBadRequest struct {
	Payload *models.Errors
}

// IsSuccess returns true when this update anomaly alert bad request response has a 2xx status code
func (o *UpdateAnomalyAlertBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update anomaly alert bad request response has a 3xx status code
func (o *UpdateAnomalyAlertBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update anomaly alert bad request response has a 4xx status code
func (o *UpdateAnomalyAlertBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update anomaly alert bad request response has a 5xx status code
func (o *UpdateAnomalyAlertBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update anomaly alert bad request response a status code equal to that given
func (o *UpdateAnomalyAlertBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update anomaly alert bad request response
func (o *UpdateAnomalyAlertBadRequest) Code() int {
	return 400
}

func (o *UpdateAnomalyAlertBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /anomaly_alerts/{anomaly_alert_token}][%d] updateAnomalyAlertBadRequest %s", 400, payload)
}

func (o *UpdateAnomalyAlertBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /anomaly_alerts/{anomaly_alert_token}][%d] updateAnomalyAlertBadRequest %s", 400, payload)
}

func (o *UpdateAnomalyAlertBadRequest) GetPayload() *models.Errors {
	return o.Payload
}

func (o *UpdateAnomalyAlertBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAnomalyAlertForbidden creates a UpdateAnomalyAlertForbidden with default headers values
func NewUpdateAnomalyAlertForbidden() *UpdateAnomalyAlertForbidden {
	return &UpdateAnomalyAlertForbidden{}
}

/*
UpdateAnomalyAlertForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateAnomalyAlertForbidden struct {
	Payload *models.Errors
}

// IsSuccess returns true when this update anomaly alert forbidden response has a 2xx status code
func (o *UpdateAnomalyAlertForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update anomaly alert forbidden response has a 3xx status code
func (o *UpdateAnomalyAlertForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update anomaly alert forbidden response has a 4xx status code
func (o *UpdateAnomalyAlertForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update anomaly alert forbidden response has a 5xx status code
func (o *UpdateAnomalyAlertForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update anomaly alert forbidden response a status code equal to that given
func (o *UpdateAnomalyAlertForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update anomaly alert forbidden response
func (o *UpdateAnomalyAlertForbidden) Code() int {
	return 403
}

func (o *UpdateAnomalyAlertForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /anomaly_alerts/{anomaly_alert_token}][%d] updateAnomalyAlertForbidden %s", 403, payload)
}

func (o *UpdateAnomalyAlertForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /anomaly_alerts/{anomaly_alert_token}][%d] updateAnomalyAlertForbidden %s", 403, payload)
}

func (o *UpdateAnomalyAlertForbidden) GetPayload() *models.Errors {
	return o.Payload
}

func (o *UpdateAnomalyAlertForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAnomalyAlertNotFound creates a UpdateAnomalyAlertNotFound with default headers values
func NewUpdateAnomalyAlertNotFound() *UpdateAnomalyAlertNotFound {
	return &UpdateAnomalyAlertNotFound{}
}

/*
UpdateAnomalyAlertNotFound describes a response with status code 404, with default header values.

NotFound
*/
type UpdateAnomalyAlertNotFound struct {
	Payload *models.Errors
}

// IsSuccess returns true when this update anomaly alert not found response has a 2xx status code
func (o *UpdateAnomalyAlertNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update anomaly alert not found response has a 3xx status code
func (o *UpdateAnomalyAlertNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update anomaly alert not found response has a 4xx status code
func (o *UpdateAnomalyAlertNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update anomaly alert not found response has a 5xx status code
func (o *UpdateAnomalyAlertNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update anomaly alert not found response a status code equal to that given
func (o *UpdateAnomalyAlertNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update anomaly alert not found response
func (o *UpdateAnomalyAlertNotFound) Code() int {
	return 404
}

func (o *UpdateAnomalyAlertNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /anomaly_alerts/{anomaly_alert_token}][%d] updateAnomalyAlertNotFound %s", 404, payload)
}

func (o *UpdateAnomalyAlertNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /anomaly_alerts/{anomaly_alert_token}][%d] updateAnomalyAlertNotFound %s", 404, payload)
}

func (o *UpdateAnomalyAlertNotFound) GetPayload() *models.Errors {
	return o.Payload
}

func (o *UpdateAnomalyAlertNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAnomalyAlertUnprocessableEntity creates a UpdateAnomalyAlertUnprocessableEntity with default headers values
func NewUpdateAnomalyAlertUnprocessableEntity() *UpdateAnomalyAlertUnprocessableEntity {
	return &UpdateAnomalyAlertUnprocessableEntity{}
}

/*
UpdateAnomalyAlertUnprocessableEntity describes a response with status code 422, with default header values.

UnprocessableEntity
*/
type UpdateAnomalyAlertUnprocessableEntity struct {
	Payload *models.Errors
}

// IsSuccess returns true when this update anomaly alert unprocessable entity response has a 2xx status code
func (o *UpdateAnomalyAlertUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update anomaly alert unprocessable entity response has a 3xx status code
func (o *UpdateAnomalyAlertUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update anomaly alert unprocessable entity response has a 4xx status code
func (o *UpdateAnomalyAlertUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this update anomaly alert unprocessable entity response has a 5xx status code
func (o *UpdateAnomalyAlertUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this update anomaly alert unprocessable entity response a status code equal to that given
func (o *UpdateAnomalyAlertUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the update anomaly alert unprocessable entity response
func (o *UpdateAnomalyAlertUnprocessableEntity) Code() int {
	return 422
}

func (o *UpdateAnomalyAlertUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /anomaly_alerts/{anomaly_alert_token}][%d] updateAnomalyAlertUnprocessableEntity %s", 422, payload)
}

func (o *UpdateAnomalyAlertUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /anomaly_alerts/{anomaly_alert_token}][%d] updateAnomalyAlertUnprocessableEntity %s", 422, payload)
}

func (o *UpdateAnomalyAlertUnprocessableEntity) GetPayload() *models.Errors {
	return o.Payload
}

func (o *UpdateAnomalyAlertUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
