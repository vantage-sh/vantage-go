// Code generated by go-swagger; DO NOT EDIT.

package kubernetes_efficiency_reports

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/vantage-sh/vantage-go/vantagev2/models"
)

// NewUpdateKubernetesEfficiencyReportParams creates a new UpdateKubernetesEfficiencyReportParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateKubernetesEfficiencyReportParams() *UpdateKubernetesEfficiencyReportParams {
	return &UpdateKubernetesEfficiencyReportParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateKubernetesEfficiencyReportParamsWithTimeout creates a new UpdateKubernetesEfficiencyReportParams object
// with the ability to set a timeout on a request.
func NewUpdateKubernetesEfficiencyReportParamsWithTimeout(timeout time.Duration) *UpdateKubernetesEfficiencyReportParams {
	return &UpdateKubernetesEfficiencyReportParams{
		timeout: timeout,
	}
}

// NewUpdateKubernetesEfficiencyReportParamsWithContext creates a new UpdateKubernetesEfficiencyReportParams object
// with the ability to set a context for a request.
func NewUpdateKubernetesEfficiencyReportParamsWithContext(ctx context.Context) *UpdateKubernetesEfficiencyReportParams {
	return &UpdateKubernetesEfficiencyReportParams{
		Context: ctx,
	}
}

// NewUpdateKubernetesEfficiencyReportParamsWithHTTPClient creates a new UpdateKubernetesEfficiencyReportParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateKubernetesEfficiencyReportParamsWithHTTPClient(client *http.Client) *UpdateKubernetesEfficiencyReportParams {
	return &UpdateKubernetesEfficiencyReportParams{
		HTTPClient: client,
	}
}

/*
UpdateKubernetesEfficiencyReportParams contains all the parameters to send to the API endpoint

	for the update kubernetes efficiency report operation.

	Typically these are written to a http.Request.
*/
type UpdateKubernetesEfficiencyReportParams struct {

	// KubernetesEfficiencyReportToken.
	KubernetesEfficiencyReportToken string

	// UpdateKubernetesEfficiencyReport.
	UpdateKubernetesEfficiencyReport *models.UpdateKubernetesEfficiencyReport

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update kubernetes efficiency report params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateKubernetesEfficiencyReportParams) WithDefaults() *UpdateKubernetesEfficiencyReportParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update kubernetes efficiency report params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateKubernetesEfficiencyReportParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update kubernetes efficiency report params
func (o *UpdateKubernetesEfficiencyReportParams) WithTimeout(timeout time.Duration) *UpdateKubernetesEfficiencyReportParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update kubernetes efficiency report params
func (o *UpdateKubernetesEfficiencyReportParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update kubernetes efficiency report params
func (o *UpdateKubernetesEfficiencyReportParams) WithContext(ctx context.Context) *UpdateKubernetesEfficiencyReportParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update kubernetes efficiency report params
func (o *UpdateKubernetesEfficiencyReportParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update kubernetes efficiency report params
func (o *UpdateKubernetesEfficiencyReportParams) WithHTTPClient(client *http.Client) *UpdateKubernetesEfficiencyReportParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update kubernetes efficiency report params
func (o *UpdateKubernetesEfficiencyReportParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithKubernetesEfficiencyReportToken adds the kubernetesEfficiencyReportToken to the update kubernetes efficiency report params
func (o *UpdateKubernetesEfficiencyReportParams) WithKubernetesEfficiencyReportToken(kubernetesEfficiencyReportToken string) *UpdateKubernetesEfficiencyReportParams {
	o.SetKubernetesEfficiencyReportToken(kubernetesEfficiencyReportToken)
	return o
}

// SetKubernetesEfficiencyReportToken adds the kubernetesEfficiencyReportToken to the update kubernetes efficiency report params
func (o *UpdateKubernetesEfficiencyReportParams) SetKubernetesEfficiencyReportToken(kubernetesEfficiencyReportToken string) {
	o.KubernetesEfficiencyReportToken = kubernetesEfficiencyReportToken
}

// WithUpdateKubernetesEfficiencyReport adds the updateKubernetesEfficiencyReport to the update kubernetes efficiency report params
func (o *UpdateKubernetesEfficiencyReportParams) WithUpdateKubernetesEfficiencyReport(updateKubernetesEfficiencyReport *models.UpdateKubernetesEfficiencyReport) *UpdateKubernetesEfficiencyReportParams {
	o.SetUpdateKubernetesEfficiencyReport(updateKubernetesEfficiencyReport)
	return o
}

// SetUpdateKubernetesEfficiencyReport adds the updateKubernetesEfficiencyReport to the update kubernetes efficiency report params
func (o *UpdateKubernetesEfficiencyReportParams) SetUpdateKubernetesEfficiencyReport(updateKubernetesEfficiencyReport *models.UpdateKubernetesEfficiencyReport) {
	o.UpdateKubernetesEfficiencyReport = updateKubernetesEfficiencyReport
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateKubernetesEfficiencyReportParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param kubernetes_efficiency_report_token
	if err := r.SetPathParam("kubernetes_efficiency_report_token", o.KubernetesEfficiencyReportToken); err != nil {
		return err
	}
	if o.UpdateKubernetesEfficiencyReport != nil {
		if err := r.SetBodyParam(o.UpdateKubernetesEfficiencyReport); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
