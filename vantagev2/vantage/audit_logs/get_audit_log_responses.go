// Code generated by go-swagger; DO NOT EDIT.

package audit_logs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vantage-sh/vantage-go/vantagev2/models"
)

// GetAuditLogReader is a Reader for the GetAuditLog structure.
type GetAuditLogReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAuditLogReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAuditLogOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetAuditLogNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /audit_logs/{audit_log_token}] getAuditLog", response, response.Code())
	}
}

// NewGetAuditLogOK creates a GetAuditLogOK with default headers values
func NewGetAuditLogOK() *GetAuditLogOK {
	return &GetAuditLogOK{}
}

/*
GetAuditLogOK describes a response with status code 200, with default header values.

GetAuditLogOK get audit log o k
*/
type GetAuditLogOK struct {
	Payload *models.AuditLog
}

// IsSuccess returns true when this get audit log o k response has a 2xx status code
func (o *GetAuditLogOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get audit log o k response has a 3xx status code
func (o *GetAuditLogOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get audit log o k response has a 4xx status code
func (o *GetAuditLogOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get audit log o k response has a 5xx status code
func (o *GetAuditLogOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get audit log o k response a status code equal to that given
func (o *GetAuditLogOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get audit log o k response
func (o *GetAuditLogOK) Code() int {
	return 200
}

func (o *GetAuditLogOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /audit_logs/{audit_log_token}][%d] getAuditLogOK %s", 200, payload)
}

func (o *GetAuditLogOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /audit_logs/{audit_log_token}][%d] getAuditLogOK %s", 200, payload)
}

func (o *GetAuditLogOK) GetPayload() *models.AuditLog {
	return o.Payload
}

func (o *GetAuditLogOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuditLog)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuditLogNotFound creates a GetAuditLogNotFound with default headers values
func NewGetAuditLogNotFound() *GetAuditLogNotFound {
	return &GetAuditLogNotFound{}
}

/*
GetAuditLogNotFound describes a response with status code 404, with default header values.

NotFound
*/
type GetAuditLogNotFound struct {
	Payload *models.Errors
}

// IsSuccess returns true when this get audit log not found response has a 2xx status code
func (o *GetAuditLogNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get audit log not found response has a 3xx status code
func (o *GetAuditLogNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get audit log not found response has a 4xx status code
func (o *GetAuditLogNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get audit log not found response has a 5xx status code
func (o *GetAuditLogNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get audit log not found response a status code equal to that given
func (o *GetAuditLogNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get audit log not found response
func (o *GetAuditLogNotFound) Code() int {
	return 404
}

func (o *GetAuditLogNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /audit_logs/{audit_log_token}][%d] getAuditLogNotFound %s", 404, payload)
}

func (o *GetAuditLogNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /audit_logs/{audit_log_token}][%d] getAuditLogNotFound %s", 404, payload)
}

func (o *GetAuditLogNotFound) GetPayload() *models.Errors {
	return o.Payload
}

func (o *GetAuditLogNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
