// Code generated by go-swagger; DO NOT EDIT.

package resource_reports

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vantage-sh/vantage-go/vantagev2/models"
)

// GetResourceReportReader is a Reader for the GetResourceReport structure.
type GetResourceReportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResourceReportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetResourceReportOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetResourceReportNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /resource_reports/{resource_report_token}] getResourceReport", response, response.Code())
	}
}

// NewGetResourceReportOK creates a GetResourceReportOK with default headers values
func NewGetResourceReportOK() *GetResourceReportOK {
	return &GetResourceReportOK{}
}

/*
GetResourceReportOK describes a response with status code 200, with default header values.

GetResourceReportOK get resource report o k
*/
type GetResourceReportOK struct {
	Payload *models.ResourceReport
}

// IsSuccess returns true when this get resource report o k response has a 2xx status code
func (o *GetResourceReportOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get resource report o k response has a 3xx status code
func (o *GetResourceReportOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource report o k response has a 4xx status code
func (o *GetResourceReportOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resource report o k response has a 5xx status code
func (o *GetResourceReportOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource report o k response a status code equal to that given
func (o *GetResourceReportOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get resource report o k response
func (o *GetResourceReportOK) Code() int {
	return 200
}

func (o *GetResourceReportOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /resource_reports/{resource_report_token}][%d] getResourceReportOK %s", 200, payload)
}

func (o *GetResourceReportOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /resource_reports/{resource_report_token}][%d] getResourceReportOK %s", 200, payload)
}

func (o *GetResourceReportOK) GetPayload() *models.ResourceReport {
	return o.Payload
}

func (o *GetResourceReportOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResourceReport)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceReportNotFound creates a GetResourceReportNotFound with default headers values
func NewGetResourceReportNotFound() *GetResourceReportNotFound {
	return &GetResourceReportNotFound{}
}

/*
GetResourceReportNotFound describes a response with status code 404, with default header values.

NotFound
*/
type GetResourceReportNotFound struct {
	Payload *models.Errors
}

// IsSuccess returns true when this get resource report not found response has a 2xx status code
func (o *GetResourceReportNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource report not found response has a 3xx status code
func (o *GetResourceReportNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource report not found response has a 4xx status code
func (o *GetResourceReportNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource report not found response has a 5xx status code
func (o *GetResourceReportNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource report not found response a status code equal to that given
func (o *GetResourceReportNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get resource report not found response
func (o *GetResourceReportNotFound) Code() int {
	return 404
}

func (o *GetResourceReportNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /resource_reports/{resource_report_token}][%d] getResourceReportNotFound %s", 404, payload)
}

func (o *GetResourceReportNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /resource_reports/{resource_report_token}][%d] getResourceReportNotFound %s", 404, payload)
}

func (o *GetResourceReportNotFound) GetPayload() *models.Errors {
	return o.Payload
}

func (o *GetResourceReportNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
