// Code generated by go-swagger; DO NOT EDIT.

package resource_reports

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vantage-sh/vantage-go/vantagev2/models"
)

// UpdateResourceReportReader is a Reader for the UpdateResourceReport structure.
type UpdateResourceReportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateResourceReportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateResourceReportOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateResourceReportBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateResourceReportNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateResourceReportUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /resource_reports/{resource_report_token}] updateResourceReport", response, response.Code())
	}
}

// NewUpdateResourceReportOK creates a UpdateResourceReportOK with default headers values
func NewUpdateResourceReportOK() *UpdateResourceReportOK {
	return &UpdateResourceReportOK{}
}

/*
UpdateResourceReportOK describes a response with status code 200, with default header values.

UpdateResourceReportOK update resource report o k
*/
type UpdateResourceReportOK struct {
	Payload *models.ResourceReport
}

// IsSuccess returns true when this update resource report o k response has a 2xx status code
func (o *UpdateResourceReportOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update resource report o k response has a 3xx status code
func (o *UpdateResourceReportOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update resource report o k response has a 4xx status code
func (o *UpdateResourceReportOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update resource report o k response has a 5xx status code
func (o *UpdateResourceReportOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update resource report o k response a status code equal to that given
func (o *UpdateResourceReportOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update resource report o k response
func (o *UpdateResourceReportOK) Code() int {
	return 200
}

func (o *UpdateResourceReportOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /resource_reports/{resource_report_token}][%d] updateResourceReportOK %s", 200, payload)
}

func (o *UpdateResourceReportOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /resource_reports/{resource_report_token}][%d] updateResourceReportOK %s", 200, payload)
}

func (o *UpdateResourceReportOK) GetPayload() *models.ResourceReport {
	return o.Payload
}

func (o *UpdateResourceReportOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResourceReport)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateResourceReportBadRequest creates a UpdateResourceReportBadRequest with default headers values
func NewUpdateResourceReportBadRequest() *UpdateResourceReportBadRequest {
	return &UpdateResourceReportBadRequest{}
}

/*
UpdateResourceReportBadRequest describes a response with status code 400, with default header values.

BadRequest
*/
type UpdateResourceReportBadRequest struct {
	Payload *models.Errors
}

// IsSuccess returns true when this update resource report bad request response has a 2xx status code
func (o *UpdateResourceReportBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update resource report bad request response has a 3xx status code
func (o *UpdateResourceReportBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update resource report bad request response has a 4xx status code
func (o *UpdateResourceReportBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update resource report bad request response has a 5xx status code
func (o *UpdateResourceReportBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update resource report bad request response a status code equal to that given
func (o *UpdateResourceReportBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update resource report bad request response
func (o *UpdateResourceReportBadRequest) Code() int {
	return 400
}

func (o *UpdateResourceReportBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /resource_reports/{resource_report_token}][%d] updateResourceReportBadRequest %s", 400, payload)
}

func (o *UpdateResourceReportBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /resource_reports/{resource_report_token}][%d] updateResourceReportBadRequest %s", 400, payload)
}

func (o *UpdateResourceReportBadRequest) GetPayload() *models.Errors {
	return o.Payload
}

func (o *UpdateResourceReportBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateResourceReportNotFound creates a UpdateResourceReportNotFound with default headers values
func NewUpdateResourceReportNotFound() *UpdateResourceReportNotFound {
	return &UpdateResourceReportNotFound{}
}

/*
UpdateResourceReportNotFound describes a response with status code 404, with default header values.

NotFound
*/
type UpdateResourceReportNotFound struct {
	Payload *models.Errors
}

// IsSuccess returns true when this update resource report not found response has a 2xx status code
func (o *UpdateResourceReportNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update resource report not found response has a 3xx status code
func (o *UpdateResourceReportNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update resource report not found response has a 4xx status code
func (o *UpdateResourceReportNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update resource report not found response has a 5xx status code
func (o *UpdateResourceReportNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update resource report not found response a status code equal to that given
func (o *UpdateResourceReportNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update resource report not found response
func (o *UpdateResourceReportNotFound) Code() int {
	return 404
}

func (o *UpdateResourceReportNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /resource_reports/{resource_report_token}][%d] updateResourceReportNotFound %s", 404, payload)
}

func (o *UpdateResourceReportNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /resource_reports/{resource_report_token}][%d] updateResourceReportNotFound %s", 404, payload)
}

func (o *UpdateResourceReportNotFound) GetPayload() *models.Errors {
	return o.Payload
}

func (o *UpdateResourceReportNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateResourceReportUnprocessableEntity creates a UpdateResourceReportUnprocessableEntity with default headers values
func NewUpdateResourceReportUnprocessableEntity() *UpdateResourceReportUnprocessableEntity {
	return &UpdateResourceReportUnprocessableEntity{}
}

/*
UpdateResourceReportUnprocessableEntity describes a response with status code 422, with default header values.

UnprocessableEntity
*/
type UpdateResourceReportUnprocessableEntity struct {
	Payload *models.Errors
}

// IsSuccess returns true when this update resource report unprocessable entity response has a 2xx status code
func (o *UpdateResourceReportUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update resource report unprocessable entity response has a 3xx status code
func (o *UpdateResourceReportUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update resource report unprocessable entity response has a 4xx status code
func (o *UpdateResourceReportUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this update resource report unprocessable entity response has a 5xx status code
func (o *UpdateResourceReportUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this update resource report unprocessable entity response a status code equal to that given
func (o *UpdateResourceReportUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the update resource report unprocessable entity response
func (o *UpdateResourceReportUnprocessableEntity) Code() int {
	return 422
}

func (o *UpdateResourceReportUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /resource_reports/{resource_report_token}][%d] updateResourceReportUnprocessableEntity %s", 422, payload)
}

func (o *UpdateResourceReportUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /resource_reports/{resource_report_token}][%d] updateResourceReportUnprocessableEntity %s", 422, payload)
}

func (o *UpdateResourceReportUnprocessableEntity) GetPayload() *models.Errors {
	return o.Payload
}

func (o *UpdateResourceReportUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
