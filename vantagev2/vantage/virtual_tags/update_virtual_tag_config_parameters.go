// Code generated by go-swagger; DO NOT EDIT.

package virtual_tags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/vantage-sh/vantage-go/vantagev2/models"
)

// NewUpdateVirtualTagConfigParams creates a new UpdateVirtualTagConfigParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateVirtualTagConfigParams() *UpdateVirtualTagConfigParams {
	return &UpdateVirtualTagConfigParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateVirtualTagConfigParamsWithTimeout creates a new UpdateVirtualTagConfigParams object
// with the ability to set a timeout on a request.
func NewUpdateVirtualTagConfigParamsWithTimeout(timeout time.Duration) *UpdateVirtualTagConfigParams {
	return &UpdateVirtualTagConfigParams{
		timeout: timeout,
	}
}

// NewUpdateVirtualTagConfigParamsWithContext creates a new UpdateVirtualTagConfigParams object
// with the ability to set a context for a request.
func NewUpdateVirtualTagConfigParamsWithContext(ctx context.Context) *UpdateVirtualTagConfigParams {
	return &UpdateVirtualTagConfigParams{
		Context: ctx,
	}
}

// NewUpdateVirtualTagConfigParamsWithHTTPClient creates a new UpdateVirtualTagConfigParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateVirtualTagConfigParamsWithHTTPClient(client *http.Client) *UpdateVirtualTagConfigParams {
	return &UpdateVirtualTagConfigParams{
		HTTPClient: client,
	}
}

/*
UpdateVirtualTagConfigParams contains all the parameters to send to the API endpoint

	for the update virtual tag config operation.

	Typically these are written to a http.Request.
*/
type UpdateVirtualTagConfigParams struct {

	// UpdateVirtualTagConfig.
	UpdateVirtualTagConfig *models.UpdateVirtualTagConfig

	// VirtualTagConfigToken.
	VirtualTagConfigToken string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update virtual tag config params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateVirtualTagConfigParams) WithDefaults() *UpdateVirtualTagConfigParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update virtual tag config params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateVirtualTagConfigParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update virtual tag config params
func (o *UpdateVirtualTagConfigParams) WithTimeout(timeout time.Duration) *UpdateVirtualTagConfigParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update virtual tag config params
func (o *UpdateVirtualTagConfigParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update virtual tag config params
func (o *UpdateVirtualTagConfigParams) WithContext(ctx context.Context) *UpdateVirtualTagConfigParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update virtual tag config params
func (o *UpdateVirtualTagConfigParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update virtual tag config params
func (o *UpdateVirtualTagConfigParams) WithHTTPClient(client *http.Client) *UpdateVirtualTagConfigParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update virtual tag config params
func (o *UpdateVirtualTagConfigParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithUpdateVirtualTagConfig adds the updateVirtualTagConfig to the update virtual tag config params
func (o *UpdateVirtualTagConfigParams) WithUpdateVirtualTagConfig(updateVirtualTagConfig *models.UpdateVirtualTagConfig) *UpdateVirtualTagConfigParams {
	o.SetUpdateVirtualTagConfig(updateVirtualTagConfig)
	return o
}

// SetUpdateVirtualTagConfig adds the updateVirtualTagConfig to the update virtual tag config params
func (o *UpdateVirtualTagConfigParams) SetUpdateVirtualTagConfig(updateVirtualTagConfig *models.UpdateVirtualTagConfig) {
	o.UpdateVirtualTagConfig = updateVirtualTagConfig
}

// WithVirtualTagConfigToken adds the virtualTagConfigToken to the update virtual tag config params
func (o *UpdateVirtualTagConfigParams) WithVirtualTagConfigToken(virtualTagConfigToken string) *UpdateVirtualTagConfigParams {
	o.SetVirtualTagConfigToken(virtualTagConfigToken)
	return o
}

// SetVirtualTagConfigToken adds the virtualTagConfigToken to the update virtual tag config params
func (o *UpdateVirtualTagConfigParams) SetVirtualTagConfigToken(virtualTagConfigToken string) {
	o.VirtualTagConfigToken = virtualTagConfigToken
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateVirtualTagConfigParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.UpdateVirtualTagConfig != nil {
		if err := r.SetBodyParam(o.UpdateVirtualTagConfig); err != nil {
			return err
		}
	}

	// path param virtual_tag_config_token
	if err := r.SetPathParam("virtual_tag_config_token", o.VirtualTagConfigToken); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
