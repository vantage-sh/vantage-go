// Code generated by go-swagger; DO NOT EDIT.

package virtual_tags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vantage-sh/vantage-go/vantagev2/models"
)

// CreateVirtualTagConfigReader is a Reader for the CreateVirtualTagConfig structure.
type CreateVirtualTagConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateVirtualTagConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateVirtualTagConfigCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateVirtualTagConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateVirtualTagConfigForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateVirtualTagConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateVirtualTagConfigUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /virtual_tag_configs] createVirtualTagConfig", response, response.Code())
	}
}

// NewCreateVirtualTagConfigCreated creates a CreateVirtualTagConfigCreated with default headers values
func NewCreateVirtualTagConfigCreated() *CreateVirtualTagConfigCreated {
	return &CreateVirtualTagConfigCreated{}
}

/*
CreateVirtualTagConfigCreated describes a response with status code 201, with default header values.

CreateVirtualTagConfigCreated create virtual tag config created
*/
type CreateVirtualTagConfigCreated struct {
	Payload *models.VirtualTagConfig
}

// IsSuccess returns true when this create virtual tag config created response has a 2xx status code
func (o *CreateVirtualTagConfigCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create virtual tag config created response has a 3xx status code
func (o *CreateVirtualTagConfigCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create virtual tag config created response has a 4xx status code
func (o *CreateVirtualTagConfigCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create virtual tag config created response has a 5xx status code
func (o *CreateVirtualTagConfigCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create virtual tag config created response a status code equal to that given
func (o *CreateVirtualTagConfigCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create virtual tag config created response
func (o *CreateVirtualTagConfigCreated) Code() int {
	return 201
}

func (o *CreateVirtualTagConfigCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /virtual_tag_configs][%d] createVirtualTagConfigCreated %s", 201, payload)
}

func (o *CreateVirtualTagConfigCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /virtual_tag_configs][%d] createVirtualTagConfigCreated %s", 201, payload)
}

func (o *CreateVirtualTagConfigCreated) GetPayload() *models.VirtualTagConfig {
	return o.Payload
}

func (o *CreateVirtualTagConfigCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VirtualTagConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateVirtualTagConfigBadRequest creates a CreateVirtualTagConfigBadRequest with default headers values
func NewCreateVirtualTagConfigBadRequest() *CreateVirtualTagConfigBadRequest {
	return &CreateVirtualTagConfigBadRequest{}
}

/*
CreateVirtualTagConfigBadRequest describes a response with status code 400, with default header values.

BadRequest
*/
type CreateVirtualTagConfigBadRequest struct {
	Payload *models.Errors
}

// IsSuccess returns true when this create virtual tag config bad request response has a 2xx status code
func (o *CreateVirtualTagConfigBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create virtual tag config bad request response has a 3xx status code
func (o *CreateVirtualTagConfigBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create virtual tag config bad request response has a 4xx status code
func (o *CreateVirtualTagConfigBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create virtual tag config bad request response has a 5xx status code
func (o *CreateVirtualTagConfigBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create virtual tag config bad request response a status code equal to that given
func (o *CreateVirtualTagConfigBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create virtual tag config bad request response
func (o *CreateVirtualTagConfigBadRequest) Code() int {
	return 400
}

func (o *CreateVirtualTagConfigBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /virtual_tag_configs][%d] createVirtualTagConfigBadRequest %s", 400, payload)
}

func (o *CreateVirtualTagConfigBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /virtual_tag_configs][%d] createVirtualTagConfigBadRequest %s", 400, payload)
}

func (o *CreateVirtualTagConfigBadRequest) GetPayload() *models.Errors {
	return o.Payload
}

func (o *CreateVirtualTagConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateVirtualTagConfigForbidden creates a CreateVirtualTagConfigForbidden with default headers values
func NewCreateVirtualTagConfigForbidden() *CreateVirtualTagConfigForbidden {
	return &CreateVirtualTagConfigForbidden{}
}

/*
CreateVirtualTagConfigForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateVirtualTagConfigForbidden struct {
	Payload *models.Errors
}

// IsSuccess returns true when this create virtual tag config forbidden response has a 2xx status code
func (o *CreateVirtualTagConfigForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create virtual tag config forbidden response has a 3xx status code
func (o *CreateVirtualTagConfigForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create virtual tag config forbidden response has a 4xx status code
func (o *CreateVirtualTagConfigForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create virtual tag config forbidden response has a 5xx status code
func (o *CreateVirtualTagConfigForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create virtual tag config forbidden response a status code equal to that given
func (o *CreateVirtualTagConfigForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create virtual tag config forbidden response
func (o *CreateVirtualTagConfigForbidden) Code() int {
	return 403
}

func (o *CreateVirtualTagConfigForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /virtual_tag_configs][%d] createVirtualTagConfigForbidden %s", 403, payload)
}

func (o *CreateVirtualTagConfigForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /virtual_tag_configs][%d] createVirtualTagConfigForbidden %s", 403, payload)
}

func (o *CreateVirtualTagConfigForbidden) GetPayload() *models.Errors {
	return o.Payload
}

func (o *CreateVirtualTagConfigForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateVirtualTagConfigNotFound creates a CreateVirtualTagConfigNotFound with default headers values
func NewCreateVirtualTagConfigNotFound() *CreateVirtualTagConfigNotFound {
	return &CreateVirtualTagConfigNotFound{}
}

/*
CreateVirtualTagConfigNotFound describes a response with status code 404, with default header values.

NotFound
*/
type CreateVirtualTagConfigNotFound struct {
	Payload *models.Errors
}

// IsSuccess returns true when this create virtual tag config not found response has a 2xx status code
func (o *CreateVirtualTagConfigNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create virtual tag config not found response has a 3xx status code
func (o *CreateVirtualTagConfigNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create virtual tag config not found response has a 4xx status code
func (o *CreateVirtualTagConfigNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create virtual tag config not found response has a 5xx status code
func (o *CreateVirtualTagConfigNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create virtual tag config not found response a status code equal to that given
func (o *CreateVirtualTagConfigNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create virtual tag config not found response
func (o *CreateVirtualTagConfigNotFound) Code() int {
	return 404
}

func (o *CreateVirtualTagConfigNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /virtual_tag_configs][%d] createVirtualTagConfigNotFound %s", 404, payload)
}

func (o *CreateVirtualTagConfigNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /virtual_tag_configs][%d] createVirtualTagConfigNotFound %s", 404, payload)
}

func (o *CreateVirtualTagConfigNotFound) GetPayload() *models.Errors {
	return o.Payload
}

func (o *CreateVirtualTagConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateVirtualTagConfigUnprocessableEntity creates a CreateVirtualTagConfigUnprocessableEntity with default headers values
func NewCreateVirtualTagConfigUnprocessableEntity() *CreateVirtualTagConfigUnprocessableEntity {
	return &CreateVirtualTagConfigUnprocessableEntity{}
}

/*
CreateVirtualTagConfigUnprocessableEntity describes a response with status code 422, with default header values.

UnprocessableEntity
*/
type CreateVirtualTagConfigUnprocessableEntity struct {
	Payload *models.Errors
}

// IsSuccess returns true when this create virtual tag config unprocessable entity response has a 2xx status code
func (o *CreateVirtualTagConfigUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create virtual tag config unprocessable entity response has a 3xx status code
func (o *CreateVirtualTagConfigUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create virtual tag config unprocessable entity response has a 4xx status code
func (o *CreateVirtualTagConfigUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create virtual tag config unprocessable entity response has a 5xx status code
func (o *CreateVirtualTagConfigUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create virtual tag config unprocessable entity response a status code equal to that given
func (o *CreateVirtualTagConfigUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create virtual tag config unprocessable entity response
func (o *CreateVirtualTagConfigUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateVirtualTagConfigUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /virtual_tag_configs][%d] createVirtualTagConfigUnprocessableEntity %s", 422, payload)
}

func (o *CreateVirtualTagConfigUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /virtual_tag_configs][%d] createVirtualTagConfigUnprocessableEntity %s", 422, payload)
}

func (o *CreateVirtualTagConfigUnprocessableEntity) GetPayload() *models.Errors {
	return o.Payload
}

func (o *CreateVirtualTagConfigUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
