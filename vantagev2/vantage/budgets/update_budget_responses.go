// Code generated by go-swagger; DO NOT EDIT.

package budgets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vantage-sh/vantage-go/vantagev2/models"
)

// UpdateBudgetReader is a Reader for the UpdateBudget structure.
type UpdateBudgetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateBudgetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateBudgetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateBudgetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateBudgetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /budgets/{budget_token}] updateBudget", response, response.Code())
	}
}

// NewUpdateBudgetOK creates a UpdateBudgetOK with default headers values
func NewUpdateBudgetOK() *UpdateBudgetOK {
	return &UpdateBudgetOK{}
}

/*
UpdateBudgetOK describes a response with status code 200, with default header values.

UpdateBudgetOK update budget o k
*/
type UpdateBudgetOK struct {
	Payload *models.Budget
}

// IsSuccess returns true when this update budget o k response has a 2xx status code
func (o *UpdateBudgetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update budget o k response has a 3xx status code
func (o *UpdateBudgetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update budget o k response has a 4xx status code
func (o *UpdateBudgetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update budget o k response has a 5xx status code
func (o *UpdateBudgetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update budget o k response a status code equal to that given
func (o *UpdateBudgetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update budget o k response
func (o *UpdateBudgetOK) Code() int {
	return 200
}

func (o *UpdateBudgetOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /budgets/{budget_token}][%d] updateBudgetOK %s", 200, payload)
}

func (o *UpdateBudgetOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /budgets/{budget_token}][%d] updateBudgetOK %s", 200, payload)
}

func (o *UpdateBudgetOK) GetPayload() *models.Budget {
	return o.Payload
}

func (o *UpdateBudgetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Budget)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBudgetBadRequest creates a UpdateBudgetBadRequest with default headers values
func NewUpdateBudgetBadRequest() *UpdateBudgetBadRequest {
	return &UpdateBudgetBadRequest{}
}

/*
UpdateBudgetBadRequest describes a response with status code 400, with default header values.

BadRequest
*/
type UpdateBudgetBadRequest struct {
	Payload *models.Errors
}

// IsSuccess returns true when this update budget bad request response has a 2xx status code
func (o *UpdateBudgetBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update budget bad request response has a 3xx status code
func (o *UpdateBudgetBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update budget bad request response has a 4xx status code
func (o *UpdateBudgetBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update budget bad request response has a 5xx status code
func (o *UpdateBudgetBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update budget bad request response a status code equal to that given
func (o *UpdateBudgetBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update budget bad request response
func (o *UpdateBudgetBadRequest) Code() int {
	return 400
}

func (o *UpdateBudgetBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /budgets/{budget_token}][%d] updateBudgetBadRequest %s", 400, payload)
}

func (o *UpdateBudgetBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /budgets/{budget_token}][%d] updateBudgetBadRequest %s", 400, payload)
}

func (o *UpdateBudgetBadRequest) GetPayload() *models.Errors {
	return o.Payload
}

func (o *UpdateBudgetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBudgetNotFound creates a UpdateBudgetNotFound with default headers values
func NewUpdateBudgetNotFound() *UpdateBudgetNotFound {
	return &UpdateBudgetNotFound{}
}

/*
UpdateBudgetNotFound describes a response with status code 404, with default header values.

NotFound
*/
type UpdateBudgetNotFound struct {
	Payload *models.Errors
}

// IsSuccess returns true when this update budget not found response has a 2xx status code
func (o *UpdateBudgetNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update budget not found response has a 3xx status code
func (o *UpdateBudgetNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update budget not found response has a 4xx status code
func (o *UpdateBudgetNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update budget not found response has a 5xx status code
func (o *UpdateBudgetNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update budget not found response a status code equal to that given
func (o *UpdateBudgetNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update budget not found response
func (o *UpdateBudgetNotFound) Code() int {
	return 404
}

func (o *UpdateBudgetNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /budgets/{budget_token}][%d] updateBudgetNotFound %s", 404, payload)
}

func (o *UpdateBudgetNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /budgets/{budget_token}][%d] updateBudgetNotFound %s", 404, payload)
}

func (o *UpdateBudgetNotFound) GetPayload() *models.Errors {
	return o.Payload
}

func (o *UpdateBudgetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
