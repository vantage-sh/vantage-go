// Code generated by go-swagger; DO NOT EDIT.

package budgets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vantage-sh/vantage-go/vantagev2/models"
)

// GetBudgetReader is a Reader for the GetBudget structure.
type GetBudgetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBudgetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBudgetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetBudgetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /budgets/{budget_token}] getBudget", response, response.Code())
	}
}

// NewGetBudgetOK creates a GetBudgetOK with default headers values
func NewGetBudgetOK() *GetBudgetOK {
	return &GetBudgetOK{}
}

/*
GetBudgetOK describes a response with status code 200, with default header values.

GetBudgetOK get budget o k
*/
type GetBudgetOK struct {
	Payload *models.Budget
}

// IsSuccess returns true when this get budget o k response has a 2xx status code
func (o *GetBudgetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get budget o k response has a 3xx status code
func (o *GetBudgetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get budget o k response has a 4xx status code
func (o *GetBudgetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get budget o k response has a 5xx status code
func (o *GetBudgetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get budget o k response a status code equal to that given
func (o *GetBudgetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get budget o k response
func (o *GetBudgetOK) Code() int {
	return 200
}

func (o *GetBudgetOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /budgets/{budget_token}][%d] getBudgetOK %s", 200, payload)
}

func (o *GetBudgetOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /budgets/{budget_token}][%d] getBudgetOK %s", 200, payload)
}

func (o *GetBudgetOK) GetPayload() *models.Budget {
	return o.Payload
}

func (o *GetBudgetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Budget)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBudgetNotFound creates a GetBudgetNotFound with default headers values
func NewGetBudgetNotFound() *GetBudgetNotFound {
	return &GetBudgetNotFound{}
}

/*
GetBudgetNotFound describes a response with status code 404, with default header values.

NotFound
*/
type GetBudgetNotFound struct {
	Payload *models.Errors
}

// IsSuccess returns true when this get budget not found response has a 2xx status code
func (o *GetBudgetNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get budget not found response has a 3xx status code
func (o *GetBudgetNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get budget not found response has a 4xx status code
func (o *GetBudgetNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get budget not found response has a 5xx status code
func (o *GetBudgetNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get budget not found response a status code equal to that given
func (o *GetBudgetNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get budget not found response
func (o *GetBudgetNotFound) Code() int {
	return 404
}

func (o *GetBudgetNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /budgets/{budget_token}][%d] getBudgetNotFound %s", 404, payload)
}

func (o *GetBudgetNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /budgets/{budget_token}][%d] getBudgetNotFound %s", 404, payload)
}

func (o *GetBudgetNotFound) GetPayload() *models.Errors {
	return o.Payload
}

func (o *GetBudgetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
