// Code generated by go-swagger; DO NOT EDIT.

package budgets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetBudgetParams creates a new GetBudgetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetBudgetParams() *GetBudgetParams {
	return &GetBudgetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetBudgetParamsWithTimeout creates a new GetBudgetParams object
// with the ability to set a timeout on a request.
func NewGetBudgetParamsWithTimeout(timeout time.Duration) *GetBudgetParams {
	return &GetBudgetParams{
		timeout: timeout,
	}
}

// NewGetBudgetParamsWithContext creates a new GetBudgetParams object
// with the ability to set a context for a request.
func NewGetBudgetParamsWithContext(ctx context.Context) *GetBudgetParams {
	return &GetBudgetParams{
		Context: ctx,
	}
}

// NewGetBudgetParamsWithHTTPClient creates a new GetBudgetParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetBudgetParamsWithHTTPClient(client *http.Client) *GetBudgetParams {
	return &GetBudgetParams{
		HTTPClient: client,
	}
}

/*
GetBudgetParams contains all the parameters to send to the API endpoint

	for the get budget operation.

	Typically these are written to a http.Request.
*/
type GetBudgetParams struct {

	// BudgetToken.
	BudgetToken string

	/* IncludePerformance.

	   Include performance data.
	*/
	IncludePerformance *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get budget params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetBudgetParams) WithDefaults() *GetBudgetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get budget params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetBudgetParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get budget params
func (o *GetBudgetParams) WithTimeout(timeout time.Duration) *GetBudgetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get budget params
func (o *GetBudgetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get budget params
func (o *GetBudgetParams) WithContext(ctx context.Context) *GetBudgetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get budget params
func (o *GetBudgetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get budget params
func (o *GetBudgetParams) WithHTTPClient(client *http.Client) *GetBudgetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get budget params
func (o *GetBudgetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBudgetToken adds the budgetToken to the get budget params
func (o *GetBudgetParams) WithBudgetToken(budgetToken string) *GetBudgetParams {
	o.SetBudgetToken(budgetToken)
	return o
}

// SetBudgetToken adds the budgetToken to the get budget params
func (o *GetBudgetParams) SetBudgetToken(budgetToken string) {
	o.BudgetToken = budgetToken
}

// WithIncludePerformance adds the includePerformance to the get budget params
func (o *GetBudgetParams) WithIncludePerformance(includePerformance *bool) *GetBudgetParams {
	o.SetIncludePerformance(includePerformance)
	return o
}

// SetIncludePerformance adds the includePerformance to the get budget params
func (o *GetBudgetParams) SetIncludePerformance(includePerformance *bool) {
	o.IncludePerformance = includePerformance
}

// WriteToRequest writes these params to a swagger request
func (o *GetBudgetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param budget_token
	if err := r.SetPathParam("budget_token", o.BudgetToken); err != nil {
		return err
	}

	if o.IncludePerformance != nil {

		// query param include_performance
		var qrIncludePerformance bool

		if o.IncludePerformance != nil {
			qrIncludePerformance = *o.IncludePerformance
		}
		qIncludePerformance := swag.FormatBool(qrIncludePerformance)
		if qIncludePerformance != "" {

			if err := r.SetQueryParam("include_performance", qIncludePerformance); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
