// Code generated by go-swagger; DO NOT EDIT.

package cost_alerts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/vantage-sh/vantage-go/vantagev2/models"
)

// NewUpdateCostAlertParams creates a new UpdateCostAlertParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateCostAlertParams() *UpdateCostAlertParams {
	return &UpdateCostAlertParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateCostAlertParamsWithTimeout creates a new UpdateCostAlertParams object
// with the ability to set a timeout on a request.
func NewUpdateCostAlertParamsWithTimeout(timeout time.Duration) *UpdateCostAlertParams {
	return &UpdateCostAlertParams{
		timeout: timeout,
	}
}

// NewUpdateCostAlertParamsWithContext creates a new UpdateCostAlertParams object
// with the ability to set a context for a request.
func NewUpdateCostAlertParamsWithContext(ctx context.Context) *UpdateCostAlertParams {
	return &UpdateCostAlertParams{
		Context: ctx,
	}
}

// NewUpdateCostAlertParamsWithHTTPClient creates a new UpdateCostAlertParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateCostAlertParamsWithHTTPClient(client *http.Client) *UpdateCostAlertParams {
	return &UpdateCostAlertParams{
		HTTPClient: client,
	}
}

/*
UpdateCostAlertParams contains all the parameters to send to the API endpoint

	for the update cost alert operation.

	Typically these are written to a http.Request.
*/
type UpdateCostAlertParams struct {

	/* CostAlertToken.

	   The token of the Cost Alert.
	*/
	CostAlertToken string

	// UpdateCostAlert.
	UpdateCostAlert *models.UpdateCostAlert

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update cost alert params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateCostAlertParams) WithDefaults() *UpdateCostAlertParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update cost alert params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateCostAlertParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update cost alert params
func (o *UpdateCostAlertParams) WithTimeout(timeout time.Duration) *UpdateCostAlertParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update cost alert params
func (o *UpdateCostAlertParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update cost alert params
func (o *UpdateCostAlertParams) WithContext(ctx context.Context) *UpdateCostAlertParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update cost alert params
func (o *UpdateCostAlertParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update cost alert params
func (o *UpdateCostAlertParams) WithHTTPClient(client *http.Client) *UpdateCostAlertParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update cost alert params
func (o *UpdateCostAlertParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCostAlertToken adds the costAlertToken to the update cost alert params
func (o *UpdateCostAlertParams) WithCostAlertToken(costAlertToken string) *UpdateCostAlertParams {
	o.SetCostAlertToken(costAlertToken)
	return o
}

// SetCostAlertToken adds the costAlertToken to the update cost alert params
func (o *UpdateCostAlertParams) SetCostAlertToken(costAlertToken string) {
	o.CostAlertToken = costAlertToken
}

// WithUpdateCostAlert adds the updateCostAlert to the update cost alert params
func (o *UpdateCostAlertParams) WithUpdateCostAlert(updateCostAlert *models.UpdateCostAlert) *UpdateCostAlertParams {
	o.SetUpdateCostAlert(updateCostAlert)
	return o
}

// SetUpdateCostAlert adds the updateCostAlert to the update cost alert params
func (o *UpdateCostAlertParams) SetUpdateCostAlert(updateCostAlert *models.UpdateCostAlert) {
	o.UpdateCostAlert = updateCostAlert
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateCostAlertParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param cost_alert_token
	if err := r.SetPathParam("cost_alert_token", o.CostAlertToken); err != nil {
		return err
	}
	if o.UpdateCostAlert != nil {
		if err := r.SetBodyParam(o.UpdateCostAlert); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
