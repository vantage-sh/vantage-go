// Code generated by go-swagger; DO NOT EDIT.

package costs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vantage-sh/vantage-go/vantagev2/models"
)

// GetCostReportReader is a Reader for the GetCostReport structure.
type GetCostReportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCostReportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCostReportOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetCostReportNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cost_reports/{cost_report_token}] getCostReport", response, response.Code())
	}
}

// NewGetCostReportOK creates a GetCostReportOK with default headers values
func NewGetCostReportOK() *GetCostReportOK {
	return &GetCostReportOK{}
}

/*
GetCostReportOK describes a response with status code 200, with default header values.

GetCostReportOK get cost report o k
*/
type GetCostReportOK struct {
	Payload *models.CostReport
}

// IsSuccess returns true when this get cost report o k response has a 2xx status code
func (o *GetCostReportOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get cost report o k response has a 3xx status code
func (o *GetCostReportOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cost report o k response has a 4xx status code
func (o *GetCostReportOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get cost report o k response has a 5xx status code
func (o *GetCostReportOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get cost report o k response a status code equal to that given
func (o *GetCostReportOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get cost report o k response
func (o *GetCostReportOK) Code() int {
	return 200
}

func (o *GetCostReportOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cost_reports/{cost_report_token}][%d] getCostReportOK %s", 200, payload)
}

func (o *GetCostReportOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cost_reports/{cost_report_token}][%d] getCostReportOK %s", 200, payload)
}

func (o *GetCostReportOK) GetPayload() *models.CostReport {
	return o.Payload
}

func (o *GetCostReportOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CostReport)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCostReportNotFound creates a GetCostReportNotFound with default headers values
func NewGetCostReportNotFound() *GetCostReportNotFound {
	return &GetCostReportNotFound{}
}

/*
GetCostReportNotFound describes a response with status code 404, with default header values.

NotFound
*/
type GetCostReportNotFound struct {
	Payload *models.Errors
}

// IsSuccess returns true when this get cost report not found response has a 2xx status code
func (o *GetCostReportNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cost report not found response has a 3xx status code
func (o *GetCostReportNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cost report not found response has a 4xx status code
func (o *GetCostReportNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cost report not found response has a 5xx status code
func (o *GetCostReportNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get cost report not found response a status code equal to that given
func (o *GetCostReportNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get cost report not found response
func (o *GetCostReportNotFound) Code() int {
	return 404
}

func (o *GetCostReportNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cost_reports/{cost_report_token}][%d] getCostReportNotFound %s", 404, payload)
}

func (o *GetCostReportNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cost_reports/{cost_report_token}][%d] getCostReportNotFound %s", 404, payload)
}

func (o *GetCostReportNotFound) GetPayload() *models.Errors {
	return o.Payload
}

func (o *GetCostReportNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
