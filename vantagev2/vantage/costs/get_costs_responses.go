// Code generated by go-swagger; DO NOT EDIT.

package costs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vantage-sh/vantage-go/vantagev2/models"
)

// GetCostsReader is a Reader for the GetCosts structure.
type GetCostsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCostsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCostsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCostsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 402:
		result := NewGetCostsPaymentRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCostsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /costs] getCosts", response, response.Code())
	}
}

// NewGetCostsOK creates a GetCostsOK with default headers values
func NewGetCostsOK() *GetCostsOK {
	return &GetCostsOK{}
}

/*
GetCostsOK describes a response with status code 200, with default header values.

GetCostsOK get costs o k
*/
type GetCostsOK struct {
	Payload *models.Costs
}

// IsSuccess returns true when this get costs o k response has a 2xx status code
func (o *GetCostsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get costs o k response has a 3xx status code
func (o *GetCostsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get costs o k response has a 4xx status code
func (o *GetCostsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get costs o k response has a 5xx status code
func (o *GetCostsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get costs o k response a status code equal to that given
func (o *GetCostsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get costs o k response
func (o *GetCostsOK) Code() int {
	return 200
}

func (o *GetCostsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /costs][%d] getCostsOK %s", 200, payload)
}

func (o *GetCostsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /costs][%d] getCostsOK %s", 200, payload)
}

func (o *GetCostsOK) GetPayload() *models.Costs {
	return o.Payload
}

func (o *GetCostsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Costs)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCostsBadRequest creates a GetCostsBadRequest with default headers values
func NewGetCostsBadRequest() *GetCostsBadRequest {
	return &GetCostsBadRequest{}
}

/*
GetCostsBadRequest describes a response with status code 400, with default header values.

BadRequest
*/
type GetCostsBadRequest struct {
	Payload *models.Errors
}

// IsSuccess returns true when this get costs bad request response has a 2xx status code
func (o *GetCostsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get costs bad request response has a 3xx status code
func (o *GetCostsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get costs bad request response has a 4xx status code
func (o *GetCostsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get costs bad request response has a 5xx status code
func (o *GetCostsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get costs bad request response a status code equal to that given
func (o *GetCostsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get costs bad request response
func (o *GetCostsBadRequest) Code() int {
	return 400
}

func (o *GetCostsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /costs][%d] getCostsBadRequest %s", 400, payload)
}

func (o *GetCostsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /costs][%d] getCostsBadRequest %s", 400, payload)
}

func (o *GetCostsBadRequest) GetPayload() *models.Errors {
	return o.Payload
}

func (o *GetCostsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCostsPaymentRequired creates a GetCostsPaymentRequired with default headers values
func NewGetCostsPaymentRequired() *GetCostsPaymentRequired {
	return &GetCostsPaymentRequired{}
}

/*
GetCostsPaymentRequired describes a response with status code 402, with default header values.

PaymentRequired
*/
type GetCostsPaymentRequired struct {
	Payload *models.Errors
}

// IsSuccess returns true when this get costs payment required response has a 2xx status code
func (o *GetCostsPaymentRequired) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get costs payment required response has a 3xx status code
func (o *GetCostsPaymentRequired) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get costs payment required response has a 4xx status code
func (o *GetCostsPaymentRequired) IsClientError() bool {
	return true
}

// IsServerError returns true when this get costs payment required response has a 5xx status code
func (o *GetCostsPaymentRequired) IsServerError() bool {
	return false
}

// IsCode returns true when this get costs payment required response a status code equal to that given
func (o *GetCostsPaymentRequired) IsCode(code int) bool {
	return code == 402
}

// Code gets the status code for the get costs payment required response
func (o *GetCostsPaymentRequired) Code() int {
	return 402
}

func (o *GetCostsPaymentRequired) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /costs][%d] getCostsPaymentRequired %s", 402, payload)
}

func (o *GetCostsPaymentRequired) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /costs][%d] getCostsPaymentRequired %s", 402, payload)
}

func (o *GetCostsPaymentRequired) GetPayload() *models.Errors {
	return o.Payload
}

func (o *GetCostsPaymentRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCostsNotFound creates a GetCostsNotFound with default headers values
func NewGetCostsNotFound() *GetCostsNotFound {
	return &GetCostsNotFound{}
}

/*
GetCostsNotFound describes a response with status code 404, with default header values.

NotFound
*/
type GetCostsNotFound struct {
	Payload *models.Errors
}

// IsSuccess returns true when this get costs not found response has a 2xx status code
func (o *GetCostsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get costs not found response has a 3xx status code
func (o *GetCostsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get costs not found response has a 4xx status code
func (o *GetCostsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get costs not found response has a 5xx status code
func (o *GetCostsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get costs not found response a status code equal to that given
func (o *GetCostsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get costs not found response
func (o *GetCostsNotFound) Code() int {
	return 404
}

func (o *GetCostsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /costs][%d] getCostsNotFound %s", 404, payload)
}

func (o *GetCostsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /costs][%d] getCostsNotFound %s", 404, payload)
}

func (o *GetCostsNotFound) GetPayload() *models.Errors {
	return o.Payload
}

func (o *GetCostsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
