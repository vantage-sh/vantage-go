// Code generated by go-swagger; DO NOT EDIT.

package workspaces

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vantage-sh/vantage-go/vantagev2/models"
)

// GetWorkspaceReader is a Reader for the GetWorkspace structure.
type GetWorkspaceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWorkspaceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWorkspaceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetWorkspaceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /workspaces/{workspace_token}] getWorkspace", response, response.Code())
	}
}

// NewGetWorkspaceOK creates a GetWorkspaceOK with default headers values
func NewGetWorkspaceOK() *GetWorkspaceOK {
	return &GetWorkspaceOK{}
}

/*
GetWorkspaceOK describes a response with status code 200, with default header values.

GetWorkspaceOK get workspace o k
*/
type GetWorkspaceOK struct {
	Payload *models.Workspace
}

// IsSuccess returns true when this get workspace o k response has a 2xx status code
func (o *GetWorkspaceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get workspace o k response has a 3xx status code
func (o *GetWorkspaceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workspace o k response has a 4xx status code
func (o *GetWorkspaceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get workspace o k response has a 5xx status code
func (o *GetWorkspaceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get workspace o k response a status code equal to that given
func (o *GetWorkspaceOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get workspace o k response
func (o *GetWorkspaceOK) Code() int {
	return 200
}

func (o *GetWorkspaceOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /workspaces/{workspace_token}][%d] getWorkspaceOK %s", 200, payload)
}

func (o *GetWorkspaceOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /workspaces/{workspace_token}][%d] getWorkspaceOK %s", 200, payload)
}

func (o *GetWorkspaceOK) GetPayload() *models.Workspace {
	return o.Payload
}

func (o *GetWorkspaceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Workspace)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkspaceNotFound creates a GetWorkspaceNotFound with default headers values
func NewGetWorkspaceNotFound() *GetWorkspaceNotFound {
	return &GetWorkspaceNotFound{}
}

/*
GetWorkspaceNotFound describes a response with status code 404, with default header values.

NotFound
*/
type GetWorkspaceNotFound struct {
	Payload *models.Errors
}

// IsSuccess returns true when this get workspace not found response has a 2xx status code
func (o *GetWorkspaceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workspace not found response has a 3xx status code
func (o *GetWorkspaceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workspace not found response has a 4xx status code
func (o *GetWorkspaceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workspace not found response has a 5xx status code
func (o *GetWorkspaceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get workspace not found response a status code equal to that given
func (o *GetWorkspaceNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get workspace not found response
func (o *GetWorkspaceNotFound) Code() int {
	return 404
}

func (o *GetWorkspaceNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /workspaces/{workspace_token}][%d] getWorkspaceNotFound %s", 404, payload)
}

func (o *GetWorkspaceNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /workspaces/{workspace_token}][%d] getWorkspaceNotFound %s", 404, payload)
}

func (o *GetWorkspaceNotFound) GetPayload() *models.Errors {
	return o.Payload
}

func (o *GetWorkspaceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
