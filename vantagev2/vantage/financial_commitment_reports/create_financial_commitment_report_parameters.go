// Code generated by go-swagger; DO NOT EDIT.

package financial_commitment_reports

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/vantage-sh/vantage-go/vantagev2/models"
)

// NewCreateFinancialCommitmentReportParams creates a new CreateFinancialCommitmentReportParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreateFinancialCommitmentReportParams() *CreateFinancialCommitmentReportParams {
	return &CreateFinancialCommitmentReportParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreateFinancialCommitmentReportParamsWithTimeout creates a new CreateFinancialCommitmentReportParams object
// with the ability to set a timeout on a request.
func NewCreateFinancialCommitmentReportParamsWithTimeout(timeout time.Duration) *CreateFinancialCommitmentReportParams {
	return &CreateFinancialCommitmentReportParams{
		timeout: timeout,
	}
}

// NewCreateFinancialCommitmentReportParamsWithContext creates a new CreateFinancialCommitmentReportParams object
// with the ability to set a context for a request.
func NewCreateFinancialCommitmentReportParamsWithContext(ctx context.Context) *CreateFinancialCommitmentReportParams {
	return &CreateFinancialCommitmentReportParams{
		Context: ctx,
	}
}

// NewCreateFinancialCommitmentReportParamsWithHTTPClient creates a new CreateFinancialCommitmentReportParams object
// with the ability to set a custom HTTPClient for a request.
func NewCreateFinancialCommitmentReportParamsWithHTTPClient(client *http.Client) *CreateFinancialCommitmentReportParams {
	return &CreateFinancialCommitmentReportParams{
		HTTPClient: client,
	}
}

/*
CreateFinancialCommitmentReportParams contains all the parameters to send to the API endpoint

	for the create financial commitment report operation.

	Typically these are written to a http.Request.
*/
type CreateFinancialCommitmentReportParams struct {

	// CreateFinancialCommitmentReport.
	CreateFinancialCommitmentReport *models.CreateFinancialCommitmentReport

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create financial commitment report params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateFinancialCommitmentReportParams) WithDefaults() *CreateFinancialCommitmentReportParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create financial commitment report params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateFinancialCommitmentReportParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the create financial commitment report params
func (o *CreateFinancialCommitmentReportParams) WithTimeout(timeout time.Duration) *CreateFinancialCommitmentReportParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create financial commitment report params
func (o *CreateFinancialCommitmentReportParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create financial commitment report params
func (o *CreateFinancialCommitmentReportParams) WithContext(ctx context.Context) *CreateFinancialCommitmentReportParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create financial commitment report params
func (o *CreateFinancialCommitmentReportParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create financial commitment report params
func (o *CreateFinancialCommitmentReportParams) WithHTTPClient(client *http.Client) *CreateFinancialCommitmentReportParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create financial commitment report params
func (o *CreateFinancialCommitmentReportParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCreateFinancialCommitmentReport adds the createFinancialCommitmentReport to the create financial commitment report params
func (o *CreateFinancialCommitmentReportParams) WithCreateFinancialCommitmentReport(createFinancialCommitmentReport *models.CreateFinancialCommitmentReport) *CreateFinancialCommitmentReportParams {
	o.SetCreateFinancialCommitmentReport(createFinancialCommitmentReport)
	return o
}

// SetCreateFinancialCommitmentReport adds the createFinancialCommitmentReport to the create financial commitment report params
func (o *CreateFinancialCommitmentReportParams) SetCreateFinancialCommitmentReport(createFinancialCommitmentReport *models.CreateFinancialCommitmentReport) {
	o.CreateFinancialCommitmentReport = createFinancialCommitmentReport
}

// WriteToRequest writes these params to a swagger request
func (o *CreateFinancialCommitmentReportParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.CreateFinancialCommitmentReport != nil {
		if err := r.SetBodyParam(o.CreateFinancialCommitmentReport); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
