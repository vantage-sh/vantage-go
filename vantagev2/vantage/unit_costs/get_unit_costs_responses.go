// Code generated by go-swagger; DO NOT EDIT.

package unit_costs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vantage-sh/vantage-go/vantagev2/models"
)

// GetUnitCostsReader is a Reader for the GetUnitCosts structure.
type GetUnitCostsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUnitCostsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUnitCostsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUnitCostsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 402:
		result := NewGetUnitCostsPaymentRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUnitCostsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /unit_costs] getUnitCosts", response, response.Code())
	}
}

// NewGetUnitCostsOK creates a GetUnitCostsOK with default headers values
func NewGetUnitCostsOK() *GetUnitCostsOK {
	return &GetUnitCostsOK{}
}

/*
GetUnitCostsOK describes a response with status code 200, with default header values.

GetUnitCostsOK get unit costs o k
*/
type GetUnitCostsOK struct {
	Payload *models.UnitCosts
}

// IsSuccess returns true when this get unit costs o k response has a 2xx status code
func (o *GetUnitCostsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get unit costs o k response has a 3xx status code
func (o *GetUnitCostsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get unit costs o k response has a 4xx status code
func (o *GetUnitCostsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get unit costs o k response has a 5xx status code
func (o *GetUnitCostsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get unit costs o k response a status code equal to that given
func (o *GetUnitCostsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get unit costs o k response
func (o *GetUnitCostsOK) Code() int {
	return 200
}

func (o *GetUnitCostsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /unit_costs][%d] getUnitCostsOK %s", 200, payload)
}

func (o *GetUnitCostsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /unit_costs][%d] getUnitCostsOK %s", 200, payload)
}

func (o *GetUnitCostsOK) GetPayload() *models.UnitCosts {
	return o.Payload
}

func (o *GetUnitCostsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UnitCosts)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUnitCostsBadRequest creates a GetUnitCostsBadRequest with default headers values
func NewGetUnitCostsBadRequest() *GetUnitCostsBadRequest {
	return &GetUnitCostsBadRequest{}
}

/*
GetUnitCostsBadRequest describes a response with status code 400, with default header values.

BadRequest
*/
type GetUnitCostsBadRequest struct {
	Payload *models.Errors
}

// IsSuccess returns true when this get unit costs bad request response has a 2xx status code
func (o *GetUnitCostsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get unit costs bad request response has a 3xx status code
func (o *GetUnitCostsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get unit costs bad request response has a 4xx status code
func (o *GetUnitCostsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get unit costs bad request response has a 5xx status code
func (o *GetUnitCostsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get unit costs bad request response a status code equal to that given
func (o *GetUnitCostsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get unit costs bad request response
func (o *GetUnitCostsBadRequest) Code() int {
	return 400
}

func (o *GetUnitCostsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /unit_costs][%d] getUnitCostsBadRequest %s", 400, payload)
}

func (o *GetUnitCostsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /unit_costs][%d] getUnitCostsBadRequest %s", 400, payload)
}

func (o *GetUnitCostsBadRequest) GetPayload() *models.Errors {
	return o.Payload
}

func (o *GetUnitCostsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUnitCostsPaymentRequired creates a GetUnitCostsPaymentRequired with default headers values
func NewGetUnitCostsPaymentRequired() *GetUnitCostsPaymentRequired {
	return &GetUnitCostsPaymentRequired{}
}

/*
GetUnitCostsPaymentRequired describes a response with status code 402, with default header values.

PaymentRequired
*/
type GetUnitCostsPaymentRequired struct {
	Payload *models.Errors
}

// IsSuccess returns true when this get unit costs payment required response has a 2xx status code
func (o *GetUnitCostsPaymentRequired) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get unit costs payment required response has a 3xx status code
func (o *GetUnitCostsPaymentRequired) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get unit costs payment required response has a 4xx status code
func (o *GetUnitCostsPaymentRequired) IsClientError() bool {
	return true
}

// IsServerError returns true when this get unit costs payment required response has a 5xx status code
func (o *GetUnitCostsPaymentRequired) IsServerError() bool {
	return false
}

// IsCode returns true when this get unit costs payment required response a status code equal to that given
func (o *GetUnitCostsPaymentRequired) IsCode(code int) bool {
	return code == 402
}

// Code gets the status code for the get unit costs payment required response
func (o *GetUnitCostsPaymentRequired) Code() int {
	return 402
}

func (o *GetUnitCostsPaymentRequired) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /unit_costs][%d] getUnitCostsPaymentRequired %s", 402, payload)
}

func (o *GetUnitCostsPaymentRequired) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /unit_costs][%d] getUnitCostsPaymentRequired %s", 402, payload)
}

func (o *GetUnitCostsPaymentRequired) GetPayload() *models.Errors {
	return o.Payload
}

func (o *GetUnitCostsPaymentRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUnitCostsNotFound creates a GetUnitCostsNotFound with default headers values
func NewGetUnitCostsNotFound() *GetUnitCostsNotFound {
	return &GetUnitCostsNotFound{}
}

/*
GetUnitCostsNotFound describes a response with status code 404, with default header values.

NotFound
*/
type GetUnitCostsNotFound struct {
	Payload *models.Errors
}

// IsSuccess returns true when this get unit costs not found response has a 2xx status code
func (o *GetUnitCostsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get unit costs not found response has a 3xx status code
func (o *GetUnitCostsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get unit costs not found response has a 4xx status code
func (o *GetUnitCostsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get unit costs not found response has a 5xx status code
func (o *GetUnitCostsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get unit costs not found response a status code equal to that given
func (o *GetUnitCostsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get unit costs not found response
func (o *GetUnitCostsNotFound) Code() int {
	return 404
}

func (o *GetUnitCostsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /unit_costs][%d] getUnitCostsNotFound %s", 404, payload)
}

func (o *GetUnitCostsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /unit_costs][%d] getUnitCostsNotFound %s", 404, payload)
}

func (o *GetUnitCostsNotFound) GetPayload() *models.Errors {
	return o.Payload
}

func (o *GetUnitCostsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
