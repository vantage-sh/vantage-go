// Code generated by go-swagger; DO NOT EDIT.

package unit_costs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewCreateUnitCostsExportParams creates a new CreateUnitCostsExportParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreateUnitCostsExportParams() *CreateUnitCostsExportParams {
	return &CreateUnitCostsExportParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreateUnitCostsExportParamsWithTimeout creates a new CreateUnitCostsExportParams object
// with the ability to set a timeout on a request.
func NewCreateUnitCostsExportParamsWithTimeout(timeout time.Duration) *CreateUnitCostsExportParams {
	return &CreateUnitCostsExportParams{
		timeout: timeout,
	}
}

// NewCreateUnitCostsExportParamsWithContext creates a new CreateUnitCostsExportParams object
// with the ability to set a context for a request.
func NewCreateUnitCostsExportParamsWithContext(ctx context.Context) *CreateUnitCostsExportParams {
	return &CreateUnitCostsExportParams{
		Context: ctx,
	}
}

// NewCreateUnitCostsExportParamsWithHTTPClient creates a new CreateUnitCostsExportParams object
// with the ability to set a custom HTTPClient for a request.
func NewCreateUnitCostsExportParamsWithHTTPClient(client *http.Client) *CreateUnitCostsExportParams {
	return &CreateUnitCostsExportParams{
		HTTPClient: client,
	}
}

/*
CreateUnitCostsExportParams contains all the parameters to send to the API endpoint

	for the create unit costs export operation.

	Typically these are written to a http.Request.
*/
type CreateUnitCostsExportParams struct {

	/* CostReportToken.

	   The CostReport token.
	*/
	CostReportToken string

	/* DateBin.

	   The date bin of the unit costs. Defaults to the report's default or day.
	*/
	DateBin *string

	/* EndDate.

	   Last date you would like to filter unit costs to. Defaults to the report's default. ISO 8601 formatted.
	*/
	EndDate *string

	/* StartDate.

	   First date you would like to filter unit costs from. Defaults to the report's default. ISO 8601 formatted.
	*/
	StartDate *string

	/* WorkspaceToken.

	   The token of the Workspace to query costs from. Required if the API token is associated with multiple Workspaces.
	*/
	WorkspaceToken *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create unit costs export params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateUnitCostsExportParams) WithDefaults() *CreateUnitCostsExportParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create unit costs export params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateUnitCostsExportParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the create unit costs export params
func (o *CreateUnitCostsExportParams) WithTimeout(timeout time.Duration) *CreateUnitCostsExportParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create unit costs export params
func (o *CreateUnitCostsExportParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create unit costs export params
func (o *CreateUnitCostsExportParams) WithContext(ctx context.Context) *CreateUnitCostsExportParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create unit costs export params
func (o *CreateUnitCostsExportParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create unit costs export params
func (o *CreateUnitCostsExportParams) WithHTTPClient(client *http.Client) *CreateUnitCostsExportParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create unit costs export params
func (o *CreateUnitCostsExportParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCostReportToken adds the costReportToken to the create unit costs export params
func (o *CreateUnitCostsExportParams) WithCostReportToken(costReportToken string) *CreateUnitCostsExportParams {
	o.SetCostReportToken(costReportToken)
	return o
}

// SetCostReportToken adds the costReportToken to the create unit costs export params
func (o *CreateUnitCostsExportParams) SetCostReportToken(costReportToken string) {
	o.CostReportToken = costReportToken
}

// WithDateBin adds the dateBin to the create unit costs export params
func (o *CreateUnitCostsExportParams) WithDateBin(dateBin *string) *CreateUnitCostsExportParams {
	o.SetDateBin(dateBin)
	return o
}

// SetDateBin adds the dateBin to the create unit costs export params
func (o *CreateUnitCostsExportParams) SetDateBin(dateBin *string) {
	o.DateBin = dateBin
}

// WithEndDate adds the endDate to the create unit costs export params
func (o *CreateUnitCostsExportParams) WithEndDate(endDate *string) *CreateUnitCostsExportParams {
	o.SetEndDate(endDate)
	return o
}

// SetEndDate adds the endDate to the create unit costs export params
func (o *CreateUnitCostsExportParams) SetEndDate(endDate *string) {
	o.EndDate = endDate
}

// WithStartDate adds the startDate to the create unit costs export params
func (o *CreateUnitCostsExportParams) WithStartDate(startDate *string) *CreateUnitCostsExportParams {
	o.SetStartDate(startDate)
	return o
}

// SetStartDate adds the startDate to the create unit costs export params
func (o *CreateUnitCostsExportParams) SetStartDate(startDate *string) {
	o.StartDate = startDate
}

// WithWorkspaceToken adds the workspaceToken to the create unit costs export params
func (o *CreateUnitCostsExportParams) WithWorkspaceToken(workspaceToken *string) *CreateUnitCostsExportParams {
	o.SetWorkspaceToken(workspaceToken)
	return o
}

// SetWorkspaceToken adds the workspaceToken to the create unit costs export params
func (o *CreateUnitCostsExportParams) SetWorkspaceToken(workspaceToken *string) {
	o.WorkspaceToken = workspaceToken
}

// WriteToRequest writes these params to a swagger request
func (o *CreateUnitCostsExportParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// form param cost_report_token
	frCostReportToken := o.CostReportToken
	fCostReportToken := frCostReportToken
	if fCostReportToken != "" {
		if err := r.SetFormParam("cost_report_token", fCostReportToken); err != nil {
			return err
		}
	}

	if o.DateBin != nil {

		// form param date_bin
		var frDateBin string
		if o.DateBin != nil {
			frDateBin = *o.DateBin
		}
		fDateBin := frDateBin
		if fDateBin != "" {
			if err := r.SetFormParam("date_bin", fDateBin); err != nil {
				return err
			}
		}
	}

	if o.EndDate != nil {

		// form param end_date
		var frEndDate string
		if o.EndDate != nil {
			frEndDate = *o.EndDate
		}
		fEndDate := frEndDate
		if fEndDate != "" {
			if err := r.SetFormParam("end_date", fEndDate); err != nil {
				return err
			}
		}
	}

	if o.StartDate != nil {

		// form param start_date
		var frStartDate string
		if o.StartDate != nil {
			frStartDate = *o.StartDate
		}
		fStartDate := frStartDate
		if fStartDate != "" {
			if err := r.SetFormParam("start_date", fStartDate); err != nil {
				return err
			}
		}
	}

	if o.WorkspaceToken != nil {

		// form param workspace_token
		var frWorkspaceToken string
		if o.WorkspaceToken != nil {
			frWorkspaceToken = *o.WorkspaceToken
		}
		fWorkspaceToken := frWorkspaceToken
		if fWorkspaceToken != "" {
			if err := r.SetFormParam("workspace_token", fWorkspaceToken); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
