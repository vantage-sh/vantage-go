// Code generated by go-swagger; DO NOT EDIT.

package tags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetTagValuesParams creates a new GetTagValuesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetTagValuesParams() *GetTagValuesParams {
	return &GetTagValuesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetTagValuesParamsWithTimeout creates a new GetTagValuesParams object
// with the ability to set a timeout on a request.
func NewGetTagValuesParamsWithTimeout(timeout time.Duration) *GetTagValuesParams {
	return &GetTagValuesParams{
		timeout: timeout,
	}
}

// NewGetTagValuesParamsWithContext creates a new GetTagValuesParams object
// with the ability to set a context for a request.
func NewGetTagValuesParamsWithContext(ctx context.Context) *GetTagValuesParams {
	return &GetTagValuesParams{
		Context: ctx,
	}
}

// NewGetTagValuesParamsWithHTTPClient creates a new GetTagValuesParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetTagValuesParamsWithHTTPClient(client *http.Client) *GetTagValuesParams {
	return &GetTagValuesParams{
		HTTPClient: client,
	}
}

/*
GetTagValuesParams contains all the parameters to send to the API endpoint

	for the get tag values operation.

	Typically these are written to a http.Request.
*/
type GetTagValuesParams struct {

	/* Key.

	   The key of the Tag for which you would like to retrieve TagValues.
	*/
	Key string

	/* Limit.

	   The number of results to return per page. Defaults to 100. The maximum is 1000.

	   Format: int32
	   Default: 100
	*/
	Limit *int32

	/* Page.

	   The page of results to return.

	   Format: int32
	   Default: 1
	*/
	Page *int32

	/* Providers.

	   An array of providers to scope TagValues by.
	*/
	Providers []string

	/* SearchQuery.

	   A search query to filter TagValues by the value name.
	*/
	SearchQuery *string

	/* SortDirection.

	   The direction in which to sort the TagValues. Defaults to 'asc'.

	   Default: "asc"
	*/
	SortDirection *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get tag values params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetTagValuesParams) WithDefaults() *GetTagValuesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get tag values params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetTagValuesParams) SetDefaults() {
	var (
		limitDefault = int32(100)

		pageDefault = int32(1)

		sortDirectionDefault = string("asc")
	)

	val := GetTagValuesParams{
		Limit:         &limitDefault,
		Page:          &pageDefault,
		SortDirection: &sortDirectionDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get tag values params
func (o *GetTagValuesParams) WithTimeout(timeout time.Duration) *GetTagValuesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get tag values params
func (o *GetTagValuesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get tag values params
func (o *GetTagValuesParams) WithContext(ctx context.Context) *GetTagValuesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get tag values params
func (o *GetTagValuesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get tag values params
func (o *GetTagValuesParams) WithHTTPClient(client *http.Client) *GetTagValuesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get tag values params
func (o *GetTagValuesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithKey adds the key to the get tag values params
func (o *GetTagValuesParams) WithKey(key string) *GetTagValuesParams {
	o.SetKey(key)
	return o
}

// SetKey adds the key to the get tag values params
func (o *GetTagValuesParams) SetKey(key string) {
	o.Key = key
}

// WithLimit adds the limit to the get tag values params
func (o *GetTagValuesParams) WithLimit(limit *int32) *GetTagValuesParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the get tag values params
func (o *GetTagValuesParams) SetLimit(limit *int32) {
	o.Limit = limit
}

// WithPage adds the page to the get tag values params
func (o *GetTagValuesParams) WithPage(page *int32) *GetTagValuesParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the get tag values params
func (o *GetTagValuesParams) SetPage(page *int32) {
	o.Page = page
}

// WithProviders adds the providers to the get tag values params
func (o *GetTagValuesParams) WithProviders(providers []string) *GetTagValuesParams {
	o.SetProviders(providers)
	return o
}

// SetProviders adds the providers to the get tag values params
func (o *GetTagValuesParams) SetProviders(providers []string) {
	o.Providers = providers
}

// WithSearchQuery adds the searchQuery to the get tag values params
func (o *GetTagValuesParams) WithSearchQuery(searchQuery *string) *GetTagValuesParams {
	o.SetSearchQuery(searchQuery)
	return o
}

// SetSearchQuery adds the searchQuery to the get tag values params
func (o *GetTagValuesParams) SetSearchQuery(searchQuery *string) {
	o.SearchQuery = searchQuery
}

// WithSortDirection adds the sortDirection to the get tag values params
func (o *GetTagValuesParams) WithSortDirection(sortDirection *string) *GetTagValuesParams {
	o.SetSortDirection(sortDirection)
	return o
}

// SetSortDirection adds the sortDirection to the get tag values params
func (o *GetTagValuesParams) SetSortDirection(sortDirection *string) {
	o.SortDirection = sortDirection
}

// WriteToRequest writes these params to a swagger request
func (o *GetTagValuesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param key
	if err := r.SetPathParam("key", o.Key); err != nil {
		return err
	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int32

		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt32(qrLimit)
		if qLimit != "" {

			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}
	}

	if o.Page != nil {

		// query param page
		var qrPage int32

		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt32(qrPage)
		if qPage != "" {

			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}
	}

	if o.Providers != nil {

		// binding items for providers
		joinedProviders := o.bindParamProviders(reg)

		// query array param providers
		if err := r.SetQueryParam("providers", joinedProviders...); err != nil {
			return err
		}
	}

	if o.SearchQuery != nil {

		// query param search_query
		var qrSearchQuery string

		if o.SearchQuery != nil {
			qrSearchQuery = *o.SearchQuery
		}
		qSearchQuery := qrSearchQuery
		if qSearchQuery != "" {

			if err := r.SetQueryParam("search_query", qSearchQuery); err != nil {
				return err
			}
		}
	}

	if o.SortDirection != nil {

		// query param sort_direction
		var qrSortDirection string

		if o.SortDirection != nil {
			qrSortDirection = *o.SortDirection
		}
		qSortDirection := qrSortDirection
		if qSortDirection != "" {

			if err := r.SetQueryParam("sort_direction", qSortDirection); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetTagValues binds the parameter providers
func (o *GetTagValuesParams) bindParamProviders(formats strfmt.Registry) []string {
	providersIR := o.Providers

	var providersIC []string
	for _, providersIIR := range providersIR { // explode []string

		providersIIV := providersIIR // string as string
		providersIC = append(providersIC, providersIIV)
	}

	// items.CollectionFormat: ""
	providersIS := swag.JoinByFormat(providersIC, "")

	return providersIS
}
