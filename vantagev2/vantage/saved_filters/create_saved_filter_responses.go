// Code generated by go-swagger; DO NOT EDIT.

package saved_filters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vantage-sh/vantage-go/vantagev2/models"
)

// CreateSavedFilterReader is a Reader for the CreateSavedFilter structure.
type CreateSavedFilterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateSavedFilterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateSavedFilterCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateSavedFilterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateSavedFilterUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /saved_filters] createSavedFilter", response, response.Code())
	}
}

// NewCreateSavedFilterCreated creates a CreateSavedFilterCreated with default headers values
func NewCreateSavedFilterCreated() *CreateSavedFilterCreated {
	return &CreateSavedFilterCreated{}
}

/*
CreateSavedFilterCreated describes a response with status code 201, with default header values.

CreateSavedFilterCreated create saved filter created
*/
type CreateSavedFilterCreated struct {
	Payload *models.SavedFilter
}

// IsSuccess returns true when this create saved filter created response has a 2xx status code
func (o *CreateSavedFilterCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create saved filter created response has a 3xx status code
func (o *CreateSavedFilterCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create saved filter created response has a 4xx status code
func (o *CreateSavedFilterCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create saved filter created response has a 5xx status code
func (o *CreateSavedFilterCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create saved filter created response a status code equal to that given
func (o *CreateSavedFilterCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create saved filter created response
func (o *CreateSavedFilterCreated) Code() int {
	return 201
}

func (o *CreateSavedFilterCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /saved_filters][%d] createSavedFilterCreated %s", 201, payload)
}

func (o *CreateSavedFilterCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /saved_filters][%d] createSavedFilterCreated %s", 201, payload)
}

func (o *CreateSavedFilterCreated) GetPayload() *models.SavedFilter {
	return o.Payload
}

func (o *CreateSavedFilterCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SavedFilter)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSavedFilterBadRequest creates a CreateSavedFilterBadRequest with default headers values
func NewCreateSavedFilterBadRequest() *CreateSavedFilterBadRequest {
	return &CreateSavedFilterBadRequest{}
}

/*
CreateSavedFilterBadRequest describes a response with status code 400, with default header values.

BadRequest
*/
type CreateSavedFilterBadRequest struct {
	Payload *models.Errors
}

// IsSuccess returns true when this create saved filter bad request response has a 2xx status code
func (o *CreateSavedFilterBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create saved filter bad request response has a 3xx status code
func (o *CreateSavedFilterBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create saved filter bad request response has a 4xx status code
func (o *CreateSavedFilterBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create saved filter bad request response has a 5xx status code
func (o *CreateSavedFilterBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create saved filter bad request response a status code equal to that given
func (o *CreateSavedFilterBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create saved filter bad request response
func (o *CreateSavedFilterBadRequest) Code() int {
	return 400
}

func (o *CreateSavedFilterBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /saved_filters][%d] createSavedFilterBadRequest %s", 400, payload)
}

func (o *CreateSavedFilterBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /saved_filters][%d] createSavedFilterBadRequest %s", 400, payload)
}

func (o *CreateSavedFilterBadRequest) GetPayload() *models.Errors {
	return o.Payload
}

func (o *CreateSavedFilterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSavedFilterUnprocessableEntity creates a CreateSavedFilterUnprocessableEntity with default headers values
func NewCreateSavedFilterUnprocessableEntity() *CreateSavedFilterUnprocessableEntity {
	return &CreateSavedFilterUnprocessableEntity{}
}

/*
CreateSavedFilterUnprocessableEntity describes a response with status code 422, with default header values.

UnprocessableEntity
*/
type CreateSavedFilterUnprocessableEntity struct {
	Payload *models.Errors
}

// IsSuccess returns true when this create saved filter unprocessable entity response has a 2xx status code
func (o *CreateSavedFilterUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create saved filter unprocessable entity response has a 3xx status code
func (o *CreateSavedFilterUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create saved filter unprocessable entity response has a 4xx status code
func (o *CreateSavedFilterUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create saved filter unprocessable entity response has a 5xx status code
func (o *CreateSavedFilterUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create saved filter unprocessable entity response a status code equal to that given
func (o *CreateSavedFilterUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create saved filter unprocessable entity response
func (o *CreateSavedFilterUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateSavedFilterUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /saved_filters][%d] createSavedFilterUnprocessableEntity %s", 422, payload)
}

func (o *CreateSavedFilterUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /saved_filters][%d] createSavedFilterUnprocessableEntity %s", 422, payload)
}

func (o *CreateSavedFilterUnprocessableEntity) GetPayload() *models.Errors {
	return o.Payload
}

func (o *CreateSavedFilterUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
