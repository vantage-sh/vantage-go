// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AuditLog AuditLog model
//
// swagger:model AuditLog
type AuditLog struct {

	// The changed values of the object.
	ChangedValues interface{} `json:"changed_values,omitempty"`

	// The date and time, in UTC, the audit log was created. ISO 8601 Formatted.
	// Example: 2021-07-09T00:00:00Z
	CreatedAt string `json:"created_at,omitempty"`

	// The event type of the audit log.
	// Example: record_created
	Event string `json:"event,omitempty"`

	// The title of the audited object.
	// Example: Production Cost Report
	ObjectTitle string `json:"object_title,omitempty"`

	// The token of the audited object.
	// Example: rpt_1234567890abcdef
	ObjectToken string `json:"object_token,omitempty"`

	// The type of the audited object.
	// Example: Report
	ObjectType string `json:"object_type,omitempty"`

	// The source of the action (console, api, developer).
	// Example: console
	Source string `json:"source,omitempty"`

	// The unique token identifying the audit log.
	// Example: adt_lg_1234567890abcdef
	Token string `json:"token,omitempty"`

	// The unchanged values of the object.
	UnchangedValues interface{} `json:"unchanged_values,omitempty"`

	// The name of the user who performed the action.
	User string `json:"user,omitempty"`

	// The name of the workspace associated with the audit log.
	WorkspaceTitle string `json:"workspace_title,omitempty"`

	// The token of the workspace associated with the audit log.
	// Example: wrkspc_1234567890abcdef
	WorkspaceToken string `json:"workspace_token,omitempty"`
}

// Validate validates this audit log
func (m *AuditLog) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this audit log based on context it is used
func (m *AuditLog) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AuditLog) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AuditLog) UnmarshalBinary(b []byte) error {
	var res AuditLog
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
