// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// BillingInformation billing information
//
// swagger:model BillingInformation
type BillingInformation struct {

	// First line of billing address
	AddressLine1 string `json:"address_line_1,omitempty"`

	// Second line of billing address
	AddressLine2 string `json:"address_line_2,omitempty"`

	// Array of billing email addresses
	BillingEmail []string `json:"billing_email"`

	// City for billing address
	City string `json:"city,omitempty"`

	// Company name for billing
	CompanyName string `json:"company_name,omitempty"`

	// ISO country code
	CountryCode string `json:"country_code,omitempty"`

	// Postal or ZIP code
	PostalCode string `json:"postal_code,omitempty"`

	// State or province for billing address
	State string `json:"state,omitempty"`

	// token
	Token string `json:"token,omitempty"`
}

// Validate validates this billing information
func (m *BillingInformation) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this billing information based on context it is used
func (m *BillingInformation) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *BillingInformation) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BillingInformation) UnmarshalBinary(b []byte) error {
	var res BillingInformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
