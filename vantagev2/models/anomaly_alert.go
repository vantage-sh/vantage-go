// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AnomalyAlert AnomalyAlert model
//
// swagger:model AnomalyAlert
type AnomalyAlert struct {

	// The date and time, in UTC, the AnomalyAlert is sent. ISO 8601 Formatted.
	// Example: 2021-07-09T00:00:00Z
	AlertedAt string `json:"alerted_at,omitempty"`

	// The amount observed.
	Amount string `json:"amount,omitempty"`

	// The category of the AnomalyAlert.
	Category string `json:"category,omitempty"`

	// The token of the Report associated with the AnomalyAlert.
	CostReportToken string `json:"cost_report_token,omitempty"`

	// The date and time, in UTC, the AnomalyAlert was created. ISO 8601 Formatted.
	// Example: 2021-07-09T00:00:00Z
	CreatedAt string `json:"created_at,omitempty"`

	// The user-provided feedback of why alert was ignored/archived.
	Feedback string `json:"feedback,omitempty"`

	// The previous amount observed.
	PreviousAmount string `json:"previous_amount,omitempty"`

	// The provider of the service causing the AnomalyAlert.
	Provider string `json:"provider,omitempty"`

	// The names of the resources the AnomalyAlert was attributed to.
	Resources []string `json:"resources"`

	// The provider service causing the AnomalyAlert.
	Service string `json:"service,omitempty"`

	// The seven day average of the amount observed.
	SevenDayAverage string `json:"seven_day_average,omitempty"`

	// The status of the AnomalyAlert.
	Status string `json:"status,omitempty"`

	// token
	Token string `json:"token,omitempty"`
}

// Validate validates this anomaly alert
func (m *AnomalyAlert) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this anomaly alert based on context it is used
func (m *AnomalyAlert) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AnomalyAlert) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AnomalyAlert) UnmarshalBinary(b []byte) error {
	var res AnomalyAlert
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
