// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Cost cost
//
// swagger:model Cost
type Cost struct {

	// The cost provider's account id that incurred the cost.
	// Example: 9109237192
	AccountID string `json:"account_id,omitempty"`

	// The date the cost was accrued. ISO 8601 Formatted.
	// Example: 2023-09-05+00:00
	AccruedAt string `json:"accrued_at,omitempty"`

	// The amount of the cost.
	// Example: 4.25
	Amount string `json:"amount,omitempty"`

	// The cost provider's billing account id that incurred the cost.
	// Example: 9109237192
	BillingAccountID string `json:"billing_account_id,omitempty"`

	// The category for the cost.
	// Example: Data Transfer
	CostCategory string `json:"cost_category,omitempty"`

	// The subcategory for the cost.
	// Example: DataTransfer-Regional-Bytes
	CostSubcategory string `json:"cost_subcategory,omitempty"`

	// The currency of the cost.
	// Example: USD
	Currency string `json:"currency,omitempty"`

	// links
	Links interface{} `json:"links,omitempty"`

	// The cost provider which incurred the cost.
	// Example: aws
	// Enum: ["aws","azure","gcp","snowflake","databricks","mongo","datadog","fastly","new_relic","opencost","open_ai","oracle","confluent","planetscale","coralogix","kubernetes"]
	Provider string `json:"provider,omitempty"`

	// The region which incurred the cost.
	// Example: us-east-1
	Region string `json:"region,omitempty"`

	// The resource id which incurred the cost.
	// Example: arn:aws:ec2:us-east-1:123456789012:instance/i-1234567890abcdef0
	ResourceID string `json:"resource_id,omitempty"`

	// The service which incurred the cost.
	// Example: Amazon Elastic Compute Cloud - Compute
	Service string `json:"service,omitempty"`

	// The tag attached to the cost that was incurred.
	// DEPRECATED: does not support multiple tags.
	// Example: production
	Tag string `json:"tag,omitempty"`

	// The tag pairs attached to the cost that was incurred.
	Tags []string `json:"tags"`
}

// Validate validates this cost
func (m *Cost) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateProvider(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var costTypeProviderPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["aws","azure","gcp","snowflake","databricks","mongo","datadog","fastly","new_relic","opencost","open_ai","oracle","confluent","planetscale","coralogix","kubernetes"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		costTypeProviderPropEnum = append(costTypeProviderPropEnum, v)
	}
}

const (

	// CostProviderAws captures enum value "aws"
	CostProviderAws string = "aws"

	// CostProviderAzure captures enum value "azure"
	CostProviderAzure string = "azure"

	// CostProviderGcp captures enum value "gcp"
	CostProviderGcp string = "gcp"

	// CostProviderSnowflake captures enum value "snowflake"
	CostProviderSnowflake string = "snowflake"

	// CostProviderDatabricks captures enum value "databricks"
	CostProviderDatabricks string = "databricks"

	// CostProviderMongo captures enum value "mongo"
	CostProviderMongo string = "mongo"

	// CostProviderDatadog captures enum value "datadog"
	CostProviderDatadog string = "datadog"

	// CostProviderFastly captures enum value "fastly"
	CostProviderFastly string = "fastly"

	// CostProviderNewRelic captures enum value "new_relic"
	CostProviderNewRelic string = "new_relic"

	// CostProviderOpencost captures enum value "opencost"
	CostProviderOpencost string = "opencost"

	// CostProviderOpenAi captures enum value "open_ai"
	CostProviderOpenAi string = "open_ai"

	// CostProviderOracle captures enum value "oracle"
	CostProviderOracle string = "oracle"

	// CostProviderConfluent captures enum value "confluent"
	CostProviderConfluent string = "confluent"

	// CostProviderPlanetscale captures enum value "planetscale"
	CostProviderPlanetscale string = "planetscale"

	// CostProviderCoralogix captures enum value "coralogix"
	CostProviderCoralogix string = "coralogix"

	// CostProviderKubernetes captures enum value "kubernetes"
	CostProviderKubernetes string = "kubernetes"
)

// prop value enum
func (m *Cost) validateProviderEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, costTypeProviderPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *Cost) validateProvider(formats strfmt.Registry) error {
	if swag.IsZero(m.Provider) { // not required
		return nil
	}

	// value enum
	if err := m.validateProviderEnum("provider", "body", m.Provider); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this cost based on context it is used
func (m *Cost) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Cost) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Cost) UnmarshalBinary(b []byte) error {
	var res Cost
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
