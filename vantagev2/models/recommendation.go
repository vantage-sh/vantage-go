// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Recommendation Recommendation model
//
// swagger:model Recommendation
type Recommendation struct {

	// The category of the Recommendation.
	// Example: ec2_compute_optimizer_recommender
	Category string `json:"category,omitempty"`

	// The date and time, in UTC, the Recommendation was created. ISO 8601 Formatted.
	CreatedAt string `json:"created_at,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// The monthly potential savings of the Recommendation.
	// Example: 100.00
	PotentialSavings string `json:"potential_savings,omitempty"`

	// The provider the Recommendation is for.
	Provider string `json:"provider,omitempty"`

	// The account ID of the provider. For Azure, this is the subscription ID.
	ProviderAccountID string `json:"provider_account_id,omitempty"`

	// The number of ProviderResources related to the Recommendation. Use the `recommendations/:token/resources` endpoint to get the full list of resources.
	ResourcesAffectedCount string `json:"resources_affected_count,omitempty"`

	// The service the Recommendation is for.
	// Example: Amazon EC2
	Service string `json:"service,omitempty"`

	// token
	Token string `json:"token,omitempty"`

	// The token for the Workspace the Recommendation is a part of.
	WorkspaceToken string `json:"workspace_token,omitempty"`
}

// Validate validates this recommendation
func (m *Recommendation) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this recommendation based on context it is used
func (m *Recommendation) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Recommendation) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Recommendation) UnmarshalBinary(b []byte) error {
	var res Recommendation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
