// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CostAlertEvent CostAlertEvent model
//
// swagger:model CostAlertEvent
type CostAlertEvent struct {

	// The token of the alert associated with the CostAlertEvent.
	AlertToken string `json:"alert_token,omitempty"`

	// The type of the CostAlertEvent.
	AlertType string `json:"alert_type,omitempty"`

	// The date and time, in UTC, the CostAlertEvent was created. ISO 8601 Formatted.
	// Example: 2021-07-09T00:00:00Z
	CreatedAt string `json:"created_at,omitempty"`

	// The description of the CostAlertEvent.
	Description string `json:"description,omitempty"`

	// The metadata of the CostAlertEvent.
	Metadata interface{} `json:"metadata,omitempty"`

	// The token of the report associated with the CostAlertEvent.
	ReportToken string `json:"report_token,omitempty"`

	// token
	Token string `json:"token,omitempty"`

	// The date and time, in UTC, the CostAlertEvent is sent. ISO 8601 Formatted.
	// Example: 2021-07-09T00:00:00Z
	TriggeredAt string `json:"triggered_at,omitempty"`
}

// Validate validates this cost alert event
func (m *CostAlertEvent) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cost alert event based on context it is used
func (m *CostAlertEvent) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CostAlertEvent) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CostAlertEvent) UnmarshalBinary(b []byte) error {
	var res CostAlertEvent
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
