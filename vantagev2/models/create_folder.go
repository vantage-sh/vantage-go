// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateFolder Create a Folder for CostReports.
//
// swagger:model createFolder
type CreateFolder struct {

	// The token of the parent Folder.
	ParentFolderToken string `json:"parent_folder_token,omitempty"`

	// The tokens of the SavedFilters to apply to any Cost Report contained within the Folder.
	SavedFilterTokens []string `json:"saved_filter_tokens"`

	// The title of the Folder.
	// Required: true
	Title *string `json:"title"`

	// The token of the Workspace to add the Folder to. Ignored if 'parent_folder_token' is set. Required if the API token is associated with multiple Workspaces.
	WorkspaceToken string `json:"workspace_token,omitempty"`
}

// Validate validates this create folder
func (m *CreateFolder) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTitle(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateFolder) validateTitle(formats strfmt.Registry) error {

	if err := validate.Required("title", "body", m.Title); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create folder based on context it is used
func (m *CreateFolder) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CreateFolder) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateFolder) UnmarshalBinary(b []byte) error {
	var res CreateFolder
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
