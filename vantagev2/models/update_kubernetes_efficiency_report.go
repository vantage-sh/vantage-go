// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UpdateKubernetesEfficiencyReport Update a KubernetesEfficiencyReport.
//
// swagger:model updateKubernetesEfficiencyReport
type UpdateKubernetesEfficiencyReport struct {

	// The column by which the costs are aggregated.
	// Enum: ["idle_cost","amount","cost_efficiency"]
	AggregatedBy string `json:"aggregated_by,omitempty"`

	// The date bin of the KubernetesEfficiencyReport.
	// Enum: ["day","week","month"]
	DateBin *string `json:"date_bin,omitempty"`

	// The date interval of the KubernetesEfficiencyReport. Incompatible with 'start_date' and 'end_date' parameters. Defaults to 'this_month' if start_date and end_date are not provided.
	// Enum: ["this_month","last_7_days","last_30_days","last_month","last_3_months","last_6_months","custom","last_12_months","last_24_months","last_36_months","next_month","next_3_months","next_6_months","next_12_months","year_to_date"]
	DateInterval string `json:"date_interval,omitempty"`

	// The end date of the KubernetesEfficiencyReport. ISO 8601 Formatted. Incompatible with 'date_interval' parameter.
	// Format: date
	EndDate strfmt.Date `json:"end_date,omitempty"`

	// The filter query language to apply to the KubernetesEfficiencyReport. Additional documentation available at https://docs.vantage.sh/vql.
	Filter string `json:"filter,omitempty"`

	// Grouping values for aggregating costs on the KubernetesEfficiencyReport. Valid groupings: cluster_id, namespace, labeled, category, label, label:<label_name>.
	Groupings []string `json:"groupings"`

	// The start date of the KubernetesEfficiencyReport. ISO 8601 Formatted. Incompatible with 'date_interval' parameter.
	// Format: date
	StartDate strfmt.Date `json:"start_date,omitempty"`

	// The title of the KubernetesEfficiencyReport.
	Title string `json:"title,omitempty"`
}

// Validate validates this update kubernetes efficiency report
func (m *UpdateKubernetesEfficiencyReport) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAggregatedBy(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDateBin(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDateInterval(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEndDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStartDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var updateKubernetesEfficiencyReportTypeAggregatedByPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["idle_cost","amount","cost_efficiency"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		updateKubernetesEfficiencyReportTypeAggregatedByPropEnum = append(updateKubernetesEfficiencyReportTypeAggregatedByPropEnum, v)
	}
}

const (

	// UpdateKubernetesEfficiencyReportAggregatedByIdleCost captures enum value "idle_cost"
	UpdateKubernetesEfficiencyReportAggregatedByIdleCost string = "idle_cost"

	// UpdateKubernetesEfficiencyReportAggregatedByAmount captures enum value "amount"
	UpdateKubernetesEfficiencyReportAggregatedByAmount string = "amount"

	// UpdateKubernetesEfficiencyReportAggregatedByCostEfficiency captures enum value "cost_efficiency"
	UpdateKubernetesEfficiencyReportAggregatedByCostEfficiency string = "cost_efficiency"
)

// prop value enum
func (m *UpdateKubernetesEfficiencyReport) validateAggregatedByEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, updateKubernetesEfficiencyReportTypeAggregatedByPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *UpdateKubernetesEfficiencyReport) validateAggregatedBy(formats strfmt.Registry) error {
	if swag.IsZero(m.AggregatedBy) { // not required
		return nil
	}

	// value enum
	if err := m.validateAggregatedByEnum("aggregated_by", "body", m.AggregatedBy); err != nil {
		return err
	}

	return nil
}

var updateKubernetesEfficiencyReportTypeDateBinPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["day","week","month"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		updateKubernetesEfficiencyReportTypeDateBinPropEnum = append(updateKubernetesEfficiencyReportTypeDateBinPropEnum, v)
	}
}

const (

	// UpdateKubernetesEfficiencyReportDateBinDay captures enum value "day"
	UpdateKubernetesEfficiencyReportDateBinDay string = "day"

	// UpdateKubernetesEfficiencyReportDateBinWeek captures enum value "week"
	UpdateKubernetesEfficiencyReportDateBinWeek string = "week"

	// UpdateKubernetesEfficiencyReportDateBinMonth captures enum value "month"
	UpdateKubernetesEfficiencyReportDateBinMonth string = "month"
)

// prop value enum
func (m *UpdateKubernetesEfficiencyReport) validateDateBinEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, updateKubernetesEfficiencyReportTypeDateBinPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *UpdateKubernetesEfficiencyReport) validateDateBin(formats strfmt.Registry) error {
	if swag.IsZero(m.DateBin) { // not required
		return nil
	}

	// value enum
	if err := m.validateDateBinEnum("date_bin", "body", *m.DateBin); err != nil {
		return err
	}

	return nil
}

var updateKubernetesEfficiencyReportTypeDateIntervalPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["this_month","last_7_days","last_30_days","last_month","last_3_months","last_6_months","custom","last_12_months","last_24_months","last_36_months","next_month","next_3_months","next_6_months","next_12_months","year_to_date"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		updateKubernetesEfficiencyReportTypeDateIntervalPropEnum = append(updateKubernetesEfficiencyReportTypeDateIntervalPropEnum, v)
	}
}

const (

	// UpdateKubernetesEfficiencyReportDateIntervalThisMonth captures enum value "this_month"
	UpdateKubernetesEfficiencyReportDateIntervalThisMonth string = "this_month"

	// UpdateKubernetesEfficiencyReportDateIntervalLast7Days captures enum value "last_7_days"
	UpdateKubernetesEfficiencyReportDateIntervalLast7Days string = "last_7_days"

	// UpdateKubernetesEfficiencyReportDateIntervalLast30Days captures enum value "last_30_days"
	UpdateKubernetesEfficiencyReportDateIntervalLast30Days string = "last_30_days"

	// UpdateKubernetesEfficiencyReportDateIntervalLastMonth captures enum value "last_month"
	UpdateKubernetesEfficiencyReportDateIntervalLastMonth string = "last_month"

	// UpdateKubernetesEfficiencyReportDateIntervalLast3Months captures enum value "last_3_months"
	UpdateKubernetesEfficiencyReportDateIntervalLast3Months string = "last_3_months"

	// UpdateKubernetesEfficiencyReportDateIntervalLast6Months captures enum value "last_6_months"
	UpdateKubernetesEfficiencyReportDateIntervalLast6Months string = "last_6_months"

	// UpdateKubernetesEfficiencyReportDateIntervalCustom captures enum value "custom"
	UpdateKubernetesEfficiencyReportDateIntervalCustom string = "custom"

	// UpdateKubernetesEfficiencyReportDateIntervalLast12Months captures enum value "last_12_months"
	UpdateKubernetesEfficiencyReportDateIntervalLast12Months string = "last_12_months"

	// UpdateKubernetesEfficiencyReportDateIntervalLast24Months captures enum value "last_24_months"
	UpdateKubernetesEfficiencyReportDateIntervalLast24Months string = "last_24_months"

	// UpdateKubernetesEfficiencyReportDateIntervalLast36Months captures enum value "last_36_months"
	UpdateKubernetesEfficiencyReportDateIntervalLast36Months string = "last_36_months"

	// UpdateKubernetesEfficiencyReportDateIntervalNextMonth captures enum value "next_month"
	UpdateKubernetesEfficiencyReportDateIntervalNextMonth string = "next_month"

	// UpdateKubernetesEfficiencyReportDateIntervalNext3Months captures enum value "next_3_months"
	UpdateKubernetesEfficiencyReportDateIntervalNext3Months string = "next_3_months"

	// UpdateKubernetesEfficiencyReportDateIntervalNext6Months captures enum value "next_6_months"
	UpdateKubernetesEfficiencyReportDateIntervalNext6Months string = "next_6_months"

	// UpdateKubernetesEfficiencyReportDateIntervalNext12Months captures enum value "next_12_months"
	UpdateKubernetesEfficiencyReportDateIntervalNext12Months string = "next_12_months"

	// UpdateKubernetesEfficiencyReportDateIntervalYearToDate captures enum value "year_to_date"
	UpdateKubernetesEfficiencyReportDateIntervalYearToDate string = "year_to_date"
)

// prop value enum
func (m *UpdateKubernetesEfficiencyReport) validateDateIntervalEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, updateKubernetesEfficiencyReportTypeDateIntervalPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *UpdateKubernetesEfficiencyReport) validateDateInterval(formats strfmt.Registry) error {
	if swag.IsZero(m.DateInterval) { // not required
		return nil
	}

	// value enum
	if err := m.validateDateIntervalEnum("date_interval", "body", m.DateInterval); err != nil {
		return err
	}

	return nil
}

func (m *UpdateKubernetesEfficiencyReport) validateEndDate(formats strfmt.Registry) error {
	if swag.IsZero(m.EndDate) { // not required
		return nil
	}

	if err := validate.FormatOf("end_date", "body", "date", m.EndDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *UpdateKubernetesEfficiencyReport) validateStartDate(formats strfmt.Registry) error {
	if swag.IsZero(m.StartDate) { // not required
		return nil
	}

	if err := validate.FormatOf("start_date", "body", "date", m.StartDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this update kubernetes efficiency report based on context it is used
func (m *UpdateKubernetesEfficiencyReport) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UpdateKubernetesEfficiencyReport) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UpdateKubernetesEfficiencyReport) UnmarshalBinary(b []byte) error {
	var res UpdateKubernetesEfficiencyReport
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
