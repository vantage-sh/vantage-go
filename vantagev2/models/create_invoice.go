// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateInvoice Create an invoice (MSP accounts only).
//
// swagger:model createInvoice
type CreateInvoice struct {

	// Token of the managed account to invoice
	// Required: true
	AccountToken *string `json:"account_token"`

	// End date of billing period (YYYY-MM-DD)
	// Required: true
	BillingPeriodEnd *string `json:"billing_period_end"`

	// Start date of billing period (YYYY-MM-DD)
	// Required: true
	BillingPeriodStart *string `json:"billing_period_start"`
}

// Validate validates this create invoice
func (m *CreateInvoice) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccountToken(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateBillingPeriodEnd(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateBillingPeriodStart(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateInvoice) validateAccountToken(formats strfmt.Registry) error {

	if err := validate.Required("account_token", "body", m.AccountToken); err != nil {
		return err
	}

	return nil
}

func (m *CreateInvoice) validateBillingPeriodEnd(formats strfmt.Registry) error {

	if err := validate.Required("billing_period_end", "body", m.BillingPeriodEnd); err != nil {
		return err
	}

	return nil
}

func (m *CreateInvoice) validateBillingPeriodStart(formats strfmt.Registry) error {

	if err := validate.Required("billing_period_start", "body", m.BillingPeriodStart); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create invoice based on context it is used
func (m *CreateInvoice) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CreateInvoice) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateInvoice) UnmarshalBinary(b []byte) error {
	var res CreateInvoice
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
