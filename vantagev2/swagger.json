{
  "info": {
    "title": "Vantage",
    "description": "Vantage API",
    "termsOfService": "https://www.vantage.sh/terms-of-use",
    "contact": {
      "name": "Vantage Support",
      "email": "support@vantage.sh",
      "url": "https://www.vantage.sh"
    },
    "version": "2.0.0"
  },
  "swagger": "2.0",
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "flow": "application",
      "scopes": {
        "read": "Grants read access",
        "write": "Grants write access"
      },
      "tokenUrl": "https://console.vantage.sh/account/profile"
    }
  },
  "security": [
    {
      "oauth2": [
        "read"
      ]
    }
  ],
  "host": "api.vantage.sh",
  "basePath": "/v2",
  "schemes": [
    "https"
  ],
  "tags": [
    {
      "name": "Workspaces",
      "description": "Operations about Workspaces"
    },
    {
      "name": "Folders",
      "description": "Operations about Folders"
    },
    {
      "name": "SavedFilters",
      "description": "Operations about SavedFilters"
    },
    {
      "name": "Costs",
      "description": "Operations about Costs"
    },
    {
      "name": "Segments",
      "description": "Operations about Segments"
    },
    {
      "name": "Dashboards",
      "description": "Operations about Dashboards"
    },
    {
      "name": "Resources",
      "description": "Operations about Resources"
    },
    {
      "name": "ResourceReports",
      "description": "Operations about ResourceReports"
    },
    {
      "name": "Teams",
      "description": "Operations about Teams"
    },
    {
      "name": "AccessGrants",
      "description": "Operations about AccessGrants"
    },
    {
      "name": "ReportNotifications",
      "description": "Operations about ReportNotifications"
    },
    {
      "name": "Users",
      "description": "Operations about Users"
    },
    {
      "name": "BusinessMetrics",
      "description": "Operations about BusinessMetrics"
    },
    {
      "name": "Prices",
      "description": "Operations about Prices"
    },
    {
      "name": "FinancialCommitmentReports",
      "description": "Operations about FinancialCommitmentReports"
    },
    {
      "name": "FinancialCommitments",
      "description": "Operations about FinancialCommitments"
    },
    {
      "name": "KubernetesEfficiencyReports",
      "description": "Operations about KubernetesEfficiencyReports"
    },
    {
      "name": "AnomalyAlerts",
      "description": "Operations about AnomalyAlerts"
    },
    {
      "name": "VirtualTags",
      "description": "Operations about VirtualTags"
    },
    {
      "name": "AnomalyNotifications",
      "description": "Operations about AnomalyNotifications"
    },
    {
      "name": "Budgets",
      "description": "Operations about Budgets"
    },
    {
      "name": "BudgetAlerts",
      "description": "Operations about BudgetAlerts"
    },
    {
      "name": "Integrations",
      "description": "Operations about Integrations"
    },
    {
      "name": "UserCostsUpload",
      "description": "Operations about UserCostsUploads"
    },
    {
      "name": "Recommendations",
      "description": "Operations about Recommendations"
    },
    {
      "name": "ManagedAccounts",
      "description": "Operations about ManagedAccounts"
    },
    {
      "name": "BillingRules",
      "description": "Operations about BillingRules"
    },
    {
      "name": "Ping",
      "description": "Operations about Pings"
    }
  ],
  "paths": {
    "/workspaces": {
      "post": {
        "description": "Create a workspace",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "name",
            "description": "Name of the workspace.",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "enable_currency_conversion",
            "description": "Enable currency conversion for the workspace.",
            "type": "boolean",
            "default": true,
            "required": false
          },
          {
            "in": "formData",
            "name": "currency",
            "description": "Currency code for the workspace.",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "exchange_rate_date",
            "description": "The date to use for currency conversion.",
            "type": "string",
            "default": "daily_rate",
            "enum": [
              "daily_rate",
              "end_of_billing_period_rate"
            ],
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Workspace"
            },
            "examples": {
              "application/json": {
                "token": "wrkspc_c820c203e53de3e1",
                "name": "Ellingson Mineral Corporation",
                "created_at": "2024-10-01T01:00:55Z",
                "enable_currency_conversion": true,
                "currency": "JPY",
                "exchange_rate_date": "end_of_billing_period_rate"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Workspaces"
        ],
        "operationId": "createWorkspace"
      },
      "get": {
        "description": "Return all Workspaces that the current API token has access to.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Workspaces"
            },
            "examples": {
              "application/json": {
                "workspaces": [
                  {
                    "token": "wrkspc_5d9752a116e4d28e",
                    "name": "Gulgowski, Ruecker and Rolfson b7f1c249",
                    "created_at": "2024-10-01T01:00:56Z",
                    "enable_currency_conversion": false,
                    "currency": "USD",
                    "exchange_rate_date": "daily_rate"
                  },
                  {
                    "token": "wrkspc_9a319290712d817d",
                    "name": "Stokes Inc 2d705dab",
                    "created_at": "2024-10-01T01:00:56Z",
                    "enable_currency_conversion": false,
                    "currency": "USD",
                    "exchange_rate_date": "daily_rate"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Workspaces"
        ],
        "operationId": "getWorkspaces"
      }
    },
    "/workspaces/{workspace_token}": {
      "delete": {
        "description": "Delete a Workspace",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspace_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Workspaces"
        ],
        "operationId": "deleteWorkspace"
      },
      "put": {
        "description": "Update a workspace",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "name",
            "description": "Name of the workspace.",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "enable_currency_conversion",
            "description": "Enable currency conversion for the workspace.",
            "type": "boolean",
            "default": true,
            "required": false
          },
          {
            "in": "formData",
            "name": "currency",
            "description": "Currency code for the workspace.",
            "type": "string",
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTC",
              "BTN",
              "BWP",
              "BYN",
              "BYR",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LTL",
              "LVL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "STN",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XCD",
              "XDR",
              "XOF",
              "XPF",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ],
            "required": false
          },
          {
            "in": "formData",
            "name": "exchange_rate_date",
            "description": "The date to use for currency conversion.",
            "type": "string",
            "default": "daily_rate",
            "enum": [
              "daily_rate",
              "end_of_billing_period_rate"
            ],
            "required": false
          },
          {
            "in": "path",
            "name": "workspace_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Workspace"
            },
            "examples": {
              "application/json": {
                "token": "wrkspc_a44f83d3e85be91d",
                "name": "My Workspace (Edited)",
                "created_at": "2024-10-01T01:00:56Z",
                "enable_currency_conversion": true,
                "currency": "EUR",
                "exchange_rate_date": "daily_rate"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Workspaces"
        ],
        "operationId": "updateWorkspace"
      },
      "get": {
        "description": "Return a specific Workspace.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspace_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Workspace"
            },
            "examples": {
              "application/json": {
                "token": "wrkspc_ba4878d880507623",
                "name": "Emard, Lebsack and Schmidt 551b5e11",
                "created_at": "2024-10-01T01:00:55Z",
                "enable_currency_conversion": false,
                "currency": "USD",
                "exchange_rate_date": "daily_rate"
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Workspaces"
        ],
        "operationId": "getWorkspace"
      }
    },
    "/folders": {
      "post": {
        "description": "Create a Folder for CostReports.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createFolder",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createFolder"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Folder"
            },
            "examples": {
              "application/json": {
                "token": "fldr_4aabe6f482c2a9e4",
                "title": "New Folder",
                "parent_folder_token": "fldr_4d29cbecf2601266",
                "created_at": "2023-09-12T05:06:52Z",
                "updated_at": "2023-09-12T05:06:52Z",
                "workspace_token": "wrkspc_510cc77828001f9b"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Folders"
        ],
        "operationId": "createFolder"
      },
      "get": {
        "description": "Return all Folders for CostReports.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Folders"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/folders",
                  "first": "https://api.vantage.com/v2/folders?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/folders?page=1",
                  "prev": null
                },
                "folders": [
                  {
                    "token": "fldr_baf37f32280f5444",
                    "title": "synergy",
                    "parent_folder_token": null,
                    "created_at": "2023-09-12T05:06:54Z",
                    "updated_at": "2023-09-12T05:06:54Z",
                    "workspace_token": "wrkspc_f583a08beb76f679"
                  },
                  {
                    "token": "fldr_625d4591e46f7dfa",
                    "title": "website",
                    "parent_folder_token": "fldr_baf37f32280f5444",
                    "created_at": "2023-09-12T05:06:54Z",
                    "updated_at": "2023-09-12T05:06:54Z",
                    "workspace_token": "wrkspc_f583a08beb76f679"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Folders"
        ],
        "operationId": "getFolders"
      }
    },
    "/folders/{folder_token}": {
      "delete": {
        "description": "Delete a Folder for CostReports.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "folder_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Folder"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Folders"
        ],
        "operationId": "deleteFolder"
      },
      "put": {
        "description": "Update a Folder for CostReports.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "folder_token",
            "type": "string",
            "required": true
          },
          {
            "name": "updateFolder",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateFolder"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Folder"
            },
            "examples": {
              "application/json": {
                "token": "fldr_68e18d8d7df0be96",
                "title": "New Title",
                "parent_folder_token": "fldr_9aa0c735a6b615c6",
                "created_at": "2023-09-12T05:06:53Z",
                "updated_at": "2023-09-12T05:06:53Z",
                "workspace_token": "wrkspc_e65a48e5d9684439"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Folders"
        ],
        "operationId": "updateFolder"
      },
      "get": {
        "description": "Return a specific Folder for CostReports.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "folder_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Folder"
            },
            "examples": {
              "application/json": {
                "token": "fldr_3653e0f460786b1e",
                "title": "intermediate",
                "parent_folder_token": "fldr_b6bf120a1d3a794b",
                "created_at": "2023-09-12T05:07:36Z",
                "updated_at": "2023-09-12T05:07:36Z",
                "workspace_token": "wrkspc_a707105ff54966c3"
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Folders"
        ],
        "operationId": "getFolder"
      }
    },
    "/saved_filters": {
      "post": {
        "description": "Create a SavedFilter for CostReports.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createSavedFilter",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createSavedFilter"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SavedFilter"
            },
            "examples": {
              "application/json": {
                "token": "svd_fltr_4de629566ddd68c9",
                "title": "New Saved Filter",
                "cost_report_tokens": [],
                "filter": "costs.provider = 'datadog'",
                "created_at": "2024-07-15T16:08:58Z",
                "created_by": "team_e58399e4df1175e9",
                "workspace_token": "wrkspc_e4cacf2493142e5b"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "SavedFilters"
        ],
        "operationId": "createSavedFilter"
      },
      "get": {
        "description": "Return all SavedFilters that can be applied to a CostReport.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SavedFilters"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/saved_filters",
                  "first": "https://api.vantage.com/v2/saved_filters?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/saved_filters?page=1",
                  "prev": null
                },
                "saved_filters": [
                  {
                    "token": "svd_fltr_3dffc0458f7a2487",
                    "title": "Oolong (5)",
                    "cost_report_tokens": [
                      "rprt_3d0ae4648f5fd8f7"
                    ],
                    "filter": "(costs.provider = 'aws' AND costs.account_id = '30')",
                    "created_at": "2024-07-15T16:08:53Z",
                    "created_by": "usr_95fac32734bdceab",
                    "workspace_token": "wrkspc_914dcb0959497507"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "SavedFilters"
        ],
        "operationId": "getSavedFilters"
      }
    },
    "/saved_filters/{saved_filter_token}": {
      "delete": {
        "description": "Delete a SavedFilter for CostReports.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "saved_filter_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SavedFilter"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "SavedFilters"
        ],
        "operationId": "deleteSavedFilter"
      },
      "put": {
        "description": "Update a SavedFilter for CostReports.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "saved_filter_token",
            "type": "string",
            "required": true
          },
          {
            "name": "updateSavedFilter",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateSavedFilter"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SavedFilter"
            },
            "examples": {
              "application/json": {
                "token": "svd_fltr_eeabf4c7264f94a8",
                "title": "Updated Saved Filter",
                "cost_report_tokens": [],
                "filter": "costs.provider = 'azure'",
                "created_at": "2024-07-15T16:08:55Z",
                "created_by": "usr_240a5fd77d5da076",
                "workspace_token": "wrkspc_0b7ef373f9c5d485"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "SavedFilters"
        ],
        "operationId": "updateSavedFilter"
      },
      "get": {
        "description": "Return a specific SavedFilter.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "saved_filter_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SavedFilter"
            },
            "examples": {
              "application/json": {
                "token": "svd_fltr_be3f24eb1b5aabf6",
                "title": "Green (8)",
                "cost_report_tokens": [
                  "rprt_47023ad2b735f57d"
                ],
                "filter": "(costs.provider = 'aws' AND costs.account_id = '98')",
                "created_at": "2024-07-15T16:08:54Z",
                "created_by": "team_73f6001f98e9012b",
                "workspace_token": "wrkspc_be6568a301b1d06c"
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "SavedFilters"
        ],
        "operationId": "getSavedFilter"
      }
    },
    "/cost_reports": {
      "post": {
        "description": "Create a CostReport.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createCostReport",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createCostReport"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CostReport"
            },
            "examples": {
              "application/json": {
                "token": "rprt_833310893a5ef0b8",
                "title": "New Cost Report",
                "folder_token": "fldr_576d66e14d911b2a",
                "saved_filter_tokens": [
                  "svd_fltr_60a55554b600626f"
                ],
                "business_metric_tokens_with_metadata": [
                  {
                    "business_metric_token": "bsnss_mtrc_86c56a209d466fd4",
                    "unit_scale": "per_thousand",
                    "label_filter": [
                      "CBGB",
                      "Roxy",
                      "Studio 54",
                      ""
                    ]
                  }
                ],
                "filter": "costs.provider = 'aws' AND costs.service = 'Amazon Simple Storage Service'",
                "groupings": "provider,service",
                "settings": {
                  "include_credits": false,
                  "include_refunds": false,
                  "include_discounts": true,
                  "include_tax": true,
                  "amortize": true,
                  "unallocated": false,
                  "aggregate_by": "cost"
                },
                "created_at": "2024-07-03T00:00:00Z",
                "workspace_token": "wrkspc_c5f205fefde05b46",
                "previous_period_start_date": null,
                "previous_period_end_date": null,
                "start_date": "2024-07-01",
                "end_date": "2024-07-31",
                "date_interval": "this_month",
                "chart_type": "bar",
                "date_bin": "day"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Costs"
        ],
        "operationId": "createCostReport"
      },
      "get": {
        "description": "Return all CostReports.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "folder_token",
            "description": "The token for the Folder you would like to fetch Reports from.",
            "type": "string",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CostReports"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/cost_reports",
                  "first": "https://api.vantage.com/v2/cost_reports?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/cost_reports?page=1",
                  "prev": null
                },
                "cost_reports": [
                  {
                    "token": "rprt_36a9e7ada7835b71",
                    "title": "Untitled",
                    "folder_token": null,
                    "saved_filter_tokens": [
                      "svd_fltr_cd5d6cd654ffbe8a"
                    ],
                    "business_metric_tokens_with_metadata": [],
                    "filter": null,
                    "groupings": "provider,service",
                    "settings": {
                      "include_credits": false,
                      "include_refunds": false,
                      "include_discounts": true,
                      "include_tax": true,
                      "amortize": true,
                      "unallocated": false,
                      "aggregate_by": "cost"
                    },
                    "created_at": "2024-07-03T00:00:00Z",
                    "workspace_token": "wrkspc_2e2953593e6c460a",
                    "previous_period_start_date": null,
                    "previous_period_end_date": null,
                    "start_date": "2024-07-01",
                    "end_date": "2024-07-31",
                    "date_interval": "this_month",
                    "chart_type": "line",
                    "date_bin": "cumulative"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Costs"
        ],
        "operationId": "getCostReports"
      }
    },
    "/cost_reports/{cost_report_token}": {
      "delete": {
        "description": "Delete a CostReport.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cost_report_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CostReport"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Costs"
        ],
        "operationId": "deleteCostReport"
      },
      "put": {
        "description": "Update a CostReport.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cost_report_token",
            "type": "string",
            "required": true
          },
          {
            "name": "updateCostReport",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateCostReport"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CostReport"
            },
            "examples": {
              "application/json": {
                "token": "rprt_a490c214f4bbe72f",
                "title": "Updated Cost Report",
                "folder_token": "fldr_8295e9888457f397",
                "saved_filter_tokens": [
                  "svd_fltr_ab6d4f05eaa6810e"
                ],
                "business_metric_tokens_with_metadata": [
                  {
                    "business_metric_token": "bsnss_mtrc_12e5db929bf3922a",
                    "unit_scale": "per_thousand",
                    "label_filter": [
                      "CBGB",
                      "Roxy",
                      "Studio 54",
                      ""
                    ]
                  },
                  {
                    "business_metric_token": "bsnss_mtrc_72d01f2ecdbc10fc",
                    "unit_scale": "per_million"
                  }
                ],
                "filter": "costs.provider = 'azure'",
                "groupings": "service,account_id",
                "settings": {
                  "include_credits": false,
                  "include_refunds": false,
                  "include_discounts": true,
                  "include_tax": true,
                  "amortize": true,
                  "unallocated": false,
                  "aggregate_by": "cost"
                },
                "created_at": "2024-07-03T00:00:00Z",
                "workspace_token": "wrkspc_820fbab7bc9f61b7",
                "previous_period_start_date": null,
                "previous_period_end_date": null,
                "start_date": "2024-07-01",
                "end_date": "2024-07-31",
                "date_interval": "this_month",
                "chart_type": "pie",
                "date_bin": "week"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Costs"
        ],
        "operationId": "updateCostReport"
      },
      "get": {
        "description": "Return a CostReport.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cost_report_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CostReport"
            },
            "examples": {
              "application/json": {
                "token": "rprt_b82eb9c606b23f6d",
                "title": "Untitled",
                "folder_token": null,
                "saved_filter_tokens": [
                  "svd_fltr_0d87868df0e54711"
                ],
                "business_metric_tokens_with_metadata": [],
                "filter": null,
                "groupings": "provider,service",
                "settings": {
                  "include_credits": false,
                  "include_refunds": false,
                  "include_discounts": true,
                  "include_tax": true,
                  "amortize": true,
                  "unallocated": false,
                  "aggregate_by": "cost"
                },
                "created_at": "2024-07-03T00:00:00Z",
                "workspace_token": "wrkspc_90079dc86b0ea0a8",
                "previous_period_start_date": null,
                "previous_period_end_date": null,
                "start_date": "2024-07-01",
                "end_date": "2024-07-31",
                "date_interval": "this_month",
                "chart_type": "line",
                "date_bin": "cumulative"
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Costs"
        ],
        "operationId": "getCostReport"
      }
    },
    "/segments": {
      "post": {
        "description": "Create a Segment.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createSegment",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createSegment"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Segment"
            },
            "examples": {
              "application/json": {
                "token": "fltr_sgmt_a22e3e52e9a93a75",
                "title": "New Segment",
                "parent_segment_token": "fltr_sgmt_7f1af73e92e5e156",
                "description": "I'm a Segment.",
                "track_unallocated": false,
                "priority": 100,
                "filter": "costs.provider = 'aws' AND costs.service = 'Amazon Simple Storage Service'",
                "created_at": "2024-05-14T14:34:24Z",
                "workspace_token": "wrkspc_f75aec7671a72dd3",
                "report_token": null
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Segments"
        ],
        "operationId": "createSegment"
      },
      "get": {
        "description": "Return all Segments.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Segments"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/segments",
                  "first": "https://api.vantage.com/v2/segments?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/segments?page=1",
                  "prev": null
                },
                "segments": [
                  {
                    "token": "fltr_sgmt_79b0b8ef658d6bba",
                    "title": "neural-net",
                    "parent_segment_token": null,
                    "description": "Optimized encompassing algorithm",
                    "track_unallocated": false,
                    "report_settings": {
                      "include_credits": false,
                      "include_refunds": false,
                      "include_discounts": true,
                      "include_tax": true,
                      "amortize": true
                    },
                    "priority": 100,
                    "filter": "(costs.provider = 'aws')",
                    "created_at": "2024-05-14T14:34:22Z",
                    "workspace_token": "wrkspc_21f36c4ad272fb7b",
                    "report_token": "rprt_8dd4e1fe3b88c821"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Segments"
        ],
        "operationId": "getSegments"
      }
    },
    "/segments/{segment_token}": {
      "delete": {
        "description": "Delete a Segment.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "segment_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Segment"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Segments"
        ],
        "operationId": "deleteSegment"
      },
      "put": {
        "description": "Update a Segment.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "segment_token",
            "type": "string",
            "required": true
          },
          {
            "name": "updateSegment",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateSegment"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Segment"
            },
            "examples": {
              "application/json": {
                "token": "fltr_sgmt_1550eb291314035c",
                "title": "Updated Segment",
                "parent_segment_token": "fltr_sgmt_a39cf865967ed4d8",
                "description": "Total object-oriented productivity",
                "track_unallocated": false,
                "priority": 42,
                "filter": "costs.provider = 'azure'",
                "created_at": "2024-05-14T14:34:23Z",
                "workspace_token": "wrkspc_1be9d0445f94db0b",
                "report_token": "rprt_3e460438ae115013"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Segments"
        ],
        "operationId": "updateSegment"
      },
      "get": {
        "description": "Return a Segment.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "segment_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Segment"
            },
            "examples": {
              "application/json": {
                "token": "fltr_sgmt_e528df30fe4c9da4",
                "title": "Function-based",
                "parent_segment_token": null,
                "description": "Total multi-tasking encoding",
                "track_unallocated": false,
                "report_settings": {
                  "include_credits": false,
                  "include_refunds": false,
                  "include_discounts": true,
                  "include_tax": true,
                  "amortize": true
                },
                "priority": 100,
                "filter": "(costs.provider = 'aws')",
                "created_at": "2024-05-14T14:34:18Z",
                "workspace_token": "wrkspc_eb7573db105407df",
                "report_token": "rprt_f7828113036f5fce"
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Segments"
        ],
        "operationId": "getSegment"
      }
    },
    "/dashboards": {
      "post": {
        "description": "Create a Dashboard.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createDashboard",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createDashboard"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Dashboard"
            },
            "examples": {
              "application/json": {
                "token": "dshbrd_7e272e8d3de34719",
                "title": "New Dashboard",
                "widget_tokens": [
                  "fncl_cmnt_rprt_d4743c186c130e30",
                  "kbnts_eff_rprt_892d1566bd543b67",
                  "rprt_750074c1b25b372a"
                ],
                "widgets": [
                  {
                    "widgetable_token": "fncl_cmnt_rprt_d4743c186c130e30",
                    "title": "All Financial Commitments",
                    "settings": {
                      "display_type": "chart"
                    }
                  },
                  {
                    "widgetable_token": "kbnts_eff_rprt_892d1566bd543b67",
                    "title": "Drinking meh chia single-origin coffee intelligentsia everyday small batch.",
                    "settings": {
                      "display_type": "table"
                    }
                  },
                  {
                    "widgetable_token": "rprt_750074c1b25b372a",
                    "title": "Untitled",
                    "settings": {
                      "display_type": "chart"
                    }
                  }
                ],
                "saved_filter_tokens": [
                  "svd_fltr_3f45aefa131861ac"
                ],
                "date_bin": "week",
                "date_interval": "this_month",
                "start_date": "2023-08-01",
                "end_date": "2023-08-31",
                "created_at": "2023-08-15T00:00:00Z",
                "updated_at": "2023-08-15T00:00:00Z",
                "workspace_token": "wrkspc_08e043cc14ced776"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Dashboards",
          "Costs"
        ],
        "operationId": "createDashboard"
      },
      "get": {
        "description": "Return all Dashboards.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Dashboards"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/dashboards",
                  "first": "https://api.vantage.com/v2/dashboards?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/dashboards?page=1",
                  "prev": null
                },
                "dashboards": [
                  {
                    "token": "dshbrd_13d78294a06f0f84",
                    "title": "The Torment of Others",
                    "widget_tokens": [
                      "rprt_7c3cb814dfb6d881"
                    ],
                    "widgets": [
                      {
                        "widgetable_token": "rprt_7c3cb814dfb6d881",
                        "title": "Untitled",
                        "settings": {
                          "display_type": "chart"
                        }
                      }
                    ],
                    "saved_filter_tokens": [
                      "svd_fltr_3c6f5eb635cf88de"
                    ],
                    "date_bin": null,
                    "date_interval": null,
                    "start_date": null,
                    "end_date": null,
                    "created_at": "2024-12-17T00:44:48Z",
                    "updated_at": "2024-12-17T00:44:48Z",
                    "workspace_token": "wrkspc_ea1a7802e5fe06b3"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Dashboards",
          "Costs"
        ],
        "operationId": "getDashboards"
      }
    },
    "/dashboards/{dashboard_token}": {
      "delete": {
        "description": "Delete a Dashboard.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dashboard_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Dashboard"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Dashboards",
          "Costs"
        ],
        "operationId": "deleteDashboard"
      },
      "put": {
        "description": "Update a Dashboard.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dashboard_token",
            "type": "string",
            "required": true
          },
          {
            "name": "updateDashboard",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateDashboard"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Dashboard"
            },
            "examples": {
              "application/json": {
                "token": "dshbrd_2c942eb3a8d3962a",
                "title": "Updated Dashboard",
                "widget_tokens": [
                  "fncl_cmnt_rprt_ea316a453acd20c0",
                  "kbnts_eff_rprt_e3fc91cb63fd5469",
                  "rprt_7b0be9c16c5a6785"
                ],
                "widgets": [
                  {
                    "widgetable_token": "fncl_cmnt_rprt_ea316a453acd20c0",
                    "title": "All Financial Commitments",
                    "settings": {
                      "display_type": "chart"
                    }
                  },
                  {
                    "widgetable_token": "kbnts_eff_rprt_e3fc91cb63fd5469",
                    "title": "Green juice listicle irony yolo hella aesthetic hammock.",
                    "settings": {
                      "display_type": "table"
                    }
                  },
                  {
                    "widgetable_token": "rprt_7b0be9c16c5a6785",
                    "title": "Untitled",
                    "settings": {
                      "display_type": "chart"
                    }
                  }
                ],
                "saved_filter_tokens": [
                  "svd_fltr_51c106391f7295b7"
                ],
                "date_bin": "week",
                "date_interval": "this_month",
                "start_date": "2023-08-01",
                "end_date": "2023-08-31",
                "created_at": "2024-12-17T00:44:45Z",
                "updated_at": "2023-08-15T00:00:00Z",
                "workspace_token": "wrkspc_0e5c381029cdc016"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Dashboards",
          "Costs"
        ],
        "operationId": "updateDashboard"
      },
      "get": {
        "description": "Return a specific Dashboard.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dashboard_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Dashboard"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/dashboards",
                  "first": "https://api.vantage.com/v2/dashboards?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/dashboards?page=1",
                  "prev": null
                },
                "dashboards": [
                  {
                    "token": "dshbrd_e7c5b49d826b6f71",
                    "title": "In Death Ground",
                    "widget_tokens": [
                      "rprt_27e80d7a8d3f34e6"
                    ],
                    "widgets": [
                      {
                        "widgetable_token": "rprt_27e80d7a8d3f34e6",
                        "title": "Untitled",
                        "settings": {
                          "display_type": "chart"
                        }
                      }
                    ],
                    "saved_filter_tokens": [
                      "svd_fltr_7bb508e881e7fe5f"
                    ],
                    "date_bin": null,
                    "date_interval": null,
                    "start_date": null,
                    "end_date": null,
                    "created_at": "2024-12-17T00:44:48Z",
                    "updated_at": "2024-12-17T00:44:48Z",
                    "workspace_token": "wrkspc_245288e3c3a7377f"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Dashboards",
          "Costs"
        ],
        "operationId": "getDashboard"
      }
    },
    "/costs": {
      "get": {
        "description": "Return all Costs for a CostReport.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cost_report_token",
            "description": "The CostReport token.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "First date you would like to filter costs from. ISO 8601 formatted.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Last date you would like to filter costs to. ISO 8601 formatted.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "groupings",
            "description": "Group the results by specific field(s). Defaults to provider, service, account_id. Valid groupings: account_id, billing_account_id, charge_type, cost_category, cost_subcategory, provider, region, resource_id, service, tagged, tag:<tag_value>. If providing multiple groupings, join as comma separated values: groupings=provider,service,region",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "required": false
          },
          {
            "in": "query",
            "name": "order",
            "description": "Whether to order costs by date in an ascending or descending manner.",
            "type": "string",
            "default": "desc",
            "enum": [
              "asc",
              "desc"
            ],
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "settings[include_credits]",
            "description": "Results will include credits.",
            "type": "boolean",
            "default": false,
            "required": false
          },
          {
            "in": "query",
            "name": "settings[include_refunds]",
            "description": "Results will include refunds.",
            "type": "boolean",
            "default": false,
            "required": false
          },
          {
            "in": "query",
            "name": "settings[include_discounts]",
            "description": "Results will include discounts.",
            "type": "boolean",
            "default": true,
            "required": false
          },
          {
            "in": "query",
            "name": "settings[include_tax]",
            "description": "Results will include tax.",
            "type": "boolean",
            "default": true,
            "required": false
          },
          {
            "in": "query",
            "name": "settings[amortize]",
            "description": "Results will amortize.",
            "type": "boolean",
            "default": true,
            "required": false
          },
          {
            "in": "query",
            "name": "settings[unallocated]",
            "description": "Results will show unallocated costs.",
            "type": "boolean",
            "default": false,
            "required": false
          },
          {
            "in": "query",
            "name": "settings[aggregate_by]",
            "description": "Results will aggregate by.",
            "type": "string",
            "default": "cost",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Costs"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/costs?cost_report_token=rprt_ea7dbb4f5783d677",
                  "first": "https://api.vantage.com/v2/costs?cost_report_token=rprt_ea7dbb4f5783d677&page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/costs?cost_report_token=rprt_ea7dbb4f5783d677&page=1",
                  "prev": null
                },
                "total_cost": {
                  "amount": "500.0",
                  "currency": "USD"
                },
                "costs": [
                  {
                    "accrued_at": "2023-06-05",
                    "amount": "100.0",
                    "currency": "USD",
                    "provider": "aws",
                    "account_id": "mock_56789",
                    "service": "AmazonSNS"
                  },
                  {
                    "accrued_at": "2023-06-04",
                    "amount": "100.0",
                    "currency": "USD",
                    "provider": "aws",
                    "account_id": "mock_56789",
                    "service": "AmazonSNS"
                  },
                  {
                    "accrued_at": "2023-06-03",
                    "amount": "100.0",
                    "currency": "USD",
                    "provider": "aws",
                    "account_id": "mock_56789",
                    "service": "AmazonSNS"
                  },
                  {
                    "accrued_at": "2023-06-02",
                    "amount": "100.0",
                    "currency": "USD",
                    "provider": "aws",
                    "account_id": "mock_56789",
                    "service": "AmazonSNS"
                  },
                  {
                    "accrued_at": "2023-06-01",
                    "amount": "100.0",
                    "currency": "USD",
                    "provider": "aws",
                    "account_id": "mock_56789",
                    "service": "AmazonSNS"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "402": {
            "description": "PaymentRequired",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Costs"
        ],
        "operationId": "getCosts"
      }
    },
    "/resources": {
      "get": {
        "description": "Return Resources contained in a ResourceReport",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "resource_report_token",
            "description": "The ResourceReport token.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "filter",
            "description": "The filter query language to apply to the Resources. Additional documentation available at https://docs.vantage.sh/vql.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "workspace_token",
            "description": "The Workspace in which the Resources are located.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "include_cost",
            "description": "Include cost information in the response.",
            "type": "boolean",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Resources"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/resources?resource_report_token=prvdr_rsrc_rprt_a92daa2d9d885dcc&include_cost=true",
                  "first": "https://api.vantage.com/v2/resources?resource_report_token=prvdr_rsrc_rprt_a92daa2d9d885dcc&include_cost=true&page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/resources?resource_report_token=prvdr_rsrc_rprt_a92daa2d9d885dcc&include_cost=true&page=1",
                  "prev": null
                },
                "resources": [
                  {
                    "token": "prvdr_rsrc_4a1f4a30d86a586f",
                    "uuid": "0a997b68-281b-441b-865a-1ce183ae5f51",
                    "type": "aws_instance",
                    "label": "Faker::Business",
                    "metadata": {
                      "instance_id": null,
                      "image_id": null,
                      "region": null,
                      "vpc_id": null,
                      "subnet_id": null,
                      "public_ip_address": null,
                      "private_ip_address": null,
                      "public_dns_name": null,
                      "instance_type": null,
                      "platform": null,
                      "spot_instance_request_id": null,
                      "launch_time": 1728332095,
                      "instance_lifecycle": null,
                      "name": null,
                      "platform_type": "Linux/UNIX",
                      "spot_info": null,
                      "spot_price": null,
                      "datadog_agent_installed": null,
                      "network_interfaces": null,
                      "tags": null,
                      "instance_type_name": "t2.micro",
                      "lifecycle": "normal"
                    },
                    "account_id": "734912804094",
                    "billing_account_id": "734912804094",
                    "provider": "aws",
                    "region": "us-east-1",
                    "cost": 200.0,
                    "created_at": "2024-10-06T20:14:55.898Z"
                  },
                  {
                    "token": "prvdr_rsrc_21a16d1b66e134d9",
                    "uuid": "0f21a7dc-a466-43fb-81e8-1cc2346482f4",
                    "type": "aws_instance",
                    "label": "Faker::Business",
                    "metadata": {
                      "instance_id": null,
                      "image_id": null,
                      "region": null,
                      "vpc_id": null,
                      "subnet_id": null,
                      "public_ip_address": null,
                      "private_ip_address": null,
                      "public_dns_name": null,
                      "instance_type": null,
                      "platform": null,
                      "spot_instance_request_id": null,
                      "launch_time": 1728332095,
                      "instance_lifecycle": null,
                      "name": null,
                      "platform_type": "Linux/UNIX",
                      "spot_info": null,
                      "spot_price": null,
                      "datadog_agent_installed": null,
                      "network_interfaces": null,
                      "tags": null,
                      "instance_type_name": "t2.micro",
                      "lifecycle": "normal"
                    },
                    "account_id": "734912804094",
                    "billing_account_id": "734912804094",
                    "provider": "aws",
                    "region": "us-east-1",
                    "cost": 100.0,
                    "created_at": "2024-10-07T20:14:55.898Z"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "402": {
            "description": "PaymentRequired",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Resources"
        ],
        "operationId": "getReportResources"
      }
    },
    "/resources/{resource_token}": {
      "get": {
        "description": "Return a single Resource",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "resource_token",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "include_cost",
            "description": "Include cost information in the response.",
            "type": "boolean",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Resource"
            },
            "examples": {
              "application/json": {
                "token": "prvdr_rsrc_99a293db073a2e99",
                "uuid": "e930c92f-5449-4eaf-9ef5-4f714da1ab45",
                "type": "aws_instance",
                "label": "Faker::Business",
                "metadata": {
                  "instance_id": null,
                  "image_id": null,
                  "region": null,
                  "vpc_id": null,
                  "subnet_id": null,
                  "public_ip_address": null,
                  "private_ip_address": null,
                  "public_dns_name": null,
                  "instance_type": null,
                  "platform": null,
                  "spot_instance_request_id": null,
                  "launch_time": 1728479795,
                  "instance_lifecycle": null,
                  "name": null,
                  "platform_type": "Linux/UNIX",
                  "spot_info": null,
                  "spot_price": null,
                  "datadog_agent_installed": null,
                  "network_interfaces": null,
                  "tags": null,
                  "instance_type_name": "t2.micro",
                  "lifecycle": "normal"
                },
                "account_id": "565894339657",
                "billing_account_id": "565894339657",
                "provider": "aws",
                "region": "us-east-1",
                "costs": [
                  {
                    "category": "Data Transfer",
                    "amount": 3.0
                  },
                  {
                    "category": "Compute Instance",
                    "amount": 3.0
                  }
                ],
                "created_at": "2024-10-09T13:16:35.719Z"
              }
            }
          }
        },
        "tags": [
          "Resources"
        ],
        "operationId": "getResource"
      }
    },
    "/resource_reports": {
      "post": {
        "description": "Create a ResourceReport.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createResourceReport",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createResourceReport"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ResourceReport"
            },
            "examples": {
              "application/json": {
                "token": "prvdr_rsrc_rprt_e3ab8bc7fede39ed",
                "title": "EC2 Report",
                "filter": "resources.provider = 'aws' and resources.type = 'ProviderResource::Aws::VirtualMachine'",
                "created_at": "2024-10-09T13:33:41Z",
                "workspace_token": "wrkspc_55f08f68b9a7bb53",
                "user_token": "usr_aa3675519ffe841b",
                "created_by_token": "usr_aa3675519ffe841b"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "ResourceReports"
        ],
        "operationId": "createResourceReport"
      },
      "get": {
        "description": "Return all ResourceReports.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The number of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ResourceReports"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/resource_reports",
                  "first": "https://api.vantage.com/v2/resource_reports?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/resource_reports?page=1",
                  "prev": null
                },
                "resource_reports": [
                  {
                    "token": "prvdr_rsrc_rprt_eeb3d220dd1952b0",
                    "title": "Resource Report 0faa74e0",
                    "filter": "(resources.provider = 'aws')",
                    "created_at": "2024-10-09T13:33:40Z",
                    "workspace_token": "wrkspc_795b158f3e71f27a",
                    "user_token": null,
                    "created_by_token": null
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "ResourceReports"
        ],
        "operationId": "getResourceReports"
      }
    },
    "/resource_reports/{resource_report_token}": {
      "delete": {
        "description": "Delete a ResourceReport.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "resource_report_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ResourceReport"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "ResourceReports"
        ],
        "operationId": "deleteResourceReport"
      },
      "put": {
        "description": "Update a ResourceReport.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "resource_report_token",
            "type": "string",
            "required": true
          },
          {
            "name": "updateResourceReport",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateResourceReport"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ResourceReport"
            },
            "examples": {
              "application/json": {
                "token": "prvdr_rsrc_rprt_f25a2029f76f0420",
                "title": "EC2 Edited Report",
                "filter": "resources.provider = 'aws' and resources.type = 'aws_ebs_volume'",
                "created_at": "2024-10-09T13:33:41Z",
                "workspace_token": "wrkspc_eac05d4d2a1ba482",
                "user_token": null,
                "created_by_token": null
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "ResourceReports"
        ],
        "operationId": "updateResourceReport"
      },
      "get": {
        "description": "Return a ResourceReport.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "resource_report_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ResourceReport"
            },
            "examples": {
              "application/json": {
                "token": "prvdr_rsrc_rprt_e8a569debdc044a6",
                "title": "Resource Report 44189cf9",
                "filter": "(resources.provider = 'aws')",
                "created_at": "2024-10-09T13:33:40Z",
                "workspace_token": "wrkspc_f861b07777a4d78c",
                "user_token": null,
                "created_by_token": null
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "ResourceReports"
        ],
        "operationId": "getResourceReport"
      }
    },
    "/teams": {
      "post": {
        "description": "Create a new Team.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createTeam",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createTeam"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Team"
            },
            "examples": {
              "application/json": {
                "token": "team_8467157535a30221",
                "name": "New Team",
                "description": "New Team Description",
                "workspace_tokens": [
                  "wrkspc_52b6e5e663b4cde1"
                ],
                "user_tokens": [
                  "usr_a00e614b5843c234"
                ]
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "operationId": "createTeam"
      },
      "get": {
        "description": "Return all Teams that the current API token has access to.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Teams"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/teams",
                  "first": "https://api.vantage.com/v2/teams?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/teams?page=1",
                  "prev": null
                },
                "teams": [
                  {
                    "token": "team_2d4733920ec4385e",
                    "name": "New Mexico people",
                    "description": "Consequuntur ratione.",
                    "workspace_tokens": [
                      "wrkspc_08026aa5fb4c90f8"
                    ],
                    "user_tokens": [
                      "usr_c59398553e838116"
                    ]
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "operationId": "getTeams"
      }
    },
    "/teams/{team_token}": {
      "delete": {
        "description": "Delete a Team.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "team_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Team"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "operationId": "deleteTeam"
      },
      "put": {
        "description": "Update a Team.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "team_token",
            "type": "string",
            "required": true
          },
          {
            "name": "updateTeam",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateTeam"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Team"
            },
            "examples": {
              "application/json": {
                "token": "team_d617e73dcc6b57c5",
                "name": "Updated Team",
                "description": "Updated Team Description",
                "workspace_tokens": [
                  "wrkspc_efc4284a56772481"
                ],
                "user_tokens": [
                  "usr_d268561e520c7aac"
                ]
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "operationId": "updateTeam"
      },
      "get": {
        "description": "Return a specific Team.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "team_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Team"
            },
            "examples": {
              "application/json": {
                "token": "team_081e09bbb812d369",
                "name": "Missouri cats",
                "description": "Voluptas et.",
                "workspace_tokens": [
                  "wrkspc_ddc003a2f0171bf8"
                ],
                "user_tokens": [
                  "usr_7c309915e847cfc6"
                ]
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "operationId": "getTeam"
      }
    },
    "/access_grants": {
      "post": {
        "description": "Create an Access Grant.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createAccessGrant",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createAccessGrant"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AccessGrant"
            },
            "examples": {
              "application/json": {
                "token": "rsrc_accss_grnt_9f8aeb3cedda3831",
                "resource_token": "rprt_3b935d26cba36fb0",
                "access": "denied",
                "team_token": "team_26865e16e46028ae",
                "created_at": "2024-01-18T17:39:37Z",
                "created_by": "usr_2fc38883da3726b9"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "406": {
            "description": "NotAcceptable",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "AccessGrants"
        ],
        "operationId": "createAccessGrant"
      },
      "get": {
        "description": "Return all Access Grants that the current API token has access to.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AccessGrants"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/access_grants",
                  "first": "https://api.vantage.com/v2/access_grants?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/access_grants?page=1",
                  "prev": null
                },
                "access_grants": [
                  {
                    "token": "rsrc_accss_grnt_c40f15062b6d5c37",
                    "resource_token": "rprt_5a269d316483b01c",
                    "access": "denied",
                    "team_token": "team_fd5c524ba104712b",
                    "created_at": "2024-01-18T17:39:37Z",
                    "created_by": "usr_eb8ce6bdc1fa31d5"
                  },
                  {
                    "token": "rsrc_accss_grnt_9723e984e93d8907",
                    "resource_token": "dshbrd_a08561ec24875ac9",
                    "access": "allowed",
                    "team_token": "team_fd5c524ba104712b",
                    "created_at": "2024-01-18T17:39:37Z",
                    "created_by": "usr_eb8ce6bdc1fa31d5"
                  },
                  {
                    "token": "rsrc_accss_grnt_eee5c4fd777d4dc8",
                    "resource_token": "fldr_9d4ad1a769131c58",
                    "access": "allowed",
                    "team_token": "team_fd5c524ba104712b",
                    "created_at": "2024-01-18T17:39:38Z",
                    "created_by": "usr_eb8ce6bdc1fa31d5"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "AccessGrants"
        ],
        "operationId": "getAccessGrants"
      }
    },
    "/access_grants/{access_grant_token}": {
      "delete": {
        "description": "Delete an Access Grant.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "access_grant_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AccessGrant"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "AccessGrants"
        ],
        "operationId": "deleteAccessGrant"
      },
      "put": {
        "description": "Update an AccessGrant.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "access_grant_token",
            "type": "string",
            "required": true
          },
          {
            "name": "updateAccessGrant",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateAccessGrant"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AccessGrant"
            },
            "examples": {
              "application/json": {
                "token": "rsrc_accss_grnt_eea11f0d35318b0d",
                "resource_token": "rprt_e84d7760ab2dd7dc",
                "access": "allowed",
                "team_token": "team_25fc4aa890869602",
                "created_at": "2024-01-18T17:39:36Z",
                "created_by": "usr_57ed2fa2a7b30166"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "AccessGrants"
        ],
        "operationId": "updateAccessGrant"
      },
      "get": {
        "description": "Return a specific Access Grant.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "access_grant_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AccessGrant"
            },
            "examples": {
              "application/json": {
                "token": "rsrc_accss_grnt_07ed83a5069b91c4",
                "resource_token": "rprt_b8df14aa8a4ad5c7",
                "access": "denied",
                "team_token": "team_14bd13a8bccb8406",
                "created_at": "2024-01-18T17:39:36Z",
                "created_by": "usr_0e1cb254743b26cb"
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "AccessGrants"
        ],
        "operationId": "getAccessGrant"
      }
    },
    "/report_notifications": {
      "post": {
        "description": "Create a ReportNotification.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createReportNotification",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createReportNotification"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReportNotification"
            },
            "examples": {
              "application/json": {
                "token": "rprt_ntfctn_8ce31b43a149cd2e",
                "title": "New Report Notification",
                "cost_report_token": "rprt_933010600676b02f",
                "user_tokens": [
                  "usr_45e7d17e9f402226"
                ],
                "frequency": "daily",
                "change": "percentage"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "ReportNotifications"
        ],
        "operationId": "createReportNotification"
      },
      "get": {
        "description": "Return all ReportNotifications.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReportNotifications"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/report_notifications",
                  "first": "https://api.vantage.com/v2/report_notifications?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/report_notifications?page=1",
                  "prev": null
                },
                "report_notifications": [
                  {
                    "token": "rprt_ntfctn_7c09ca27d07d8d1e",
                    "title": "Test Notification",
                    "cost_report_token": "rprt_ba0a5a5201390d72",
                    "user_tokens": [
                      "usr_27edb13f3beac3cb"
                    ],
                    "frequency": "weekly",
                    "change": "percentage"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "ReportNotifications"
        ],
        "operationId": "getReportNotifications"
      }
    },
    "/report_notifications/{report_notification_token}": {
      "delete": {
        "description": "Delete a ReportNotification.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "report_notification_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReportNotification"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "ReportNotifications"
        ],
        "operationId": "deleteReportNotification"
      },
      "put": {
        "description": "Update a ReportNotification.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "report_notification_token",
            "type": "string",
            "required": true
          },
          {
            "name": "updateReportNotification",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateReportNotification"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReportNotification"
            },
            "examples": {
              "application/json": {
                "token": "rprt_ntfctn_b36b208a90ee87f6",
                "title": "Updated Report Notification",
                "cost_report_token": "rprt_07b88c04aa6bed8c",
                "user_tokens": [
                  "usr_35ed19fadcfed8c9"
                ],
                "frequency": "weekly",
                "change": "dollars"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "ReportNotifications"
        ],
        "operationId": "updateReportNotification"
      },
      "get": {
        "description": "Return a ReportNotification.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "report_notification_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReportNotification"
            },
            "examples": {
              "application/json": {
                "token": "rprt_ntfctn_21b4287a212406b1",
                "title": "Test Notification",
                "cost_report_token": "rprt_d084c84455edc606",
                "user_tokens": [
                  "usr_56d53f802edba3e6"
                ],
                "frequency": "weekly",
                "change": "percentage"
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "ReportNotifications"
        ],
        "operationId": "getReportNotification"
      }
    },
    "/users": {
      "get": {
        "description": "Return all Users that the current API token has access to.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Users"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/users",
                  "first": "https://api.vantage.com/v2/users?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/users?page=1",
                  "prev": null
                },
                "users": [
                  {
                    "token": "usr_aa5cce4180981299",
                    "name": "Jeanice Bins",
                    "email": "jeanice_bins@torp-huels.name",
                    "role": "Owner",
                    "last_seen_at": "2024-01-01"
                  },
                  {
                    "token": "usr_2372916b9f9589e7",
                    "name": "Otto Goyette",
                    "email": "otto_goyette@cronin.net",
                    "role": "Owner",
                    "last_seen_at": "2024-01-01"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "operationId": "getUsers"
      }
    },
    "/users/{user_token}": {
      "get": {
        "description": "Return a specific User.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            },
            "examples": {
              "application/json": {
                "token": "usr_bfc6ab15e635f848",
                "name": "Patrick White",
                "email": "white.patrick@kassulke-nitzsche.net",
                "role": "Owner",
                "last_seen_at": "2024-01-01"
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "operationId": "getUser"
      }
    },
    "/business_metrics": {
      "post": {
        "description": "Create a new BusinessMetric.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createBusinessMetric",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createBusinessMetric"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BusinessMetric"
            },
            "examples": {
              "application/json": {
                "token": "bsnss_mtrc_553dd522c66cb1aa",
                "title": "New Biz Metric",
                "created_by_token": "usr_16adb5609ee89b8e",
                "cost_report_tokens_with_metadata": [
                  {
                    "cost_report_token": "rprt_6633ef89c4c8c87e",
                    "unit_scale": "per_thousand",
                    "label_filter": [
                      "CBGB",
                      "Roxy",
                      "Studio 54",
                      ""
                    ]
                  }
                ],
                "values": [
                  {
                    "date": "2024-01-03T00:00:00Z",
                    "amount": "300.0",
                    "label": "Cost Center 3"
                  },
                  {
                    "date": "2024-01-02T00:00:00Z",
                    "amount": "200.0",
                    "label": "Cost Center 2"
                  },
                  {
                    "date": "2024-01-01T00:00:00Z",
                    "amount": "100.0",
                    "label": "Cost Center 1"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "BusinessMetrics"
        ],
        "operationId": "createBusinessMetric"
      },
      "get": {
        "description": "Return all BusinessMetrics that the current API token has access to.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BusinessMetrics"
            },
            "examples": {
              "application/json": {
                "business_metrics": [
                  {
                    "token": "bsnss_mtrc_11d005e278be649c",
                    "title": "Biz Metric",
                    "created_by_token": "usr_bce141144bee90d6",
                    "cost_report_tokens_with_metadata": [],
                    "values": []
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "BusinessMetrics"
        ],
        "operationId": "getBusinessMetrics"
      }
    },
    "/business_metrics/{business_metric_token}": {
      "delete": {
        "description": "Deletes an existing BusinessMetric.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "business_metric_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BusinessMetric"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "BusinessMetrics"
        ],
        "operationId": "deleteBusinessMetric"
      },
      "put": {
        "description": "Updates an existing BusinessMetric.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "business_metric_token",
            "type": "string",
            "required": true
          },
          {
            "name": "updateBusinessMetric",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateBusinessMetric"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BusinessMetric"
            },
            "examples": {
              "application/json": {
                "token": "bsnss_mtrc_a7f01adf0feb24a6",
                "title": "New Title",
                "created_by_token": "usr_0ce8d894fa21de5b",
                "cost_report_tokens_with_metadata": [
                  {
                    "cost_report_token": "rprt_3e844c470bb76b93",
                    "unit_scale": "per_thousand",
                    "label_filter": [
                      "CBGB",
                      "Roxy",
                      "Studio 54",
                      ""
                    ]
                  }
                ],
                "values": [
                  {
                    "date": "2024-01-03T00:00:00Z",
                    "amount": "600.0"
                  },
                  {
                    "date": "2024-01-02T00:00:00Z",
                    "amount": "500.0"
                  },
                  {
                    "date": "2024-01-01T00:00:00Z",
                    "amount": "400.0"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "BusinessMetrics"
        ],
        "operationId": "updateBusinessMetric"
      },
      "get": {
        "description": "Return a specific BusinessMetrics.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "business_metric_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BusinessMetric"
            },
            "examples": {
              "application/json": {
                "token": "bsnss_mtrc_40f153ce6c3ca185",
                "title": "Biz Metric",
                "created_by_token": "usr_d0f62560360b1481",
                "cost_report_tokens_with_metadata": [],
                "values": []
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "BusinessMetrics"
        ],
        "operationId": "getBusinessMetric"
      }
    },
    "/business_metrics/{business_metric_token}/values.csv": {
      "put": {
        "description": "Updates the values for an existing BusinessMetric from a CSV file.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "csv",
            "description": "CSV file containing BusinessMetric dates and amounts",
            "type": "file",
            "required": true
          },
          {
            "in": "path",
            "name": "business_metric_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BusinessMetric"
            },
            "examples": {
              "application/json": {
                "token": "bsnss_mtrc_5bb17b18e416648d",
                "title": "Biz Metric",
                "created_by_token": "usr_e2ac901c508a8174",
                "cost_report_tokens_with_metadata": [],
                "values": [
                  {
                    "date": "2024-01-03T00:00:00Z",
                    "amount": "300.3",
                    "label": "Cost Center 3"
                  },
                  {
                    "date": "2024-01-02T00:00:00Z",
                    "amount": "200.2",
                    "label": "Cost Center 2"
                  },
                  {
                    "date": "2024-01-01T00:00:00Z",
                    "amount": "100.1",
                    "label": "Cost Center 1"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "BusinessMetrics"
        ],
        "operationId": "updateBusinessMetricValuesCSV"
      }
    },
    "/products": {
      "get": {
        "description": "Return available Products for a Service. For example, with a Provider of AWS and a Service of EC2, Products will be a list of all EC2 Instances. By default, this endpoint returns all Products across all Services and Providers but has optional query parameters for filtering listed below.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "provider_id",
            "description": "Query by Provider to list all Products across all Services for a Provider. e.g. aws",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "service_id",
            "description": "Query by Service to list all Products for a specific provider service. e.g. aws-ec2",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "name",
            "description": "Query by name of the Product to see a list of products which match that name. e.g. m5a.16xlarge",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Products"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v1/products",
                  "first": "https://api.vantage.com/v1/products?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v1/products?page=1",
                  "prev": null
                },
                "products": [
                  {
                    "id": "aws-ec2-m5d_16xlarge",
                    "category": "compute",
                    "name": "m5d.16xlarge",
                    "service_id": "aws-ec2",
                    "provider_id": "aws",
                    "details": {
                      "gpu": 0,
                      "name": "M5 General Purpose 16xlarge",
                      "vcpu": 64,
                      "memory": 256,
                      "clock_speed_ghz": 3.1,
                      "physical_processor_description": "Intel Xeon Platinum 8175 (Skylake)",
                      "network_performance_description": "20 Gigabit"
                    }
                  },
                  {
                    "id": "aws-ec2-c5a_8xlarge",
                    "category": "compute",
                    "name": "c5a.8xlarge",
                    "service_id": "aws-ec2",
                    "provider_id": "aws",
                    "details": {
                      "gpu": 0,
                      "name": "C5A 8xlarge",
                      "vcpu": 64,
                      "memory": 256
                    }
                  },
                  {
                    "id": "aws-ec2-c5a_4large",
                    "category": "compute",
                    "name": "c5a.4large",
                    "service_id": "aws-ec2",
                    "provider_id": "aws",
                    "details": {
                      "gpu": 0,
                      "name": "C5A 4large",
                      "vcpu": 64,
                      "memory": 4
                    }
                  },
                  {
                    "id": "aws-s3-standard",
                    "category": "object_storage",
                    "name": "standard",
                    "service_id": "aws-s3",
                    "provider_id": "aws",
                    "details": {}
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Prices"
        ],
        "operationId": "getProducts"
      }
    },
    "/products/{id}": {
      "get": {
        "description": "Return a product",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            },
            "examples": {
              "application/json": {
                "id": "aws-ec2-m5d_16xlarge",
                "category": "compute",
                "name": "m5d.16xlarge",
                "service_id": "aws-ec2",
                "provider_id": "aws",
                "details": {
                  "gpu": 0,
                  "name": "M5 General Purpose 16xlarge",
                  "vcpu": 64,
                  "memory": 256,
                  "clock_speed_ghz": 3.1,
                  "physical_processor_description": "Intel Xeon Platinum 8175 (Skylake)",
                  "network_performance_description": "20 Gigabit"
                }
              }
            }
          }
        },
        "tags": [
          "Prices"
        ],
        "operationId": "getProduct"
      }
    },
    "/products/{product_id}/prices": {
      "get": {
        "description": "Return available Prices across all Regions for a Product.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "product_id",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Prices"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v1/products/aws-ec2-m5d_16xlarge/prices",
                  "first": "https://api.vantage.com/v1/products/aws-ec2-m5d_16xlarge/prices?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v1/products/aws-ec2-m5d_16xlarge/prices?page=1",
                  "prev": null
                },
                "prices": [
                  {
                    "id": "aws-ec2-m5d_16xlarge-eu_central_1-on_demand-linux_enterprise",
                    "unit": "hour",
                    "region": "eu-central-1",
                    "rate_type": "compute",
                    "currency": "USD",
                    "amount": 27.328,
                    "details": {
                      "platform": "linux-enterprise",
                      "lifecycle": "on-demand"
                    }
                  },
                  {
                    "id": "aws-ec2-m5d_16xlarge-us_east_1-on_demand-linux_enterprise",
                    "unit": "hour",
                    "region": "us-east-1",
                    "rate_type": "compute",
                    "currency": "USD",
                    "amount": 3.616,
                    "details": {
                      "platform": "linux-enterprise",
                      "lifecycle": "on-demand"
                    }
                  },
                  {
                    "id": "aws-ec2-m5d_16xlarge-us_east_1-on_demand-rhel",
                    "unit": "hour",
                    "region": "us-east-1",
                    "rate_type": "compute",
                    "currency": "USD",
                    "amount": 3.746,
                    "details": {
                      "platform": "rhel",
                      "lifecycle": "on-demand"
                    }
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Prices"
        ],
        "operationId": "getPrices"
      }
    },
    "/products/{product_id}/prices/{id}": {
      "get": {
        "description": "Returns a price",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "product_id",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Price"
            },
            "examples": {
              "application/json": {
                "id": "aws-ec2-m5d_16xlarge-eu_central_1-on_demand-linux_enterprise",
                "unit": "hour",
                "region": "eu-central-1",
                "rate_type": "compute",
                "currency": "USD",
                "amount": 27.328,
                "details": {
                  "platform": "linux-enterprise",
                  "lifecycle": "on-demand"
                }
              }
            }
          }
        },
        "tags": [
          "Prices"
        ],
        "operationId": "getPrice"
      }
    },
    "/financial_commitment_reports": {
      "get": {
        "description": "Return all FinancialCommitmentReports.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FinancialCommitmentReports"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/financial_commitment_reports",
                  "first": "https://api.vantage.com/v2/financial_commitment_reports?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/financial_commitment_reports?page=1",
                  "prev": null
                },
                "financial_commitment_reports": [
                  {
                    "token": "fncl_cmnt_rprt_8856c4e96c5a7a0e",
                    "title": "All Financial Commitments",
                    "default": false,
                    "created_at": "2024-03-28T18:26:26Z",
                    "workspace_token": "wrkspc_1ca9ae316e86906f",
                    "user_token": null,
                    "start_date": "2023-12-01",
                    "end_date": "2024-03-26",
                    "date_interval": "last_3_months",
                    "date_bucket": "month",
                    "groupings": "cost_type",
                    "on_demand_costs_scope": "discountable"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "FinancialCommitmentReports"
        ],
        "operationId": "getFinancialCommitmentReports"
      }
    },
    "/financial_commitment_reports/{financial_commitment_report_token}": {
      "delete": {
        "description": "Delete a FinancialCommitmentReport.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "financial_commitment_report_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FinancialCommitmentReport"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "FinancialCommitmentReports"
        ],
        "operationId": "deleteFinancialCommitmentReport"
      },
      "get": {
        "description": "Return a FinancialCommitmentReport.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "financial_commitment_report_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FinancialCommitmentReport"
            },
            "examples": {
              "application/json": {
                "token": "fncl_cmnt_rprt_674cf1d6ef5f55e5",
                "title": "All Financial Commitments",
                "default": false,
                "created_at": "2024-03-28T18:26:26Z",
                "workspace_token": "wrkspc_075ac35ab0dc1b4a",
                "user_token": null,
                "start_date": "2023-12-01",
                "end_date": "2024-03-26",
                "date_interval": "last_3_months",
                "date_bucket": "month",
                "groupings": "cost_type",
                "on_demand_costs_scope": "discountable"
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "FinancialCommitmentReports"
        ],
        "operationId": "getFinancialCommitmentReport"
      }
    },
    "/financial_commitments": {
      "get": {
        "description": "Return all FinancialCommitments.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FinancialCommitments"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/financial_commitments",
                  "first": "https://api.vantage.com/v2/financial_commitments?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/financial_commitments?page=1",
                  "prev": null
                },
                "financial_commitments": [
                  {
                    "commitment_type": "aws_savings_plan",
                    "service": "Compute",
                    "account": "153271892032",
                    "type": "3 Year Compute Savings Plan",
                    "instance_count": null,
                    "term": "1 Year",
                    "payment_type": "No upfront",
                    "region": null,
                    "purchase_date": "2024-04-15",
                    "expiration_date": "2025-04-15",
                    "commitment": "$1.00",
                    "status": "active",
                    "created_at": "2024-04-15T19:51:27Z",
                    "workspace_token": "wrkspc_8c897c3d73b69279"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "FinancialCommitments"
        ],
        "operationId": "getFinancialCommitments"
      }
    },
    "/kubernetes_efficiency_reports": {
      "post": {
        "description": "Create a KubernetesEfficiencyReport.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createKubernetesEfficiencyReport",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createKubernetesEfficiencyReport"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/KubernetesEfficiencyReport"
            },
            "examples": {
              "application/json": {
                "token": "kbnts_eff_rprt_b5c0eedc83b259be",
                "title": "title",
                "default": false,
                "created_at": "2024-11-05T20:32:30Z",
                "workspace_token": "wrkspc_71e915f9671fa270",
                "user_token": null,
                "start_date": "2024-11-01",
                "end_date": "2024-11-30",
                "date_interval": "this_month",
                "date_bucket": "day",
                "aggregated_by": "idle_cost",
                "groupings": "cluster_id",
                "filter": "kubernetes.cluster_id   =   'cluster-1'"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "KubernetesEfficiencyReports"
        ],
        "operationId": "createKubernetesEfficiencyReport"
      },
      "get": {
        "description": "Return all KubernetesEfficiencyReports.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/KubernetesEfficiencyReports"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/kubernetes_efficiency_reports",
                  "first": "https://api.vantage.com/v2/kubernetes_efficiency_reports?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/kubernetes_efficiency_reports?page=1",
                  "prev": null
                },
                "kubernetes_efficiency_reports": [
                  {
                    "token": "kbnts_eff_rprt_f8d610afacc7e6c6",
                    "title": "Sriracha aesthetic echo literally retro.",
                    "default": false,
                    "created_at": "2024-10-25T21:20:43Z",
                    "workspace_token": "wrkspc_64768b29bebf9dfe",
                    "user_token": null,
                    "start_date": "2024-10-01",
                    "end_date": "2024-10-31",
                    "date_interval": "this_month",
                    "date_bucket": "day",
                    "aggregated_by": "idle_cost",
                    "groupings": "cluster_id"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "KubernetesEfficiencyReports"
        ],
        "operationId": "getKubernetesEfficiencyReports"
      }
    },
    "/kubernetes_efficiency_reports/{kubernetes_efficiency_report_token}": {
      "delete": {
        "description": "Delete a KubernetesEfficiencyReport.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "kubernetes_efficiency_report_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/KubernetesEfficiencyReport"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "KubernetesEfficiencyReports"
        ],
        "operationId": "deleteKubernetesEfficiencyReport"
      },
      "put": {
        "description": "Update a KubernetesEfficiencyReport.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "kubernetes_efficiency_report_token",
            "type": "string",
            "required": true
          },
          {
            "name": "updateKubernetesEfficiencyReport",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateKubernetesEfficiencyReport"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/KubernetesEfficiencyReport"
            },
            "examples": {
              "application/json": {
                "token": "kbnts_eff_rprt_f9ee5fadf5e1a6e6",
                "title": "new title",
                "default": false,
                "created_at": "2024-10-25T21:20:42Z",
                "workspace_token": "wrkspc_303c3228e22ccb6f",
                "user_token": null,
                "start_date": "2024-10-01",
                "end_date": "2024-10-31",
                "date_interval": "this_month",
                "date_bucket": "day",
                "aggregated_by": "idle_cost",
                "groupings": "cluster_id"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "KubernetesEfficiencyReports"
        ],
        "operationId": "updateKubernetesEfficiencyReport"
      },
      "get": {
        "description": "Return a KubernetesEfficiencyReport.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "kubernetes_efficiency_report_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/KubernetesEfficiencyReport"
            },
            "examples": {
              "application/json": {
                "token": "kbnts_eff_rprt_8f8b9caaffee230b",
                "title": "+1 disrupt.",
                "default": false,
                "created_at": "2024-10-25T21:20:43Z",
                "workspace_token": "wrkspc_d6ab5f555d9bd0b5",
                "user_token": null,
                "start_date": "2024-10-01",
                "end_date": "2024-10-31",
                "date_interval": "this_month",
                "date_bucket": "day",
                "aggregated_by": "idle_cost",
                "groupings": "cluster_id"
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "KubernetesEfficiencyReports"
        ],
        "operationId": "getKubernetesEfficiencyReport"
      }
    },
    "/anomaly_alerts": {
      "get": {
        "description": "Return all Anomaly Alerts that the current API token has access to.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AnomalyAlerts"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/anomaly_alerts",
                  "first": "https://api.vantage.com/v2/anomaly_alerts?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/anomaly_alerts?page=1",
                  "prev": null
                },
                "anomaly_alerts": [
                  {
                    "token": "anmly_alrt_e1fb8184ecdf129d",
                    "created_at": "2024-04-01T17:14:45Z",
                    "alerted_at": "2024-04-01T17:14:45Z",
                    "category": "Compute",
                    "service": "AmazonEKS",
                    "provider": "aws",
                    "amount": "100.0",
                    "previous_amount": "25.0",
                    "seven_day_average": "10.0",
                    "status": "active",
                    "feedback": null,
                    "cost_report_token": "rprt_3d541a4c5160711f"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "AnomalyAlerts"
        ],
        "operationId": "getAnomalyAlerts"
      }
    },
    "/anomaly_alerts/{anomaly_alert_token}": {
      "put": {
        "description": "Update an AnomalyAlert.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "anomaly_alert_token",
            "type": "string",
            "required": true
          },
          {
            "name": "updateAnomalyAlert",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateAnomalyAlert"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AnomalyAlert"
            },
            "examples": {
              "application/json": {
                "token": "anmly_alrt_51a2ce4137305fc6",
                "created_at": "2024-04-01T17:14:46Z",
                "alerted_at": "2024-04-01T17:14:46Z",
                "category": "Compute",
                "service": "AmazonEKS",
                "provider": "aws",
                "amount": "100.0",
                "previous_amount": "25.0",
                "seven_day_average": "10.0",
                "status": "archived",
                "feedback": "this stinks",
                "cost_report_token": "rprt_57912c584fdf88f4"
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "AnomalyAlerts"
        ],
        "operationId": "updateAnomalyAlert"
      },
      "get": {
        "description": "Return an AnomalyAlert that the current API token has access to.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "anomaly_alert_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AnomalyAlert"
            },
            "examples": {
              "application/json": {
                "token": "anmly_alrt_6056b98225236ece",
                "created_at": "2024-04-01T17:14:45Z",
                "alerted_at": "2024-04-01T17:14:45Z",
                "category": "Compute",
                "service": "AmazonEKS",
                "provider": "aws",
                "amount": "100.0",
                "previous_amount": "25.0",
                "seven_day_average": "10.0",
                "status": "active",
                "feedback": null,
                "cost_report_token": "rprt_bf0a30084fbf52c2"
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "AnomalyAlerts"
        ],
        "operationId": "getAnomalyAlert"
      }
    },
    "/virtual_tag_configs": {
      "post": {
        "description": "Create a new VirtualTagConfig.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createVirtualTagConfig",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createVirtualTagConfig"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualTagConfig"
            },
            "examples": {
              "application/json": {
                "token": "vtag_d5503747c5ce9a21",
                "created_by_token": "team_7589281b8e354c45",
                "key": "Expense Code",
                "overridable": false,
                "backfill_until": "2024-07-01",
                "values": [
                  {
                    "filter": "costs.provider = 'aws' AND\ncosts.service = 'Amazon Elastic Compute Cloud' AND\ncosts.account_id IN ('1234', '5678')\n",
                    "name": "EXPC-1234"
                  },
                  {
                    "filter": "(\n  (costs.provider = 'aws' AND costs.account_id IN ('1234', '5678')) OR\n  (costs.provider = 'gcp' AND costs.service = 'Google Compute Engine')\n)\n",
                    "name": "EXPC-9876"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "VirtualTags"
        ],
        "operationId": "createVirtualTagConfig"
      },
      "get": {
        "description": "Return all VirtualTagConfigs that the current API token has access to.",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualTagConfigs"
            },
            "examples": {
              "application/json": {
                "virtual_tag_configs": [
                  {
                    "token": "vtag_1a19e1d80dbbfac1",
                    "created_by_token": "usr_66a02851d18a9504",
                    "key": "Product Team",
                    "overridable": false,
                    "backfill_until": "2024-07-01",
                    "values": [
                      {
                        "filter": "(costs.provider = 'aws' AND costs.service = 'Amazon Elastic Compute Cloud') AND (costs.provider = 'aws' AND costs.account_id IN ('1234', '5678'))",
                        "name": "Growth"
                      },
                      {
                        "filter": "(costs.provider = 'aws' AND costs.account_id IN ('1234', '5678')) OR (costs.provider = 'gcp' AND costs.service = 'Google Compute Engine')",
                        "name": "API"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "VirtualTags"
        ],
        "operationId": "getVirtualTagConfigs"
      }
    },
    "/virtual_tag_configs/{token}": {
      "delete": {
        "description": "Deletes an existing VirtualTagConfig.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualTagConfig"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "VirtualTags"
        ],
        "operationId": "deleteVirtualTagConfig"
      },
      "put": {
        "description": "Updates an existing VirtualTagConfig.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "type": "string",
            "required": true
          },
          {
            "name": "updateVirtualTagConfig",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateVirtualTagConfig"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualTagConfig"
            },
            "examples": {
              "application/json": {
                "token": "vtag_4430add8b8552a32",
                "created_by_token": "usr_c3dedc15ebe12e03",
                "key": "team",
                "overridable": true,
                "backfill_until": "2024-07-01",
                "values": [
                  {
                    "filter": "costs.provider = 'aws' AND costs.service = 'Amazon Elastic Compute Cloud' AND\ncosts.account_id IN ('1234', '5678')\n",
                    "name": "marketing"
                  },
                  {
                    "filter": "((costs.provider = 'aws' AND costs.account_id IN ('1234', '5678')) OR\n(costs.provider = 'gcp' AND costs.service = 'Google Compute Engine'))\n",
                    "name": "third-party integrations"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "VirtualTags"
        ],
        "operationId": "updateVirtualTagConfig"
      },
      "get": {
        "description": "Return a specific VirtualTagConfig.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualTagConfig"
            },
            "examples": {
              "application/json": {
                "token": "vtag_9cefbbc5f17d06fc",
                "created_by_token": "usr_f8c083243325740b",
                "key": "Product Team",
                "overridable": false,
                "backfill_until": "2024-07-01",
                "values": [
                  {
                    "filter": "(costs.provider = 'aws' AND costs.service = 'Amazon Elastic Compute Cloud') AND (costs.provider = 'aws' AND costs.account_id IN ('1234', '5678'))",
                    "name": "Growth"
                  },
                  {
                    "filter": "(costs.provider = 'aws' AND costs.account_id IN ('1234', '5678')) OR (costs.provider = 'gcp' AND costs.service = 'Google Compute Engine')",
                    "name": "API"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "VirtualTags"
        ],
        "operationId": "getVirtualTagConfig"
      }
    },
    "/anomaly_notifications": {
      "post": {
        "description": "Create an Anomaly Notification for a Cost Report.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createAnomalyNotification",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createAnomalyNotification"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AnomalyNotification"
            },
            "examples": {
              "application/json": {
                "token": "rprt_alrt_9b22edfa0a175609",
                "cost_report_token": "rprt_4c9e5f72ae27bc24",
                "created_at": "2024-04-09T15:05:37Z",
                "updated_at": "2024-04-09T15:05:37Z",
                "threshold": 1,
                "user_tokens": [
                  "usr_3773d590e84f6f12"
                ],
                "recipient_channels": [
                  "channel1",
                  "channel2"
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "AnomalyNotifications"
        ],
        "operationId": "createAnomalyNotification"
      },
      "get": {
        "description": "Return all Anomaly Notifications.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AnomalyNotifications"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/anomaly_notifications",
                  "first": "https://api.vantage.com/v2/anomaly_notifications?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/anomaly_notifications?page=1",
                  "prev": null
                },
                "anomaly_notifications": [
                  {
                    "token": "rprt_alrt_ecb76d8d2825762f",
                    "cost_report_token": "rprt_45fe4d4c1779ce7e",
                    "created_at": "2024-04-09T15:05:37Z",
                    "updated_at": "2024-04-09T15:05:37Z",
                    "threshold": 10,
                    "user_tokens": [
                      "usr_13477ee1b1eb81ba"
                    ],
                    "recipient_channels": []
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "AnomalyNotifications"
        ],
        "operationId": "getAnomalyNotifications"
      }
    },
    "/anomaly_notifications/{anomaly_notification_token}": {
      "delete": {
        "description": "Delete an Anomaly Notification.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "anomaly_notification_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AnomalyNotification"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "AnomalyNotifications"
        ],
        "operationId": "deleteAnomalyNotification"
      },
      "put": {
        "description": "Update an Anomaly Notification.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "anomaly_notification_token",
            "type": "string",
            "required": true
          },
          {
            "name": "updateAnomalyNotification",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateAnomalyNotification"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AnomalyNotification"
            },
            "examples": {
              "application/json": {
                "token": "rprt_alrt_15da34156dca939d",
                "cost_report_token": "rprt_82320a9c1a608f0f",
                "created_at": "2024-04-09T15:05:37Z",
                "updated_at": "2024-04-09T15:05:37Z",
                "threshold": 2,
                "user_tokens": [
                  "usr_dff5de2b6aecf042"
                ],
                "recipient_channels": [
                  "channel3",
                  "channel4"
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "AnomalyNotifications"
        ],
        "operationId": "updateAnomalyNotification"
      },
      "get": {
        "description": "Return an Anomaly Notification that the current API token has access to.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "anomaly_notification_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AnomalyNotification"
            },
            "examples": {
              "application/json": {
                "token": "rprt_alrt_5af901100951705b",
                "cost_report_token": "rprt_0d88354748562c26",
                "created_at": "2024-04-09T15:05:37Z",
                "updated_at": "2024-04-09T15:05:37Z",
                "threshold": 10,
                "user_tokens": [
                  "usr_e163fcb7aeb41f3b"
                ],
                "recipient_channels": []
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "AnomalyNotifications"
        ],
        "operationId": "getAnomalyNotification"
      }
    },
    "/budgets": {
      "post": {
        "description": "Create a Budget.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createBudget",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createBudget"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Budget"
            },
            "examples": {
              "application/json": {
                "token": "bdgt_ea1eaec89d553e34",
                "name": "New Budget Name",
                "workspace_token": "wrkspc_b83e21368ee5fd9d",
                "user_token": null,
                "created_by_token": "team_aea2488160e90528",
                "cost_report_token": null,
                "created_at": "2024-07-11T20:22:52Z",
                "budget_alert_tokens": [],
                "periods": [
                  {
                    "start_at": "2024-01-01",
                    "end_at": "2024-01-31",
                    "amount": "100.0"
                  },
                  {
                    "start_at": "2024-02-01",
                    "end_at": "2024-02-29",
                    "amount": "200.0"
                  },
                  {
                    "start_at": "2024-03-01",
                    "end_at": "2024-04-30",
                    "amount": "300.0"
                  }
                ],
                "performance": [
                  {
                    "date": "April, 2024",
                    "actual": "0%",
                    "amount": "300.0"
                  },
                  {
                    "date": "March, 2024",
                    "actual": "0%",
                    "amount": "300.0"
                  },
                  {
                    "date": "February, 2024",
                    "actual": "0%",
                    "amount": "200.0"
                  },
                  {
                    "date": "January, 2024",
                    "actual": "0%",
                    "amount": "100.0"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Budgets"
        ],
        "operationId": "createBudget"
      },
      "get": {
        "description": "Return all Budgets.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The number of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Budgets"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/budgets",
                  "first": "https://api.vantage.com/v2/budgets?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/budgets?page=1",
                  "prev": null
                },
                "budgets": [
                  {
                    "token": "bdgt_0d825e79a0682cc2",
                    "name": "database",
                    "workspace_token": "wrkspc_226ab053bd01bb2b",
                    "user_token": "usr_8e44c17792242852",
                    "created_by_token": "usr_8e44c17792242852",
                    "cost_report_token": "rprt_92062240b4ffda91",
                    "created_at": "2024-07-11T20:22:49Z",
                    "budget_alert_tokens": [],
                    "periods": [
                      {
                        "start_at": "2024-07-01",
                        "end_at": "2024-09-30",
                        "amount": "10000.0"
                      }
                    ],
                    "performance": [
                      {
                        "date": "July, 2024",
                        "actual": "-100%",
                        "amount": "10000.0"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Budgets"
        ],
        "operationId": "getBudgets"
      }
    },
    "/budgets/{budget_token}": {
      "delete": {
        "description": "Delete a Budget.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "budget_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Budget"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Budgets"
        ],
        "operationId": "deleteBudget"
      },
      "put": {
        "description": "Update a Budget.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "budget_token",
            "type": "string",
            "required": true
          },
          {
            "name": "updateBudget",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateBudget"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Budget"
            },
            "examples": {
              "application/json": {
                "token": "bdgt_39ce7f848dff6d54",
                "name": "New Name New Budget Who Dis",
                "workspace_token": "wrkspc_949771e4fb8d7bfe",
                "user_token": "usr_9b375256090d0fda",
                "created_by_token": "usr_9b375256090d0fda",
                "cost_report_token": "rprt_07325bc3667263b7",
                "created_at": "2024-07-11T20:22:48Z",
                "budget_alert_tokens": [],
                "periods": [
                  {
                    "start_at": "2023-01-01",
                    "end_at": "2023-01-31",
                    "amount": "234.0"
                  },
                  {
                    "start_at": "2024-01-01",
                    "end_at": "2024-01-31",
                    "amount": "123.0"
                  },
                  {
                    "start_at": "2024-07-01",
                    "end_at": "2024-09-30",
                    "amount": "10000.0"
                  }
                ],
                "performance": [
                  {
                    "date": "July, 2024",
                    "actual": "-100%",
                    "amount": "10000.0"
                  },
                  null,
                  null,
                  null,
                  null,
                  null,
                  {
                    "date": "January, 2024",
                    "actual": "-100%",
                    "amount": "123.0"
                  },
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  {
                    "date": "January, 2023",
                    "actual": "1224%",
                    "amount": "234.0"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Budgets"
        ],
        "operationId": "updateBudget"
      },
      "get": {
        "description": "Return a Budget.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "include_performance",
            "description": "Include performance data.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "path",
            "name": "budget_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Budget"
            },
            "examples": {
              "application/json": {
                "token": "bdgt_24068dbacaaad7fb",
                "name": "Total",
                "workspace_token": "wrkspc_545a937d68541448",
                "user_token": "usr_470d15b368844366",
                "created_by_token": "usr_470d15b368844366",
                "cost_report_token": "rprt_9ee9f29893956951",
                "created_at": "2024-07-11T20:22:41Z",
                "budget_alert_tokens": [],
                "periods": [
                  {
                    "start_at": "2024-07-01",
                    "end_at": "2024-09-30",
                    "amount": "10000.0"
                  }
                ],
                "performance": [
                  {
                    "date": "July, 2024",
                    "actual": "-100%",
                    "amount": "10000.0"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Budgets"
        ],
        "operationId": "getBudget"
      }
    },
    "/budget_alerts": {
      "post": {
        "description": "Create a Budget Alert.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "budget_tokens",
            "description": "The tokens of the Budget that has the alert.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "formData",
            "name": "threshold",
            "description": "The threshold amount that must be met for the alert to fire.",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "formData",
            "name": "user_tokens",
            "description": "The tokens of the users that receive the alert.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "formData",
            "name": "duration_in_days",
            "description": "The number of days from the start or end of the month to trigger the alert if the threshold is reached.  For the full month, pass an empty value.",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "formData",
            "name": "period_to_track",
            "description": "The period tracked on the alert. Used with duration_in_days to determine the time window of the alert. Defaults to start_of_the_month if not passed. Possible values: start_of_the_month, end_of_the_month.",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "recipient_channels",
            "description": "The channels receiving the alerts. Requires an integration provider to be connected.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BudgetAlert"
            },
            "examples": {}
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "BudgetAlerts"
        ],
        "operationId": "createBudgetAlert"
      },
      "get": {
        "description": "Return all BudgetAlerts.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The number of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BudgetAlerts"
            },
            "examples": {}
          }
        },
        "tags": [
          "BudgetAlerts"
        ],
        "operationId": "getBudgetAlerts"
      }
    },
    "/budget_alerts/{budget_alert_token}": {
      "delete": {
        "description": "Delete a BudgetAlert.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "budget_alert_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BudgetAlert"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "BudgetAlerts"
        ],
        "operationId": "deleteBudgetAlert"
      },
      "put": {
        "description": "Updates an existing BudgetAlert.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "budget_tokens",
            "description": "The tokens of the Budget that has the alert.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "formData",
            "name": "threshold",
            "description": "The threshold amount that must be met for the alert to fire.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "formData",
            "name": "user_tokens",
            "description": "The tokens of the users that receive the alert.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "formData",
            "name": "duration_in_days",
            "description": "The number of days from the start or end of the month to trigger the alert if the threshold is reached. For the full month, pass an empty value.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "formData",
            "name": "period_to_track",
            "description": "The period tracked on the alert. Used with duration_in_days to determine the time window of the alert. Defaults to start_of_the_month if not passed. Possible values: start_of_the_month, end_of_the_month.",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "recipient_channels",
            "description": "The channels receiving the alerts. Requires an integration provider to be connected.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "path",
            "name": "budget_alert_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BudgetAlert"
            },
            "examples": {}
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "BudgetAlerts"
        ],
        "operationId": "updateBudgetAlert"
      },
      "get": {
        "description": "Return a BudgetAlert.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "budget_alert_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BudgetAlert"
            },
            "examples": {}
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "BudgetAlerts"
        ],
        "operationId": "getBudgetAlert"
      }
    },
    "/integrations/azure": {
      "post": {
        "description": "Create an Azure Integration",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createAzureIntegration",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createAzureIntegration"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Integration"
            },
            "examples": {
              "application/json": {
                "token": "accss_crdntl_6eddcfaa81f7303f",
                "provider": "azure",
                "account_identifier": "fake-tenant",
                "status": "connected",
                "workspace_tokens": [],
                "created_at": "2024-07-29T21:41:48Z"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Integrations"
        ],
        "operationId": "createAzureIntegration"
      }
    },
    "/integrations/gcp": {
      "post": {
        "description": "Create a GCP Integration",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createGCPIntegration",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createGCPIntegration"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Integration"
            },
            "examples": {
              "application/json": {
                "token": "accss_crdntl_c36f82e698677581",
                "provider": "gcp",
                "account_identifier": "A11111-B22222-C33333",
                "status": "connected",
                "workspace_tokens": [],
                "created_at": "2024-07-29T21:41:46Z"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Integrations"
        ],
        "operationId": "createGCPIntegration"
      }
    },
    "/integrations/custom_provider": {
      "post": {
        "description": "Create a Custom Provider Integration",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createCustomProviderIntegration",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createCustomProviderIntegration"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Integration"
            },
            "examples": {
              "application/json": {
                "token": "accss_crdntl_35665ec3deb12451",
                "provider": "custom_provider",
                "account_identifier": "Custom Provider Integration",
                "status": "connected",
                "workspace_tokens": [],
                "created_at": "2024-08-27T22:22:24Z"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Integrations"
        ],
        "operationId": "createCustomProviderIntegration"
      }
    },
    "/integrations": {
      "get": {
        "description": "Return all Integrations.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "provider",
            "description": "Query by provider name to list all Integrations for a specific provider.",
            "type": "string",
            "enum": [
              "aws",
              "azure",
              "gcp",
              "snowflake",
              "databricks",
              "mongo",
              "datadog",
              "fastly",
              "new_relic",
              "opencost",
              "open_ai",
              "oracle",
              "confluent",
              "planetscale",
              "coralogix",
              "kubernetes",
              "custom_provider",
              "github",
              "linode",
              "grafana"
            ],
            "required": false
          },
          {
            "in": "query",
            "name": "account_identifier",
            "description": "Query by account identifier to list all Integrations that match a specific account. For Azure, this is the subscription ID. Must include provider when using this parameter.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The number of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Integrations"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/integrations",
                  "first": "https://api.vantage.com/v2/integrations?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/integrations?page=1",
                  "prev": null
                },
                "integrations": [
                  {
                    "token": "accss_crdntl_ac985d1d8bb8bc12",
                    "provider": "gcp",
                    "account_identifier": "project_id-3fc92ac0",
                    "status": "connected",
                    "workspace_tokens": [
                      "wrkspc_838cb4508ead3f6d"
                    ],
                    "created_at": "2024-07-29T21:41:49Z"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Integrations"
        ],
        "operationId": "getIntegrations"
      }
    },
    "/integrations/{integration_token}": {
      "delete": {
        "description": "Delete an Integration.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "integration_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Integration"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Integrations"
        ],
        "operationId": "deleteIntegration"
      },
      "put": {
        "description": "Update an Integration.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "integration_token",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "workspace_tokens",
            "description": "The Workspace tokens to associate to the Integration.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Integration"
            },
            "examples": {
              "application/json": {
                "token": "accss_crdntl_4de527c50afa4fd3",
                "provider": "gcp",
                "account_identifier": "project_id-e38a8e02",
                "status": "connected",
                "workspace_tokens": [
                  "wrkspc_6bffe31969c9f385"
                ],
                "created_at": "2024-07-29T21:41:44Z"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Integrations"
        ],
        "operationId": "updateIntegration"
      },
      "get": {
        "description": "Return an Integration.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "integration_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Integration"
            },
            "examples": {
              "application/json": {
                "token": "accss_crdntl_f45057cd18834fc7",
                "provider": "gcp",
                "account_identifier": "project_id-4d4c6f0b",
                "status": "connected",
                "workspace_tokens": [
                  "wrkspc_d69f96653fb985d6"
                ],
                "created_at": "2024-07-29T21:41:49Z"
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Integrations"
        ],
        "operationId": "getIntegration"
      }
    },
    "/integrations/{integration_token}/costs": {
      "get": {
        "description": "List UserCostUploads.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "integration_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserCostsUploads"
            },
            "examples": {
              "application/json": {
                "user_costs_uploads": [
                  {
                    "token": "usr_csts_upld_1805b925d993c7f7",
                    "filename": "costs_0.csv",
                    "amount": "1234.56",
                    "start_date": "2021-01-01",
                    "end_date": "2021-03-31",
                    "import_status": "complete",
                    "created_by_token": "usr_72af6fb04ab65f3a",
                    "created_at": "2024-08-27T22:44:31.565Z"
                  },
                  {
                    "token": "usr_csts_upld_c3f4d5fbb23f96ce",
                    "filename": "costs_1.csv",
                    "amount": "789.01",
                    "start_date": "2021-04-01",
                    "end_date": "2021-06-30",
                    "import_status": "processing",
                    "created_by_token": "usr_b06d7ed79c48f02e",
                    "created_at": "2024-08-27T22:44:31.582Z"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Integrations"
        ],
        "operationId": "getUserCostsUploads"
      }
    },
    "/integrations/{integration_token}/costs/{user_costs_upload_token}": {
      "delete": {
        "description": "Delete a UserCostsUpload.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "integration_token",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "user_costs_upload_token",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Cost"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Integrations",
          "UserCostsUpload"
        ],
        "operationId": "deleteUserCostsUpload"
      }
    },
    "/integrations/{integration_token}/costs.csv": {
      "post": {
        "description": "Create UserCostsUpload via CSV for a Custom Provider Integration.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "csv",
            "description": "CSV file containing custom costs",
            "type": "file",
            "required": true
          },
          {
            "in": "path",
            "name": "integration_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserCostsUpload"
            },
            "examples": {
              "application/json": {
                "token": "usr_csts_upld_68f53287682faaf8",
                "filename": "costs.csv20240827-15484-pfxe9o",
                "amount": "1000.0",
                "start_date": "2021-01-01",
                "end_date": "2021-02-01",
                "import_status": "processing",
                "created_by_token": "usr_9ad0e852b8c67db5",
                "created_at": "2024-08-27T22:44:29.220Z"
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Integrations",
          "UserCostsUpload"
        ],
        "operationId": "createUserCostsUploadViaCsv"
      }
    },
    "/recommendations": {
      "get": {
        "description": "Return all Recommendations.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "workspace_token",
            "description": "Filter by workspace.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "provider_account_id",
            "description": "Filter by provider account id (AWS account, Azure subscription id, etc).",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "category",
            "description": "Filter by category.",
            "type": "string",
            "enum": [
              "ebs_gp2_to_gp3",
              "ebs_unattached_volume",
              "elasticache_reserved_instances",
              "elastic_search_reserved_instances",
              "rds_reserved_instances",
              "redshift_reserved_instances",
              "ec2_generational_upgrades",
              "rds_generational_upgrades",
              "es_generational_upgrades",
              "cw_log_retention_policy",
              "workspace_unused",
              "workspace_stranded",
              "cloudfront_cloudflare",
              "s3_cloudflare",
              "ip_unattached",
              "s3_bucket_intelligent_tiering",
              "savings_plan",
              "unused_financial_commitments",
              "datadog_financial_commitments",
              "az_compute_reserved_instances",
              "az_compute_reserved_instances_cosmos",
              "az_compute_reserved_instances_sql",
              "az_compute_reserved_instances_app_service",
              "az_disks_unattached",
              "aws_ip_unattached_recommender",
              "aws_stranded_workspace_recommender",
              "aws_unattached_volume_recommender",
              "aws_unused_workspace_recommender",
              "dynamodb_reserved_capacity_recommender",
              "ec2_rightsizing_recommender",
              "kubernetes_recommender",
              "gcp_compute_rightsizing_recommender",
              "gcp_compute_commitment_recommender",
              "ec2_snapshot_recommender",
              "ebs_compute_optimizer_recommender",
              "lambda_compute_optimizer_recommender",
              "ecs_compute_optimizer_recommender",
              "rds_compute_optimizer_recommender",
              "azure_rightsizing_recommender",
              "azure_compute_savings_recommender",
              "azure_blob_storage_reserved_instances_recommender",
              "azure_sql_paas_db_reserved_instances_recommender",
              "azure_files_reserved_instances_recommender"
            ],
            "required": false
          },
          {
            "in": "query",
            "name": "provider",
            "description": "Filter by provider.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The number of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Recommendations"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/recommendations",
                  "first": "https://api.vantage.com/v2/recommendations?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/recommendations?page=1",
                  "prev": null
                },
                "recommendations": [
                  {
                    "token": "rcmmndtn_8f62a61ced7a5742",
                    "category": "ip_unattached",
                    "workspace_token": "wrkspc_2bab2a7936e9b90d",
                    "provider": "aws",
                    "provider_account_id": "123456789012",
                    "description": "IP address is not attached to an instance.",
                    "potential_savings": "100.0",
                    "service": "AWS IP",
                    "created_at": "2024-05-06T20:26:34Z",
                    "resources_affected_count": 0
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Recommendations"
        ],
        "operationId": "getRecommendations"
      }
    },
    "/recommendations/{recommendation_token}": {
      "get": {
        "description": "Return a Recommendation.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "recommendation_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Recommendation"
            },
            "examples": {
              "application/json": {
                "token": "rcmmndtn_8d1de80da52bebe3",
                "category": "ip_unattached",
                "workspace_token": "wrkspc_326b4663fe20770c",
                "provider": "aws",
                "provider_account_id": "123456789012",
                "description": "IP address is not attached to an instance.",
                "potential_savings": "100.0",
                "service": "AWS IP",
                "created_at": "2024-05-06T20:26:34Z",
                "resources_affected_count": 0
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Recommendations"
        ],
        "operationId": "getRecommendation"
      }
    },
    "/recommendations/{recommendation_token}/resources": {
      "get": {
        "description": "Return all Active Resources, including Recommendation Actions, referenced in this Recommendation.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "recommendation_token",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The number of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProviderResource"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/recommendations/rcmmndtn_e08af6956416a359/resources",
                  "first": "https://api.vantage.com/v2/recommendations/rcmmndtn_e08af6956416a359/resources?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/recommendations/rcmmndtn_e08af6956416a359/resources?page=1",
                  "prev": null
                },
                "resources": [
                  {
                    "token": "prvdr_rsrc_01352c715023e445",
                    "resource_id": "i-12345",
                    "recommendation_actions": [
                      {
                        "action": "modify",
                        "description": "Migrate to c5a.xlarge. Reasons: CPU over-provisioned, EBS IOPS over-provisioned, EBS throughput over-provisioned, Network bandwidth over-provisioned, and Network PPS over-provisioned.",
                        "potential_savings": 100.0,
                        "instance_type": "c5a.xlarge"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Recommendations"
        ],
        "operationId": "getRecommendationResources"
      }
    },
    "/recommendations/{recommendation_token}/resources/{resource_token}": {
      "get": {
        "description": "Return an Active Resource, including Recommendation Actions, referenced in this Recommendation.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "recommendation_token",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "resource_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProviderResource"
            },
            "examples": {
              "application/json": {
                "token": "prvdr_rsrc_018edad7219e02b4",
                "resource_id": "i-12345",
                "recommendation_actions": [
                  {
                    "action": "modify",
                    "description": "Migrate to c5a.xlarge. Reasons: CPU over-provisioned, EBS IOPS over-provisioned, EBS throughput over-provisioned, Network bandwidth over-provisioned, and Network PPS over-provisioned.",
                    "potential_savings": 100.0,
                    "instance_type": "c5a.xlarge"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Recommendations"
        ],
        "operationId": "getRecommendationResource"
      }
    },
    "/managed_accounts": {
      "post": {
        "description": "Create a Managed Account.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createManagedAccount",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createManagedAccount"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ManagedAccount"
            },
            "examples": {
              "application/json": {
                "token": "acct_ace620fc3d602740",
                "name": "New Managed Account",
                "contact_email": "admin@acme.com",
                "parent_account_token": "acct_e6baa6dcf81b4e20",
                "access_credential_tokens": [
                  "accss_crdntl_72a8c8ab1d6c9d2c"
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "ManagedAccounts"
        ],
        "operationId": "createManagedAccount"
      },
      "get": {
        "description": "Returns a list of managed accounts.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ManagedAccounts"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/managed_accounts",
                  "first": "https://api.vantage.com/v2/managed_accounts?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/managed_accounts?page=1",
                  "prev": null
                },
                "managed_accounts": [
                  {
                    "token": "acct_be30cfd09cf0b3c5",
                    "name": "Rep. Gavin Berge",
                    "contact_email": "gavin_berge_rep@orn.net",
                    "parent_account_token": "acct_f95654a3aefab4b7",
                    "access_credential_tokens": []
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "ManagedAccounts"
        ],
        "operationId": "getManagedAccounts"
      }
    },
    "/managed_accounts/{managed_account_token}": {
      "delete": {
        "description": "Delete a Managed Account.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "managed_account_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ManagedAccount"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "ManagedAccounts"
        ],
        "operationId": "deleteManagedAccount"
      },
      "put": {
        "description": "Update a Managed Account.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "managed_account_token",
            "type": "string",
            "required": true
          },
          {
            "name": "updateManagedAccount",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateManagedAccount"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ManagedAccount"
            },
            "examples": {
              "application/json": {
                "token": "acct_dd2fdf6564b60319",
                "name": "New Name",
                "contact_email": "newguy@acme.com",
                "parent_account_token": "acct_bb022aecd1125ada",
                "access_credential_tokens": [
                  "accss_crdntl_686904ffd39a4618"
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "ManagedAccounts"
        ],
        "operationId": "updateManagedAccount"
      },
      "get": {
        "description": "Return a Managed Account.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "managed_account_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ManagedAccount"
            },
            "examples": {
              "application/json": {
                "token": "acct_d3f99e1941a01861",
                "name": "Tamisha Mohr",
                "contact_email": "mohr_tamisha@vandervort.io",
                "parent_account_token": "acct_aaa060a863c2012b",
                "access_credential_tokens": []
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "ManagedAccounts"
        ],
        "operationId": "getManagedAccount"
      }
    },
    "/billing_rules": {
      "post": {
        "description": "Create a Billing Rule.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createBillingRule",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createBillingRule"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BillingRule"
            },
            "examples": {
              "application/json": {
                "token": "bllng_rule_9cc9eab6bb73266b",
                "title": "Credit for Data Transfer",
                "type": "Credit",
                "created_by_token": "usr_ae0b14f6c9108edc",
                "created_at": "2024-07-02T15:26:52Z",
                "service": "Amazon S3",
                "category": "Data Transfer",
                "sub_category": "Outbound",
                "start_period": "2024-05-01",
                "amount": "300.0"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "BillingRules"
        ],
        "operationId": "createBillingRule"
      },
      "get": {
        "description": "Returns a list of billing rules.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BillingRules"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/billing_rules",
                  "first": "https://api.vantage.com/v2/billing_rules?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/billing_rules?page=1",
                  "prev": null
                },
                "billing_rules": [
                  {
                    "token": "bllng_rule_ac6852c686e265a1",
                    "title": "Exclude Reserved Instance Fees",
                    "type": "Exclusion",
                    "created_by_token": "usr_018532419bd2e1da",
                    "created_at": "2024-07-02T15:26:51Z",
                    "charge_type": "Reserved Instance Fees"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "BillingRules"
        ],
        "operationId": "getBillingRules"
      }
    },
    "/billing_rules/{billing_rule_token}": {
      "delete": {
        "description": "Delete a Billing Rule.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "billing_rule_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BillingRule"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "BillingRules"
        ],
        "operationId": "deleteBillingRule"
      },
      "put": {
        "description": "Update a Billing Rule.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "billing_rule_token",
            "type": "string",
            "required": true
          },
          {
            "name": "updateBillingRule",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateBillingRule"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BillingRule"
            },
            "examples": {
              "application/json": {
                "token": "bllng_rule_16c2d217f026d23e",
                "title": "Updated Adjustment",
                "type": "Adjustment",
                "created_by_token": "usr_cef510966067477f",
                "created_at": "2024-07-02T15:26:52Z",
                "service": "Amazon S3",
                "category": "Data Transfer",
                "adjusted_rate": "0.85"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "BillingRules"
        ],
        "operationId": "updateBillingRule"
      },
      "get": {
        "description": "Return a Billing Rule.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "billing_rule_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BillingRule"
            },
            "examples": {
              "application/json": {
                "token": "bllng_rule_a2708f17b2d3fb0e",
                "title": "Exclude Reserved Instance Fees",
                "type": "Exclusion",
                "created_by_token": "usr_d253a52c80171514",
                "created_at": "2024-07-02T15:26:50Z",
                "charge_type": "Reserved Instance Fees"
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "BillingRules"
        ],
        "operationId": "getBillingRule"
      }
    },
    "/ping": {
      "get": {
        "description": "This is a health check endpoint that can be used to determine Vantage API healthiness. It will return 200 if everything is running smoothly.",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "This is a health check endpoint that can be used to determine Vantage API healthiness. It will return 200 if everything is running smoothly."
          }
        },
        "tags": [
          "Ping"
        ],
        "operationId": "ping"
      }
    }
  },
  "definitions": {
    "Workspace": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "example": "Acme Corp.",
          "description": "The name of the Workspace."
        },
        "created_at": {
          "type": "string",
          "example": "2023-08-04T00:00:00Z",
          "description": "The date and time, in UTC, the Workspace was created. ISO 8601 Formatted."
        },
        "enable_currency_conversion": {
          "type": "boolean",
          "description": "Whether or not currency conversion is enabled for the Workspace."
        },
        "currency": {
          "type": "string",
          "example": "USD",
          "description": "The currency code for the Workspace that will be used for currency conversion."
        },
        "exchange_rate_date": {
          "type": "string",
          "description": "The exchange rate date that will be used to convert currency for your cost data."
        }
      },
      "description": "Workspace model"
    },
    "Errors": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Errors model"
    },
    "Workspaces": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "workspaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Workspace"
          }
        }
      },
      "description": "Workspaces model"
    },
    "createFolder": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the Folder."
        },
        "parent_folder_token": {
          "type": "string",
          "description": "The token of the parent Folder."
        },
        "saved_filter_tokens": {
          "type": "array",
          "description": "The tokens of the SavedFilters to apply to any Cost Report contained within the Folder.",
          "items": {
            "type": "string"
          }
        },
        "workspace_token": {
          "type": "string",
          "description": "The token of the Workspace to add the Folder to. Ignored if 'parent_folder_token' is set. Required if the API token is associated with multiple Workspaces."
        }
      },
      "required": [
        "title"
      ],
      "description": "Create a Folder for CostReports."
    },
    "Folder": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "title": {
          "type": "string",
          "example": "Platform Team Reports",
          "description": "The title of the Folder."
        },
        "parent_folder_token": {
          "type": "string",
          "description": "The token for the parent Folder, if any."
        },
        "saved_filter_tokens": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The tokens for the SavedFilters assigned to the Folder."
        },
        "created_at": {
          "type": "string",
          "example": "2023-08-04T00:00:00Z",
          "description": "The date and time, in UTC, the Folder was created. ISO 8601 Formatted."
        },
        "updated_at": {
          "type": "string",
          "example": "2023-08-04T00:00:00Z",
          "description": "The date and time, in UTC, the Folder was last updated at. ISO 8601 Formatted."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token for the Workspace the Folder is a part of."
        }
      },
      "description": "Folder model"
    },
    "Folders": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "folders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Folder"
          }
        }
      },
      "description": "Folders model"
    },
    "updateFolder": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the Folder."
        },
        "parent_folder_token": {
          "type": "string",
          "description": "The token of the parent Folder."
        },
        "saved_filter_tokens": {
          "type": "array",
          "description": "The tokens of the SavedFilters to apply to any Cost Report contained within the Folder.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Update a Folder for CostReports."
    },
    "createSavedFilter": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the SavedFilter."
        },
        "workspace_token": {
          "type": "string",
          "description": "The Workspace to associate the SavedFilter with. Required if the API token is associated with multiple Workspaces."
        },
        "filter": {
          "type": "string",
          "description": "The filter query language to apply to the SavedFilter, which subsequently gets applied to a CostReport. Additional documentation available at https://docs.vantage.sh/vql."
        }
      },
      "required": [
        "title"
      ],
      "description": "Create a SavedFilter for CostReports."
    },
    "SavedFilter": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "title": {
          "type": "string",
          "example": "Platform Team Reports",
          "description": "The title of the SavedFilter."
        },
        "cost_report_tokens": {
          "type": "array",
          "items": {
            "type": "string",
            "example": [
              "rprt_abcd1234",
              "rprt_efgh5678"
            ]
          },
          "description": "The tokens for any CostReports the SavedFilter is applied to."
        },
        "filter": {
          "type": "string",
          "example": "costs.provider = 'azure'",
          "description": "The SavedFilter's filter, applied to any relevant CostReports. Additional documentation available at https://docs.vantage.sh/vql."
        },
        "created_at": {
          "type": "string",
          "example": "2023-08-04T00:00:00Z",
          "description": "The date and time, in UTC, the report was created. ISO 8601 Formatted."
        },
        "created_by": {
          "type": "string",
          "description": "The token for the Creator of this SavedFilter."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token for the Workspace the SavedFilter is a part of."
        }
      },
      "description": "SavedFilter model"
    },
    "SavedFilters": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "saved_filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SavedFilter"
          }
        }
      },
      "description": "SavedFilters model"
    },
    "updateSavedFilter": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the SavedFilter."
        },
        "filter": {
          "type": "string",
          "description": "The filter query language to apply to the SavedFilter, which subsequently gets applied to a CostReport. Additional documentation available at https://docs.vantage.sh/vql."
        }
      },
      "description": "Update a SavedFilter for CostReports."
    },
    "createCostReport": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the CostReport."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token of the Workspace to add the Cost Report to. Ignored if 'folder_token' is set. Required if the API token is associated with multiple Workspaces."
        },
        "groupings": {
          "type": "string",
          "description": "Grouping values for aggregating costs on the report. Valid groupings: account_id, billing_account_id, charge_type, cost_category, cost_subcategory, provider, region, resource_id, service, tagged, tag:<tag_value>. If providing multiple groupings, join as comma separated values: groupings=provider,service,region"
        },
        "filter": {
          "type": "string",
          "description": "The filter query language to apply to the CostReport. Additional documentation available at https://docs.vantage.sh/vql."
        },
        "saved_filter_tokens": {
          "type": "array",
          "description": "The tokens of the SavedFilters to apply to the CostReport.",
          "items": {
            "type": "string"
          }
        },
        "business_metric_tokens_with_metadata": {
          "type": "array",
          "description": "The tokens for any BusinessMetrics to attach to the CostReport, and the unit scale.",
          "items": {
            "type": "object",
            "properties": {
              "business_metric_token": {
                "type": "string",
                "description": "The token of the BusinessMetric to attach to the CostReport."
              },
              "unit_scale": {
                "type": "string",
                "description": "Determines the scale of the BusinessMetric's values within the CostReport.",
                "enum": [
                  "per_unit",
                  "per_hundred",
                  "per_thousand",
                  "per_million",
                  "per_billion"
                ],
                "default": "per_unit"
              },
              "label_filter": {
                "type": "array",
                "description": "Include only values with these labels in the CostReport.",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "business_metric_token"
            ]
          }
        },
        "folder_token": {
          "type": "string",
          "description": "The token of the Folder to add the CostReport to. Determines the Workspace the report is assigned to."
        },
        "settings": {
          "type": "object",
          "description": "Report settings.",
          "properties": {
            "include_credits": {
              "type": "boolean",
              "description": "Report will include credits.",
              "default": false
            },
            "include_refunds": {
              "type": "boolean",
              "description": "Report will include refunds.",
              "default": false
            },
            "include_discounts": {
              "type": "boolean",
              "description": "Report will include discounts.",
              "default": true
            },
            "include_tax": {
              "type": "boolean",
              "description": "Report will include tax.",
              "default": true
            },
            "amortize": {
              "type": "boolean",
              "description": "Report will amortize.",
              "default": true
            },
            "unallocated": {
              "type": "boolean",
              "description": "Report will show unallocated costs.",
              "default": false
            },
            "aggregate_by": {
              "type": "string",
              "description": "Report will aggregate by.",
              "default": "cost"
            }
          }
        },
        "previous_period_start_date": {
          "type": "string",
          "description": "The previous period start date of the CostReport. ISO 8601 Formatted."
        },
        "previous_period_end_date": {
          "type": "string",
          "description": "The previous period end date of the CostReport. ISO 8601 Formatted."
        },
        "start_date": {
          "type": "string",
          "description": "The start date of the CostReport. ISO 8601 Formatted. Incompatible with 'date_interval' parameter."
        },
        "end_date": {
          "type": "string",
          "description": "The end date of the CostReport. ISO 8601 Formatted. Incompatible with 'date_interval' parameter."
        },
        "date_interval": {
          "type": "string",
          "description": "The date interval of the CostReport. Incompatible with 'start_date' and 'end_date' parameters. Defaults to 'this_month' if start_date and end_date are not provided.",
          "enum": [
            "this_month",
            "last_7_days",
            "last_30_days",
            "last_month",
            "last_3_months",
            "last_6_months",
            "custom",
            "last_12_months",
            "last_24_months",
            "last_36_months",
            "next_month",
            "next_3_months",
            "next_6_months",
            "next_12_months",
            "year_to_date"
          ]
        },
        "chart_type": {
          "type": "string",
          "description": "The chart type of the CostReport.",
          "enum": [
            "area",
            "line",
            "pie",
            "bar"
          ],
          "default": "line"
        },
        "date_bin": {
          "type": "string",
          "description": "The date bin of the CostReport.",
          "enum": [
            "cumulative",
            "day",
            "week",
            "month"
          ],
          "default": "cumulative"
        }
      },
      "required": [
        "title",
        "previous_period_end_date",
        "end_date"
      ],
      "description": "Create a CostReport."
    },
    "CostReport": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "title": {
          "type": "string",
          "example": "Production Environment",
          "description": "The title of the CostReport."
        },
        "folder_token": {
          "type": "string",
          "description": "The token for the Folder the CostReport is a part of."
        },
        "saved_filter_tokens": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The tokens for the SavedFilters assigned to the CostReport."
        },
        "business_metric_tokens_with_metadata": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttachedBusinessMetricForCostReport"
          },
          "description": "The tokens for the BusinessMetrics assigned to the CostReport, the unit scale, and label filter."
        },
        "filter": {
          "type": "string",
          "description": "The filter applied to the CostReport. Additional documentation available at https://docs.vantage.sh/vql."
        },
        "groupings": {
          "type": "string",
          "example": "provider, service",
          "description": "The grouping aggregations applied to the filtered data."
        },
        "settings": {
          "type": "object",
          "properties": {
            "include_credits": {
              "type": "boolean",
              "default": false,
              "description": "Report will include credits."
            },
            "include_refunds": {
              "type": "boolean",
              "default": false,
              "description": "Report will include refunds."
            },
            "include_discounts": {
              "type": "boolean",
              "default": true,
              "description": "Report will include discounts."
            },
            "include_tax": {
              "type": "boolean",
              "default": true,
              "description": "Report will include tax."
            },
            "amortize": {
              "type": "boolean",
              "default": true,
              "description": "Report will amortize."
            },
            "unallocated": {
              "type": "boolean",
              "default": false,
              "description": "Report will show unallocated costs."
            },
            "aggregate_by": {
              "type": "string",
              "default": "cost",
              "description": "Report will aggregate by."
            }
          },
          "description": "Report settings."
        },
        "created_at": {
          "type": "string",
          "example": "2021-07-09T00:00:00Z",
          "description": "The date and time, in UTC, the report was created. ISO 8601 Formatted."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token for the Workspace the CostReport is a part of."
        },
        "previous_period_start_date": {
          "type": "string",
          "example": "2024-06-01",
          "description": "The previous period start date of the CostReport. ISO 8601 Formatted."
        },
        "previous_period_end_date": {
          "type": "string",
          "example": "2024-06-15",
          "description": "The previous period end date of the CostReport. ISO 8601 Formatted."
        },
        "start_date": {
          "type": "string",
          "example": "2024-07-01",
          "description": "The start date of the CostReports. ISO 8601 Formatted. Overwrites 'date_interval' if set."
        },
        "end_date": {
          "type": "string",
          "example": "2024-07-15",
          "description": "The end date of the CostReports. ISO 8601 Formatted. Overwrites 'date_interval' if set."
        },
        "date_interval": {
          "type": "string",
          "description": "The date interval of the CostReport."
        },
        "chart_type": {
          "type": "string",
          "description": "The chart type of the CostReport."
        },
        "date_bin": {
          "type": "string",
          "description": "The date bin of the CostReport."
        }
      },
      "description": "CostReport model"
    },
    "AttachedBusinessMetricForCostReport": {
      "type": "object",
      "properties": {
        "business_metric_token": {
          "type": "string",
          "example": "bsnss_mtrc_1234",
          "description": "The token of the BusinessMetric that's attached to the CostReport."
        },
        "unit_scale": {
          "type": "string",
          "example": "per_hundred",
          "enum": [
            "per_unit",
            "per_hundred",
            "per_thousand",
            "per_million",
            "per_billion"
          ],
          "description": "Determines the scale of the BusinessMetric's values within a particular CostReport."
        },
        "label_filter": {
          "type": "array",
          "items": {
            "type": "string",
            "example": [
              "label_1",
              "label_2"
            ]
          },
          "x-omitempty": true,
          "description": "The labels that the BusinessMetric is filtered by within a particular CostReport."
        }
      }
    },
    "CostReports": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "cost_reports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CostReport"
          }
        }
      },
      "description": "CostReports model"
    },
    "updateCostReport": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the CostReport."
        },
        "groupings": {
          "type": "string",
          "description": "Grouping values for aggregating costs on the report. Valid groupings: account_id, billing_account_id, charge_type, cost_category, cost_subcategory, provider, region, resource_id, service, tagged, tag:<tag_value>. If providing multiple groupings, join as comma separated values: groupings=provider,service,region"
        },
        "filter": {
          "type": "string",
          "description": "The filter query language to apply to the CostReport. Additional documentation available at https://docs.vantage.sh/vql."
        },
        "saved_filter_tokens": {
          "type": "array",
          "description": "The tokens of the SavedFilters to apply to the CostReport.",
          "items": {
            "type": "string"
          }
        },
        "business_metric_tokens_with_metadata": {
          "type": "array",
          "description": "The tokens for any BusinessMetrics to attach to the CostReport, and the unit scale.",
          "items": {
            "type": "object",
            "properties": {
              "business_metric_token": {
                "type": "string",
                "description": "The token of the BusinessMetric to attach to the CostReport."
              },
              "unit_scale": {
                "type": "string",
                "description": "Determines the scale of the BusinessMetric's values within the CostReport.",
                "enum": [
                  "per_unit",
                  "per_hundred",
                  "per_thousand",
                  "per_million",
                  "per_billion"
                ],
                "default": "per_unit"
              },
              "label_filter": {
                "type": "array",
                "description": "Include only values with these labels in the CostReport.",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "business_metric_token"
            ]
          }
        },
        "folder_token": {
          "type": "string",
          "description": "The token of the Folder to add the CostReport to. Determines the Workspace the report is assigned to."
        },
        "settings": {
          "type": "object",
          "description": "Report settings.",
          "properties": {
            "include_credits": {
              "type": "boolean",
              "description": "Report will include credits."
            },
            "include_refunds": {
              "type": "boolean",
              "description": "Report will include refunds."
            },
            "include_discounts": {
              "type": "boolean",
              "description": "Report will include discounts."
            },
            "include_tax": {
              "type": "boolean",
              "description": "Report will include tax."
            },
            "amortize": {
              "type": "boolean",
              "description": "Report will amortize."
            },
            "unallocated": {
              "type": "boolean",
              "description": "Report will show unallocated costs."
            },
            "aggregate_by": {
              "type": "string",
              "description": "Report will aggregate by."
            }
          }
        },
        "previous_period_start_date": {
          "type": "string",
          "description": "The previous period start date of the CostReport. ISO 8601 Formatted."
        },
        "previous_period_end_date": {
          "type": "string",
          "description": "The previous period end date of the CostReport. ISO 8601 Formatted."
        },
        "start_date": {
          "type": "string",
          "description": "The start date of the CostReport. ISO 8601 Formatted. Incompatible with 'date_interval' parameter."
        },
        "end_date": {
          "type": "string",
          "description": "The end date of the CostReport. ISO 8601 Formatted. Incompatible with 'date_interval' parameter."
        },
        "date_interval": {
          "type": "string",
          "description": "The date interval of the CostReport. Incompatible with 'start_date' and 'end_date' parameters. Defaults to 'this_month' if start_date and end_date are not provided.",
          "enum": [
            "this_month",
            "last_7_days",
            "last_30_days",
            "last_month",
            "last_3_months",
            "last_6_months",
            "custom",
            "last_12_months",
            "last_24_months",
            "last_36_months",
            "next_month",
            "next_3_months",
            "next_6_months",
            "next_12_months",
            "year_to_date"
          ]
        },
        "chart_type": {
          "type": "string",
          "description": "The chart type of the CostReport.",
          "enum": [
            "area",
            "line",
            "pie",
            "bar"
          ],
          "default": "line"
        },
        "date_bin": {
          "type": "string",
          "description": "The date bin of the CostReport.",
          "enum": [
            "cumulative",
            "day",
            "week",
            "month"
          ],
          "default": "cumulative"
        }
      },
      "description": "Update a CostReport."
    },
    "createSegment": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the Segment."
        },
        "description": {
          "type": "string",
          "description": "The description of the Segment."
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the Segment."
        },
        "track_unallocated": {
          "type": "boolean",
          "description": "Track Unallocated Costs which are not assigned to any of the created Segments.",
          "default": false
        },
        "report_settings": {
          "type": "object",
          "description": "Report settings configurable on top-level Segments.",
          "properties": {
            "include_credits": {
              "type": "boolean",
              "description": "Reports created under this Segment will include credits."
            },
            "include_refunds": {
              "type": "boolean",
              "description": "Reports created under this Segment will include refunds."
            },
            "include_discounts": {
              "type": "boolean",
              "description": "Reports created under this Segment will include discounts."
            },
            "include_tax": {
              "type": "boolean",
              "description": "Reports created under this Segment will include tax."
            },
            "amortize": {
              "type": "boolean",
              "description": "Reports created under this Segment will amortize."
            }
          }
        },
        "workspace_token": {
          "type": "string",
          "description": "The token of the Workspace to add the Segment to. Ignored if 'segment_token' is set. Required if the API token is associated with multiple Workspaces."
        },
        "filter": {
          "type": "string",
          "description": "The filter query language to apply to the Segment. Additional documentation available at https://docs.vantage.sh/vql."
        },
        "parent_segment_token": {
          "type": "string",
          "description": "The token of the parent Segment this new Segment belongs to. Determines the Workspace the segment is assigned to."
        }
      },
      "required": [
        "title"
      ],
      "description": "Create a Segment."
    },
    "Segment": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "title": {
          "type": "string",
          "example": "OPEX",
          "description": "The title of the Segment."
        },
        "parent_segment_token": {
          "type": "string",
          "description": "The token of the parent Segment of this Segment."
        },
        "description": {
          "type": "string",
          "example": "Operating expenses",
          "description": "The description of the Segment."
        },
        "track_unallocated": {
          "type": "boolean",
          "example": false,
          "description": "Track Unallocated Costs which are not assigned to any of the created Segments."
        },
        "report_settings": {
          "type": "object",
          "properties": {
            "include_credits": {
              "type": "boolean"
            },
            "include_refunds": {
              "type": "boolean"
            },
            "include_discounts": {
              "type": "boolean"
            },
            "include_tax": {
              "type": "boolean"
            },
            "amortize": {
              "type": "boolean"
            }
          },
          "description": "Report settings configurable on top-level Segments."
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "example": 100,
          "description": "Costs are assigned in priority order across all Segments with assigned filters."
        },
        "filter": {
          "type": "string",
          "description": "The filter applied to the Segment. Additional documentation available at https://docs.vantage.sh/vql."
        },
        "created_at": {
          "type": "string",
          "example": "2021-07-09T00:00:00Z",
          "description": "The date and time, in UTC, the Segment was created. ISO 8601 Formatted."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token for the Workspace the Segment is a part of."
        },
        "report_token": {
          "type": "string",
          "description": "The token for the Report the Segment has generated."
        }
      },
      "description": "Segment model"
    },
    "Segments": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "segments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Segment"
          }
        }
      },
      "description": "Segments model"
    },
    "updateSegment": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the Segment."
        },
        "description": {
          "type": "string",
          "description": "The description of the Segment."
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the Segment."
        },
        "track_unallocated": {
          "type": "boolean",
          "description": "Track Unallocated Costs which are not assigned to any of the created Segments.",
          "default": false
        },
        "report_settings": {
          "type": "object",
          "description": "Report settings configurable on top-level Segments.",
          "properties": {
            "include_credits": {
              "type": "boolean",
              "description": "Reports created under this Segment will include credits."
            },
            "include_refunds": {
              "type": "boolean",
              "description": "Reports created under this Segment will include refunds."
            },
            "include_discounts": {
              "type": "boolean",
              "description": "Reports created under this Segment will include discounts."
            },
            "include_tax": {
              "type": "boolean",
              "description": "Reports created under this Segment will include tax."
            },
            "amortize": {
              "type": "boolean",
              "description": "Reports created under this Segment will amortize."
            }
          }
        },
        "filter": {
          "type": "string",
          "description": "The filter query language to apply to the Segment. Additional documentation available at https://docs.vantage.sh/vql."
        },
        "parent_segment_token": {
          "type": "string",
          "description": "The token of the parent Segment this new Segment belongs to. Determines the Workspace the segment is assigned to."
        }
      },
      "description": "Update a Segment."
    },
    "createDashboard": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the Dashboard."
        },
        "widgets": {
          "type": "array",
          "description": "The widgets to add to the Dashboard. Currently supports CostReport, ResourceReport, KubernetesEfficiencyReport, and FinancialCommitmentReport.",
          "items": {
            "type": "object",
            "properties": {
              "widgetable_token": {
                "type": "string",
                "description": "The token of the represented Resource."
              },
              "title": {
                "type": "string",
                "description": "The title of the Widget (defaults to the title of the Resource)."
              },
              "settings": {
                "type": "object",
                "description": "The settings for the DashboardWidget.",
                "properties": {
                  "display_type": {
                    "type": "string",
                    "enum": [
                      "table",
                      "chart"
                    ]
                  }
                },
                "required": [
                  "display_type"
                ]
              }
            },
            "required": [
              "widgetable_token"
            ]
          }
        },
        "saved_filter_tokens": {
          "type": "array",
          "description": "The tokens of the Saved Filters used in the Dashboard.",
          "items": {
            "type": "string"
          }
        },
        "date_bin": {
          "type": "string",
          "description": "Determines how to group costs in the Dashboard.",
          "enum": [
            "cumulative",
            "day",
            "week",
            "month"
          ]
        },
        "date_interval": {
          "type": "string",
          "description": "Determines the date range in the Dashboard. Incompatible with 'start_date' and 'end_date' parameters.",
          "enum": [
            "this_month",
            "last_7_days",
            "last_30_days",
            "last_month",
            "last_3_months",
            "last_6_months",
            "custom",
            "last_12_months",
            "last_24_months",
            "last_36_months",
            "next_month",
            "next_3_months",
            "next_6_months",
            "next_12_months",
            "year_to_date"
          ]
        },
        "start_date": {
          "type": "string",
          "description": "The start date for the date range for costs in the Dashboard. ISO 8601 Formatted. Incompatible with 'date_interval' parameter."
        },
        "end_date": {
          "type": "string",
          "description": "The end date for the date range for costs in the Dashboard. ISO 8601 Formatted. Incompatible with 'date_interval' parameter."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token of the Workspace to add the Dashboard to. Required if the API token is associated with multiple Workspaces."
        }
      },
      "required": [
        "title",
        "end_date"
      ],
      "description": "Create a Dashboard."
    },
    "Dashboard": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "example": "dshbrd_abcd1234567890"
        },
        "title": {
          "type": "string",
          "example": "AWS Dashboard",
          "description": "The title of the Dashboard."
        },
        "widgets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DashboardWidget"
          }
        },
        "saved_filter_tokens": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The tokens of the Saved Filters used in the Dashboard."
        },
        "date_bin": {
          "type": "string",
          "enum": [
            "cumulative",
            "day",
            "week",
            "month"
          ],
          "description": "Determines how to group costs in the Dashboard."
        },
        "date_interval": {
          "type": "string",
          "enum": [
            "this_month",
            "last_7_days",
            "last_30_days",
            "last_month",
            "last_3_months",
            "last_6_months",
            "custom",
            "last_12_months",
            "last_24_months",
            "last_36_months",
            "next_month",
            "next_3_months",
            "next_6_months",
            "next_12_months",
            "year_to_date"
          ],
          "description": "Determines the date range for Reports in the Dashboard. Guaranteed to be set to 'custom' if 'start_date' and 'end_date' are set."
        },
        "start_date": {
          "type": "string",
          "example": "2023-08-04",
          "description": "The start date for the date range for Reports in the Dashboard. ISO 8601 Formatted. Overwrites 'date_interval' if set."
        },
        "end_date": {
          "type": "string",
          "example": "2023-09-04",
          "description": "The end date for the date range for Reports in the Dashboard. ISO 8601 Formatted. Overwrites 'date_interval' if set."
        },
        "created_at": {
          "type": "string",
          "example": "2023-08-04T00:00:00Z",
          "description": "The date and time, in UTC, the Dashboard was created. ISO 8601 Formatted."
        },
        "updated_at": {
          "type": "string",
          "example": "2023-08-04T00:00:00Z",
          "description": "The date and time, in UTC, the Dashboard was created. ISO 8601 Formatted."
        },
        "workspace_token": {
          "type": "string",
          "example": "wrkspc_abcd1234567890",
          "description": "The token for the Workspace the Dashboard is a part of."
        }
      },
      "description": "Dashboard model"
    },
    "DashboardWidget": {
      "type": "object",
      "properties": {
        "widgetable_token": {
          "type": "string",
          "example": "rprt_a12b3c"
        },
        "title": {
          "type": "string",
          "example": "My Widget",
          "description": "The title of the Widget."
        },
        "settings": {
          "$ref": "#/definitions/DashboardWidgetSettings",
          "description": "The settings for the DashboardWidget"
        }
      }
    },
    "DashboardWidgetSettings": {
      "type": "object",
      "properties": {
        "display_type": {
          "type": "string",
          "enum": [
            "table",
            "chart"
          ]
        }
      }
    },
    "Dashboards": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "dashboards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Dashboard"
          }
        }
      },
      "description": "Dashboards model"
    },
    "updateDashboard": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the Dashboard."
        },
        "widgets": {
          "type": "array",
          "description": "The widgets to add to the Dashboard. Currently supports CostReport, ResourceReport, KubernetesEfficiencyReport, and FinancialCommitmentReport.",
          "items": {
            "type": "object",
            "properties": {
              "widgetable_token": {
                "type": "string",
                "description": "The token of the represented Resource."
              },
              "title": {
                "type": "string",
                "description": "The title of the Widget (defaults to the title of the Resource)."
              },
              "settings": {
                "type": "object",
                "description": "The settings for the DashboardWidget.",
                "properties": {
                  "display_type": {
                    "type": "string",
                    "enum": [
                      "table",
                      "chart"
                    ]
                  }
                },
                "required": [
                  "display_type"
                ]
              }
            },
            "required": [
              "widgetable_token"
            ]
          }
        },
        "saved_filter_tokens": {
          "type": "array",
          "description": "The tokens of the Saved Filters used in the Dashboard.",
          "items": {
            "type": "string"
          }
        },
        "date_bin": {
          "type": "string",
          "description": "Determines how to group costs in the Dashboard.",
          "enum": [
            "cumulative",
            "day",
            "week",
            "month"
          ]
        },
        "date_interval": {
          "type": "string",
          "description": "Determines the date range in the Dashboard. Incompatible with 'start_date' and 'end_date' parameters.",
          "enum": [
            "this_month",
            "last_7_days",
            "last_30_days",
            "last_month",
            "last_3_months",
            "last_6_months",
            "custom",
            "last_12_months",
            "last_24_months",
            "last_36_months",
            "next_month",
            "next_3_months",
            "next_6_months",
            "next_12_months",
            "year_to_date"
          ]
        },
        "start_date": {
          "type": "string",
          "description": "The start date for the date range for costs in the Dashboard. ISO 8601 Formatted. Incompatible with 'date_interval' parameter."
        },
        "end_date": {
          "type": "string",
          "description": "The end date for the date range for costs in the Dashboard. ISO 8601 Formatted. Incompatible with 'date_interval' parameter."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token of the Workspace the Dashboard belongs to. Required if the API token is associated with multiple Workspaces."
        }
      },
      "required": [
        "end_date"
      ],
      "description": "Update a Dashboard."
    },
    "Costs": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "total_cost": {
          "type": "string",
          "description": "The sum of all costs for the CostReport for the requested period, rounded to 2 decimal places, alongside the ISO 4217 currency code."
        },
        "costs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cost"
          }
        }
      },
      "description": "Costs model"
    },
    "Cost": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "accrued_at": {
          "type": "string",
          "example": "2023-09-05+00:00",
          "description": "The date the cost was accrued. ISO 8601 Formatted."
        },
        "amount": {
          "type": "string",
          "example": "4.25",
          "description": "The amount of the cost."
        },
        "currency": {
          "type": "string",
          "example": "USD",
          "description": "The currency of the cost."
        },
        "provider": {
          "type": "string",
          "example": "aws",
          "enum": [
            "aws",
            "azure",
            "gcp",
            "snowflake",
            "databricks",
            "mongo",
            "datadog",
            "fastly",
            "new_relic",
            "opencost",
            "open_ai",
            "oracle",
            "confluent",
            "planetscale",
            "coralogix",
            "kubernetes",
            "custom_provider",
            "github",
            "linode",
            "grafana"
          ],
          "description": "The cost provider which incurred the cost."
        },
        "billing_account_id": {
          "type": "string",
          "example": "9109237192",
          "description": "The cost provider's billing account id that incurred the cost."
        },
        "account_id": {
          "type": "string",
          "example": "9109237192",
          "description": "The cost provider's account id that incurred the cost."
        },
        "service": {
          "type": "string",
          "example": "Amazon Elastic Compute Cloud - Compute",
          "description": "The service which incurred the cost."
        },
        "region": {
          "type": "string",
          "example": "us-east-1",
          "description": "The region which incurred the cost."
        },
        "resource_id": {
          "type": "string",
          "example": "arn:aws:ec2:us-east-1:123456789012:instance/i-1234567890abcdef0",
          "description": "The resource id which incurred the cost."
        },
        "tag": {
          "type": "string",
          "example": "production",
          "description": "The tag attached to the cost that was incurred.\nDEPRECATED: does not support multiple tags."
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "example": [
              "environment:production",
              "aws:ecs:serviceName:frontend"
            ]
          },
          "description": "The tag pairs attached to the cost that was incurred."
        },
        "cost_category": {
          "type": "string",
          "example": "Data Transfer",
          "description": "The category for the cost."
        },
        "cost_subcategory": {
          "type": "string",
          "example": "DataTransfer-Regional-Bytes",
          "description": "The subcategory for the cost."
        }
      },
      "description": "Cost model"
    },
    "Resources": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        }
      },
      "description": "Resources model"
    },
    "Resource": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "uuid": {
          "type": "string",
          "example": "i-0a1b2c3d4e5f6g7h8",
          "description": "The unique identifier for the resource."
        },
        "type": {
          "type": "string",
          "example": "aws_instance",
          "description": "The kind of resource."
        },
        "label": {
          "type": "string"
        },
        "metadata": {
          "type": "string",
          "description": "Type-specific attributes of the resource."
        },
        "account_id": {
          "type": "string",
          "description": "The provider account where the resource is located."
        },
        "billing_account_id": {
          "type": "string",
          "description": "The provider billing account this resource is charged to."
        },
        "provider": {
          "type": "string",
          "example": "aws",
          "description": "The provider of the resource."
        },
        "region": {
          "type": "string",
          "example": "us-west-2",
          "description": "The region where the resource is located. Region values are specific to each provider."
        },
        "costs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceCost"
          },
          "description": "The cost of the resource broken down by category."
        },
        "created_at": {
          "type": "string",
          "description": "The date and time when Vantage first observed the resource."
        }
      },
      "description": "Resource model"
    },
    "ResourceCost": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "description": "The category of the cost."
        },
        "amount": {
          "type": "string"
        }
      }
    },
    "createResourceReport": {
      "type": "object",
      "properties": {
        "workspace_token": {
          "type": "string",
          "description": "The token of the Workspace to add the ResourceReport to."
        },
        "title": {
          "type": "string",
          "description": "The title of the ResourceReport."
        },
        "filter": {
          "type": "string",
          "description": "The filter query language to apply to the ResourceReport. Additional documentation available at https://docs.vantage.sh/vql."
        }
      },
      "required": [
        "workspace_token"
      ],
      "description": "Create a ResourceReport."
    },
    "ResourceReport": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "title": {
          "type": "string",
          "example": "Acme123 Active Resources",
          "description": "The title of the ResourceReport."
        },
        "filter": {
          "type": "string",
          "description": "The filter applied to the ResourceReport. Additional documentation available at https://docs.vantage.sh/vql."
        },
        "created_at": {
          "type": "string",
          "example": "2024-03-19T00:00:00Z",
          "description": "The date and time, in UTC, the report was created. ISO 8601 Formatted."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token for the Workspace the ResourceReport is a part of."
        },
        "user_token": {
          "type": "string",
          "description": "The token for the User who created this ResourceReport."
        },
        "created_by_token": {
          "type": "string",
          "description": "The token for the User or Team who created this ResourceReport."
        }
      },
      "description": "ResourceReport model"
    },
    "ResourceReports": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "resource_reports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceReport"
          }
        }
      },
      "description": "ResourceReports model"
    },
    "updateResourceReport": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the ResourceReport."
        },
        "filter": {
          "type": "string",
          "description": "The filter query language to apply to the ResourceReport. Additional documentation available at https://docs.vantage.sh/vql."
        }
      },
      "description": "Update a ResourceReport."
    },
    "createTeam": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the Team."
        },
        "description": {
          "type": "string",
          "description": "The description of the Team."
        },
        "workspace_tokens": {
          "type": "array",
          "description": "The Workspace tokens to associate to the Team.",
          "items": {
            "type": "string"
          }
        },
        "user_tokens": {
          "type": "array",
          "description": "The User tokens to associate to the Team.",
          "items": {
            "type": "string"
          }
        },
        "user_emails": {
          "type": "array",
          "description": "The User emails to associate to the Team.",
          "items": {
            "type": "string"
          }
        },
        "role": {
          "type": "string",
          "description": "The role to assign to the provided Users. Defaults to 'editor' which has editor permissions.",
          "enum": [
            "owner",
            "editor",
            "viewer"
          ]
        }
      },
      "required": [
        "name"
      ],
      "description": "Create a new Team."
    },
    "Team": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "example": "Cost Savers",
          "description": "The name of the Team."
        },
        "description": {
          "type": "string",
          "example": "The Team that saves costs",
          "description": "The description of the Team."
        },
        "workspace_tokens": {
          "type": "array",
          "items": {
            "type": "string",
            "example": [
              "wrkspc_abcd1234",
              "wrkspc_efgh5678"
            ]
          },
          "description": "The tokens for any Workspaces that the Team belongs to"
        },
        "user_emails": {
          "type": "array",
          "items": {
            "type": "string",
            "example": [
              "wileycoyote@acme.com",
              "roadrunner@acme.com"
            ]
          },
          "description": "The email addresses for Users that belong to the Team"
        },
        "user_tokens": {
          "type": "array",
          "items": {
            "type": "string",
            "example": [
              "usr_abcd1234",
              "usr_efgh5678"
            ]
          },
          "description": "The tokens for Users that belong to the Team"
        }
      },
      "description": "Team model"
    },
    "Teams": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Team"
          }
        }
      },
      "description": "Teams model"
    },
    "updateTeam": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the Team."
        },
        "description": {
          "type": "string",
          "description": "The description of the Team."
        },
        "workspace_tokens": {
          "type": "array",
          "description": "The Workspace tokens to associate to the Team.",
          "items": {
            "type": "string"
          }
        },
        "user_tokens": {
          "type": "array",
          "description": "The User tokens to associate to the Team.",
          "items": {
            "type": "string"
          }
        },
        "user_emails": {
          "type": "array",
          "description": "The User emails to associate to the Team.",
          "items": {
            "type": "string"
          }
        },
        "role": {
          "type": "string",
          "description": "The role to assign to the provided Users. Defaults to 'editor' which has editor permissions.",
          "enum": [
            "owner",
            "editor",
            "viewer"
          ]
        }
      },
      "description": "Update a Team."
    },
    "createAccessGrant": {
      "type": "object",
      "properties": {
        "resource_token": {
          "type": "string",
          "description": "The token of the resource for which you are granting access."
        },
        "team_token": {
          "type": "string",
          "description": "The token of the Team you want to grant access to."
        },
        "access": {
          "type": "string",
          "description": "The access level you want to grant. Defaults to 'allowed'.",
          "enum": [
            "denied",
            "allowed"
          ]
        }
      },
      "required": [
        "resource_token",
        "team_token"
      ],
      "description": "Create an Access Grant."
    },
    "AccessGrant": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "resource_token": {
          "type": "string",
          "example": "rprt_abcd1234",
          "description": "The token for any resource the AccessGrant is applied to."
        },
        "access": {
          "type": "string",
          "description": "The access status of the AccessGrant."
        },
        "team_token": {
          "type": "string",
          "description": "The Team token for which an AccessGrant is applied to."
        },
        "created_at": {
          "type": "string",
          "example": "2023-08-04T00:00:00Z",
          "description": "The date and time, in UTC, the AccessGrant was created. ISO 8601 Formatted."
        },
        "created_by": {
          "type": "string",
          "description": "The token for the User who created the AccessGrant."
        }
      },
      "description": "AccessGrant model"
    },
    "AccessGrants": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "access_grants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessGrant"
          }
        }
      },
      "description": "AccessGrants model"
    },
    "updateAccessGrant": {
      "type": "object",
      "properties": {
        "access": {
          "type": "string",
          "description": "Allowed or denied access to resource.",
          "enum": [
            "denied",
            "allowed"
          ]
        }
      },
      "required": [
        "access"
      ],
      "description": "Update an AccessGrant."
    },
    "createReportNotification": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the ReportNotification."
        },
        "cost_report_token": {
          "type": "string",
          "description": "The CostReport token."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token of the Workspace to add the ReportNotification to. Required if the API token is associated with multiple Workspaces."
        },
        "user_tokens": {
          "type": "array",
          "description": "The Users that receive the notification.",
          "items": {
            "type": "string"
          }
        },
        "recipient_channels": {
          "type": "array",
          "description": "The Slack or Microsoft Teams channels that receive the notification.",
          "items": {
            "type": "string"
          }
        },
        "frequency": {
          "type": "string",
          "description": "The frequency the ReportNotification is sent. Possible values: daily, weekly, monthly."
        },
        "change": {
          "type": "string",
          "description": "The type of change the ReportNotification is tracking. Possible values: percentage, dollars."
        }
      },
      "required": [
        "title",
        "cost_report_token",
        "frequency",
        "change"
      ],
      "description": "Create a ReportNotification."
    },
    "ReportNotification": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "title": {
          "type": "string",
          "example": "Acme Report Notification",
          "description": "The title of the ReportNotification."
        },
        "cost_report_token": {
          "type": "string",
          "example": "rprt_abcd1234",
          "description": "The token for a CostReport the ReportNotification is applied to."
        },
        "user_tokens": {
          "type": "array",
          "items": {
            "type": "string",
            "example": [
              "usr_abcd1234",
              "usr_efgh5678"
            ]
          },
          "description": "The Users that receive the notification."
        },
        "recipient_channels": {
          "type": "array",
          "items": {
            "type": "string",
            "example": [
              "#notifications-channel"
            ]
          },
          "description": "The Slack or Microsoft Teams channels that receive the notification."
        },
        "frequency": {
          "type": "string",
          "example": "weekly",
          "enum": [
            "daily",
            "weekly",
            "monthly"
          ],
          "description": "The frequency the ReportNotification is sent."
        },
        "change": {
          "type": "string",
          "example": "percentage",
          "enum": [
            "percentage",
            "dollars"
          ],
          "description": "The type of change the ReportNotification is tracking."
        }
      },
      "description": "ReportNotification model"
    },
    "ReportNotifications": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "report_notifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportNotification"
          }
        }
      },
      "description": "ReportNotifications model"
    },
    "updateReportNotification": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the ReportNotification."
        },
        "cost_report_token": {
          "type": "string",
          "description": "The CostReport token."
        },
        "user_tokens": {
          "type": "array",
          "description": "The Users that receive the notification.",
          "items": {
            "type": "string"
          }
        },
        "recipient_channels": {
          "type": "array",
          "description": "The Slack or Microsoft Teams channels that receive the notification.",
          "items": {
            "type": "string"
          }
        },
        "frequency": {
          "type": "string",
          "description": "The frequency the ReportNotification is sent. Possible values: daily, weekly, monthly."
        },
        "change": {
          "type": "string",
          "description": "The type of change the ReportNotification is tracking. Possible values: percentage, dollars."
        }
      },
      "description": "Update a ReportNotification."
    },
    "Users": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          }
        }
      },
      "description": "Users model"
    },
    "User": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "example": "John Doe",
          "description": "The name of the User."
        },
        "email": {
          "type": "string",
          "example": "john_doe@acme.com",
          "description": "The email of the User."
        },
        "role": {
          "type": "string",
          "example": "Admin",
          "description": "The role of the User."
        },
        "last_seen_at": {
          "type": "string",
          "example": "2024-01-01T00:00:00Z",
          "description": "The last time the User logged in."
        }
      },
      "description": "User model"
    },
    "createBusinessMetric": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the BusinessMetrics."
        },
        "cost_report_tokens_with_metadata": {
          "type": "array",
          "description": "The tokens for any CostReports that use the BusinessMetric, the unit scale, and label filter.",
          "items": {
            "type": "object",
            "properties": {
              "cost_report_token": {
                "type": "string",
                "description": "The token of the CostReport the BusinessMetric is attached to."
              },
              "unit_scale": {
                "type": "string",
                "description": "Determines the scale of the BusinessMetric's values within the CostReport.",
                "enum": [
                  "per_unit",
                  "per_hundred",
                  "per_thousand",
                  "per_million",
                  "per_billion"
                ],
                "default": "per_unit"
              },
              "label_filter": {
                "type": "array",
                "description": "Include only values with these labels in the CostReport.",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "cost_report_token"
            ]
          }
        },
        "values": {
          "type": "array",
          "description": "The dates, amounts, and (optional) labels for the BusinessMetric.",
          "items": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "format": "date-time"
              },
              "amount": {
                "type": "number",
                "format": "double"
              },
              "label": {
                "type": "string",
                "x-nullable": true
              }
            },
            "required": [
              "date",
              "amount"
            ]
          }
        }
      },
      "required": [
        "title"
      ],
      "description": "Create a new BusinessMetric."
    },
    "BusinessMetric": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "example": "bsnss_mtrc_1234",
          "description": "The token of the BusinessMetric."
        },
        "title": {
          "type": "string",
          "example": "Total Revenue",
          "description": "The title of the BusinessMetric."
        },
        "created_by_token": {
          "type": "string",
          "example": "usr_1234",
          "description": "The token of the Creator of the BusinessMetric."
        },
        "cost_report_tokens_with_metadata": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttachedCostReportForBusinessMetric"
          },
          "description": "The tokens for any CostReports that use the BusinessMetric, the unit scale, and label filter."
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessMetricValue"
          },
          "description": "The dates, amounts, and (optional) labels for the BusinessMetric."
        }
      },
      "description": "BusinessMetric model"
    },
    "AttachedCostReportForBusinessMetric": {
      "type": "object",
      "properties": {
        "cost_report_token": {
          "type": "string",
          "example": "rprt_1234",
          "description": "The token of the CostReport the BusinessMetric is attached to."
        },
        "unit_scale": {
          "type": "string",
          "example": "per_hundred",
          "enum": [
            "per_unit",
            "per_hundred",
            "per_thousand",
            "per_million",
            "per_billion"
          ],
          "description": "Determines the scale of the BusinessMetric's values within a particular CostReport."
        },
        "label_filter": {
          "type": "array",
          "items": {
            "type": "string",
            "example": [
              "label_1",
              "label_2"
            ]
          },
          "x-omitempty": true,
          "description": "The labels that the BusinessMetric is filtered by within a particular CostReport."
        }
      }
    },
    "BusinessMetricValue": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "example": "2024-03-01+00:00",
          "description": "The date of the Business Metric Value. ISO 8601 formatted."
        },
        "amount": {
          "type": "string",
          "example": "100.00",
          "description": "The amount of the Business Metric Value as a string to ensure precision."
        },
        "label": {
          "type": "string",
          "example": "Cost Center A",
          "description": "The label of the Business Metric Value."
        }
      }
    },
    "BusinessMetrics": {
      "type": "object",
      "properties": {
        "business_metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessMetric"
          }
        }
      },
      "description": "BusinessMetrics model"
    },
    "updateBusinessMetric": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the BusinessMetric."
        },
        "cost_report_tokens_with_metadata": {
          "type": "array",
          "description": "The tokens for any CostReports that use the BusinessMetric, and the unit scale.",
          "items": {
            "type": "object",
            "properties": {
              "cost_report_token": {
                "type": "string",
                "description": "The token of the CostReport the BusinessMetric is attached to."
              },
              "unit_scale": {
                "type": "string",
                "description": "Determines the scale of the BusinessMetric's values within the CostReport.",
                "enum": [
                  "per_unit",
                  "per_hundred",
                  "per_thousand",
                  "per_million",
                  "per_billion"
                ],
                "default": "per_unit"
              },
              "label_filter": {
                "type": "array",
                "description": "Include only values with these labels in the CostReport.",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "cost_report_token"
            ]
          }
        },
        "values": {
          "type": "array",
          "description": "The dates, amounts, and (optional) labels for the BusinessMetric.",
          "items": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "format": "date-time"
              },
              "amount": {
                "type": "number",
                "format": "double"
              },
              "label": {
                "type": "string",
                "x-nullable": true
              }
            },
            "required": [
              "date",
              "amount"
            ]
          }
        }
      },
      "description": "Updates an existing BusinessMetric."
    },
    "Products": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          }
        }
      },
      "description": "Products model"
    },
    "Product": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "category": {
          "type": "string",
          "example": "compute",
          "description": "The category of the cloud product"
        },
        "name": {
          "type": "string",
          "example": "EC2",
          "description": "The common name of the product."
        },
        "service_id": {
          "type": "string",
          "example": "aws-ec2",
          "description": "A unique slug for the service the product belongs to."
        },
        "provider_id": {
          "type": "string",
          "example": "aws",
          "description": "A unique slug for the provider the product belongs to."
        },
        "details": {
          "type": "object",
          "example": {
            "gpu": 0,
            "name": "M5 General Purpose 16xlarge",
            "vcpu": 64,
            "memory": 256,
            "clock_speed_ghz": 3.1,
            "physical_processor_description": "Intel Xeon Platinum 8175 (Skylake)",
            "network_performance_description": "20 Gigabit"
          },
          "description": "An object of metadata about the product."
        }
      },
      "description": "Product model"
    },
    "Prices": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "prices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Price"
          }
        }
      },
      "description": "Prices model"
    },
    "Price": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "unit": {
          "type": "string",
          "example": "hour",
          "description": "The unit in which the amount is billed."
        },
        "region": {
          "type": "string",
          "example": "us-east-1",
          "description": "The region the price is specific to."
        },
        "rate_type": {
          "type": "string",
          "example": "compute",
          "description": "The part of the product the price applies to. (compute, transfer, etc..)"
        },
        "currency": {
          "type": "string",
          "example": "USD",
          "description": "The currency of the amount."
        },
        "amount": {
          "type": "number",
          "example": "1.324",
          "description": "The amount of money this specific product price costs."
        },
        "details": {
          "type": "object",
          "example": {
            "platform": "linux-enterprise",
            "lifecycle": "on-demand"
          },
          "description": "Service specific metadata."
        }
      },
      "description": "Price model"
    },
    "FinancialCommitmentReports": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "financial_commitment_reports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FinancialCommitmentReport"
          }
        }
      },
      "description": "FinancialCommitmentReports model"
    },
    "FinancialCommitmentReport": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "title": {
          "type": "string",
          "example": "Acme123 Financial Commitment Report",
          "description": "The title of the FinancialCommitmentReport."
        },
        "default": {
          "type": "boolean",
          "description": "Indicates whether the FinancialCommitmentReport is the default report."
        },
        "created_at": {
          "type": "string",
          "example": "2024-03-19T00:00:00Z",
          "description": "The date and time, in UTC, the report was created. ISO 8601 Formatted."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token for the Workspace the FinancialCommitmentReport is a part of."
        },
        "user_token": {
          "type": "string",
          "description": "The token for the User who created this FinancialCommitmentReport."
        },
        "start_date": {
          "type": "string",
          "example": "2024-03-01",
          "description": "The start date for the FinancialCommitmentReport. Only set for custom date ranges. ISO 8601 Formatted."
        },
        "end_date": {
          "type": "string",
          "example": "2024-03-20",
          "description": "The end date for the FinancialCommitmentReport. Only set for custom date ranges. ISO 8601 Formatted."
        },
        "date_interval": {
          "type": "string",
          "example": "last_month",
          "description": "The date range for the FinancialCommitmentReport. Only present if a custom date range is not specified."
        },
        "date_bucket": {
          "type": "string",
          "example": "month",
          "description": "How costs are grouped and displayed in the FinancialCommitmentReport. Possible values: day, week, month."
        },
        "groupings": {
          "type": "string",
          "example": "cost_type, tag:account",
          "description": "The grouping aggregations applied to the filtered data."
        },
        "on_demand_costs_scope": {
          "type": "string",
          "example": "discountable",
          "description": "The scope for the costs. Possible values: discountable, all."
        }
      },
      "description": "FinancialCommitmentReport model"
    },
    "FinancialCommitments": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "financial_commitments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FinancialCommitment"
          }
        }
      },
      "description": "FinancialCommitments model"
    },
    "FinancialCommitment": {
      "type": "object",
      "properties": {
        "commitment_type": {
          "type": "string",
          "example": "Savings Plan",
          "description": "The commitment type (eg Savings Plan or Reserved Instance)."
        },
        "service": {
          "type": "string",
          "example": "Compute",
          "description": "The service this commitment applies towards."
        },
        "account": {
          "type": "string",
          "example": "113074892135",
          "description": "The account for this financial commitment."
        },
        "type": {
          "type": "string",
          "example": "m5.large",
          "description": "The type of financial commitment."
        },
        "amount": {
          "type": "string",
          "example": "4",
          "description": "The number of instances for the financial commitment."
        },
        "term": {
          "type": "string",
          "example": "3 Year",
          "description": "The duration in years of the financial commitment."
        },
        "payment_type": {
          "type": "string",
          "example": "No upfront",
          "description": "The type of payment for the financial commitment."
        },
        "region": {
          "type": "string",
          "example": "us-east-1",
          "description": "The region for the financial commitment."
        },
        "purchase_date": {
          "type": "string",
          "example": "2023-08-30",
          "description": "The purchase date of the financial commitment. ISO 8601 Formatted."
        },
        "expiration_date": {
          "type": "string",
          "example": "2026-08-30",
          "description": "The expiration date of the financial commitment. ISO 8601 Formatted."
        },
        "commitment": {
          "type": "string",
          "example": "$2.18",
          "description": "The amount of the financial commitment."
        },
        "status": {
          "type": "string",
          "example": "active",
          "description": "The status of the financial commitment (e.g. active vs expired)."
        },
        "created_at": {
          "type": "string",
          "example": "2024-03-19T00:00:00Z",
          "description": "The date and time, in UTC, the Financial Commitment was created. ISO 8601 Formatted."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token for the Workspace the FinancialCommitment is a part of."
        }
      }
    },
    "createKubernetesEfficiencyReport": {
      "type": "object",
      "properties": {
        "workspace_token": {
          "type": "string",
          "description": "The Workspace in which the KubernetesEfficiencyReport will be created."
        },
        "title": {
          "type": "string",
          "description": "The title of the KubernetesEfficiencyReport."
        },
        "filter": {
          "type": "string",
          "description": "The filter query language to apply to the KubernetesEfficiencyReport. Additional documentation available at https://docs.vantage.sh/vql."
        },
        "start_date": {
          "type": "string",
          "format": "date",
          "description": "The start date of the KubernetesEfficiencyReport. ISO 8601 Formatted. Incompatible with 'date_interval' parameter."
        },
        "end_date": {
          "type": "string",
          "format": "date",
          "description": "The end date of the KubernetesEfficiencyReport. ISO 8601 Formatted. Incompatible with 'date_interval' parameter."
        },
        "date_interval": {
          "type": "string",
          "description": "The date interval of the KubernetesEfficiencyReport. Incompatible with 'start_date' and 'end_date' parameters. Defaults to 'this_month' if start_date and end_date are not provided.",
          "enum": [
            "this_month",
            "last_7_days",
            "last_30_days",
            "last_month",
            "last_3_months",
            "last_6_months",
            "custom",
            "last_12_months",
            "last_24_months",
            "last_36_months",
            "next_month",
            "next_3_months",
            "next_6_months",
            "next_12_months",
            "year_to_date"
          ]
        },
        "aggregated_by": {
          "type": "string",
          "description": "The column by which the costs are aggregated.",
          "enum": [
            "idle_cost",
            "amount",
            "cost_efficiency"
          ]
        },
        "date_bin": {
          "type": "string",
          "description": "The date bin of the KubernetesEfficiencyReport.",
          "enum": [
            "day",
            "week",
            "month"
          ],
          "default": "day"
        },
        "groupings": {
          "type": "array",
          "description": "Grouping values for aggregating costs on the KubernetesEfficiencyReport. Valid groupings: cluster_id, namespace, labeled, category, label, label:<label_name>.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "workspace_token",
        "title"
      ],
      "description": "Create a KubernetesEfficiencyReport."
    },
    "KubernetesEfficiencyReport": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "title": {
          "type": "string",
          "example": "Acme123 Kubernetes Efficiency Metrics",
          "description": "The title of the KubernetesEfficiencyReport."
        },
        "default": {
          "type": "boolean",
          "description": "Indicates whether the KubernetesEfficiencyReport is the default report."
        },
        "created_at": {
          "type": "string",
          "example": "2024-03-19T00:00:00Z",
          "description": "The date and time, in UTC, the report was created. ISO 8601 Formatted."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token for the Workspace the KubernetesEfficiencyReport is a part of."
        },
        "user_token": {
          "type": "string",
          "description": "The token for the User who created this KubernetesEfficiencyReport."
        },
        "start_date": {
          "type": "string",
          "example": "2024-03-01",
          "description": "The start date for the KubernetesEfficiencyReport. Only set for custom date ranges. ISO 8601 Formatted."
        },
        "end_date": {
          "type": "string",
          "example": "2024-03-20",
          "description": "The end date for the KubernetesEfficiencyReport. Only set for custom date ranges. ISO 8601 Formatted."
        },
        "date_interval": {
          "type": "string",
          "example": "last_month",
          "description": "The date range for the KubernetesEfficiencyReport. Only present if a custom date range is not specified."
        },
        "date_bucket": {
          "type": "string",
          "example": "month",
          "description": "How costs are grouped and displayed in the KubernetesEfficiencyReport. Possible values: day, week, month."
        },
        "aggregated_by": {
          "type": "string",
          "description": "How costs are aggregated by. Possible values: idle_cost, amount, cost_efficiency."
        },
        "groupings": {
          "type": "string",
          "example": "cluster_id, namespace",
          "description": "Grouping values for aggregating costs on the KubernetesEfficiencyReport. Valid groupings: cluster_id, namespace, labeled, category, label, label:<label_name>."
        },
        "filter": {
          "type": "string",
          "description": "The filter applied to the KubernetesEfficiencyReport. Additional documentation available at https://docs.vantage.sh/vql."
        }
      },
      "description": "KubernetesEfficiencyReport model"
    },
    "KubernetesEfficiencyReports": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "kubernetes_efficiency_reports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KubernetesEfficiencyReport"
          }
        }
      },
      "description": "KubernetesEfficiencyReports model"
    },
    "updateKubernetesEfficiencyReport": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the KubernetesEfficiencyReport."
        },
        "filter": {
          "type": "string",
          "description": "The filter query language to apply to the KubernetesEfficiencyReport. Additional documentation available at https://docs.vantage.sh/vql."
        },
        "start_date": {
          "type": "string",
          "format": "date",
          "description": "The start date of the KubernetesEfficiencyReport. ISO 8601 Formatted. Incompatible with 'date_interval' parameter."
        },
        "end_date": {
          "type": "string",
          "format": "date",
          "description": "The end date of the KubernetesEfficiencyReport. ISO 8601 Formatted. Incompatible with 'date_interval' parameter."
        },
        "date_interval": {
          "type": "string",
          "description": "The date interval of the KubernetesEfficiencyReport. Incompatible with 'start_date' and 'end_date' parameters. Defaults to 'this_month' if start_date and end_date are not provided.",
          "enum": [
            "this_month",
            "last_7_days",
            "last_30_days",
            "last_month",
            "last_3_months",
            "last_6_months",
            "custom",
            "last_12_months",
            "last_24_months",
            "last_36_months",
            "next_month",
            "next_3_months",
            "next_6_months",
            "next_12_months",
            "year_to_date"
          ]
        },
        "aggregated_by": {
          "type": "string",
          "description": "The column by which the costs are aggregated.",
          "enum": [
            "idle_cost",
            "amount",
            "cost_efficiency"
          ]
        },
        "date_bin": {
          "type": "string",
          "description": "The date bin of the KubernetesEfficiencyReport.",
          "enum": [
            "day",
            "week",
            "month"
          ],
          "default": "day"
        },
        "groupings": {
          "type": "array",
          "description": "Grouping values for aggregating costs on the KubernetesEfficiencyReport. Valid groupings: cluster_id, namespace, labeled, category, label, label:<label_name>.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Update a KubernetesEfficiencyReport."
    },
    "AnomalyAlerts": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "anomaly_alerts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnomalyAlert"
          }
        }
      },
      "description": "AnomalyAlerts model"
    },
    "AnomalyAlert": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "example": "2021-07-09T00:00:00Z",
          "description": "The date and time, in UTC, the AnomalyAlert was created. ISO 8601 Formatted."
        },
        "alerted_at": {
          "type": "string",
          "example": "2021-07-09T00:00:00Z",
          "description": "The date and time, in UTC, the AnomalyAlert is sent. ISO 8601 Formatted."
        },
        "category": {
          "type": "string",
          "description": "The category of the AnomalyAlert."
        },
        "service": {
          "type": "string",
          "description": "The provider service causing the AnomalyAlert."
        },
        "provider": {
          "type": "string",
          "description": "The provider of the service causing the AnomalyAlert."
        },
        "amount": {
          "type": "string",
          "description": "The amount observed."
        },
        "previous_amount": {
          "type": "string",
          "description": "The previous amount observed."
        },
        "seven_day_average": {
          "type": "string",
          "description": "The seven day average of the amount observed."
        },
        "status": {
          "type": "string",
          "description": "The status of the AnomalyAlert."
        },
        "feedback": {
          "type": "string",
          "description": "The user-provided feedback of why alert was ignored/archived."
        },
        "cost_report_token": {
          "type": "string",
          "description": "The token of the Report associated with the AnomalyAlert."
        }
      },
      "description": "AnomalyAlert model"
    },
    "updateAnomalyAlert": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "The status of the Anomaly Alert."
        },
        "feedback": {
          "type": "string",
          "description": "Optional additional comments for why this alert is ignored."
        }
      },
      "required": [
        "status"
      ],
      "description": "Update an AnomalyAlert."
    },
    "createVirtualTagConfig": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key of the VirtualTagConfig."
        },
        "overridable": {
          "type": "boolean",
          "description": "Whether the VirtualTagConfig can override a provider-supplied tag on a matching Cost."
        },
        "backfill_until": {
          "type": "string",
          "format": "date",
          "description": "The earliest month the VirtualTagConfig should be backfilled to."
        },
        "values": {
          "type": "array",
          "description": "Values for the VirtualTagConfig, with match precedence determined by order in the list.",
          "items": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "The filter query language to apply to the value. Additional documentation available at https://docs.vantage.sh/vql."
              },
              "name": {
                "type": "string",
                "description": "The name of the value."
              },
              "business_metric_token": {
                "type": "string",
                "description": "The token of an associated business metric."
              },
              "cost_metric": {
                "type": "object",
                "properties": {
                  "filter": {
                    "type": "string"
                  },
                  "aggregation": {
                    "type": "object",
                    "properties": {
                      "tag": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "tag"
                    ]
                  }
                },
                "required": [
                  "filter",
                  "aggregation"
                ]
              }
            },
            "required": [
              "filter"
            ]
          }
        }
      },
      "required": [
        "key",
        "overridable"
      ],
      "description": "Create a new VirtualTagConfig."
    },
    "VirtualTagConfig": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "example": "vtag_1234",
          "description": "The token of the VirtualTagConfig."
        },
        "created_by_token": {
          "type": "string",
          "example": "usr_1234",
          "description": "The token of the Creator of the VirtualTagConfig."
        },
        "key": {
          "type": "string",
          "example": "Cost Center",
          "description": "The key of the VirtualTagConfig."
        },
        "overridable": {
          "type": "boolean",
          "description": "Whether the VirtualTagConfig can override a provider-supplied tag on a matching Cost."
        },
        "backfill_until": {
          "type": "string",
          "example": "2024-06-01",
          "description": "The earliest month VirtualTagConfig should be backfilled to."
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualTagConfigValue"
          },
          "description": "Values for the VirtualTagConfig, with match precedence determined by their relative order in the list."
        }
      },
      "description": "VirtualTagConfig model"
    },
    "VirtualTagConfigValue": {
      "type": "object",
      "properties": {
        "filter": {
          "type": "string",
          "example": "costs.provider = 'aws' AND costs.service = 'Amazon Simple Storage Service'",
          "description": "The filter VQL for the Value."
        },
        "name": {
          "type": "string",
          "example": "Informatics",
          "description": "The name of the Value."
        },
        "business_metric_token": {
          "type": "string",
          "example": "bsnss_mtrc_abc123",
          "description": "The token of the associated BusinessMetric."
        },
        "cost_metric": {
          "$ref": "#/definitions/VirtualTagConfigValueCostMetric",
          "description": "The associated cost metric."
        }
      }
    },
    "VirtualTagConfigValueCostMetric": {
      "type": "object",
      "properties": {
        "filter": {
          "type": "string",
          "description": "The filter VQL for the cost metric."
        },
        "aggregation": {
          "$ref": "#/definitions/VirtualTagConfigValueCostMetricAggregation",
          "description": "The aggregation type of the CostMetric."
        }
      }
    },
    "VirtualTagConfigValueCostMetricAggregation": {
      "type": "object",
      "properties": {
        "tag": {
          "type": "string",
          "description": "The tag to aggregate on."
        }
      }
    },
    "VirtualTagConfigs": {
      "type": "object",
      "properties": {
        "virtual_tag_configs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualTagConfig"
          }
        }
      },
      "description": "VirtualTagConfigs model"
    },
    "updateVirtualTagConfig": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key of the VirtualTagConfig."
        },
        "overridable": {
          "type": "boolean",
          "description": "Whether the VirtualTagConfig can override a provider-supplied tag on a matching Cost.",
          "x-nullable": true
        },
        "backfill_until": {
          "type": "string",
          "format": "date",
          "description": "The earliest month the VirtualTagConfig should be backfilled to.",
          "x-nullable": true
        },
        "values": {
          "type": "array",
          "description": "Values for the VirtualTagConfig, with match precedence determined by order in the list.",
          "items": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "The filter query language to apply to the value. Additional documentation available at https://docs.vantage.sh/vql."
              },
              "name": {
                "type": "string",
                "description": "The name of the value."
              },
              "business_metric_token": {
                "type": "string",
                "description": "The token of an associated business metric."
              },
              "cost_metric": {
                "type": "object",
                "properties": {
                  "filter": {
                    "type": "string"
                  },
                  "aggregation": {
                    "type": "object",
                    "properties": {
                      "tag": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "tag"
                    ]
                  }
                },
                "required": [
                  "filter",
                  "aggregation"
                ]
              }
            },
            "required": [
              "filter"
            ]
          }
        }
      },
      "description": "Updates an existing VirtualTagConfig."
    },
    "createAnomalyNotification": {
      "type": "object",
      "properties": {
        "cost_report_token": {
          "type": "string",
          "description": "The token of the Cost Report that has the notification."
        },
        "threshold": {
          "type": "integer",
          "format": "int32",
          "description": "The threshold amount that must be met for the notification to fire."
        },
        "user_tokens": {
          "type": "array",
          "description": "The tokens of the Users that receive the notification.",
          "items": {
            "type": "string"
          }
        },
        "recipient_channels": {
          "type": "array",
          "description": "The Slack/MS Teams channels that receive the notification.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "cost_report_token"
      ],
      "description": "Create an Anomaly Notification for a Cost Report."
    },
    "AnomalyNotification": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "cost_report_token": {
          "type": "string",
          "description": "The token for the CostReport the AnomalyNotification is associated with."
        },
        "created_at": {
          "type": "string",
          "example": "2023-08-04T00:00:00Z",
          "description": "The date and time, in UTC, the AnomalyNotification was created. ISO 8601 Formatted."
        },
        "updated_at": {
          "type": "string",
          "example": "2023-08-04T00:00:00Z",
          "description": "The date and time, in UTC, the AnomalyNotification was last updated at. ISO 8601 Formatted."
        },
        "threshold": {
          "type": "integer",
          "format": "int32",
          "description": "The threshold amount that must be met for the notification to fire."
        },
        "user_tokens": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The tokens of the users that receive the notification."
        },
        "recipient_channels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The channels that the notification is sent to."
        }
      },
      "description": "AnomalyNotification model"
    },
    "AnomalyNotifications": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "anomaly_notifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnomalyNotification"
          }
        }
      },
      "description": "AnomalyNotifications model"
    },
    "updateAnomalyNotification": {
      "type": "object",
      "properties": {
        "threshold": {
          "type": "integer",
          "format": "int32",
          "description": "The threshold amount that must be met for the notification to fire."
        },
        "user_tokens": {
          "type": "array",
          "description": "The tokens of the users that receive the notification.",
          "items": {
            "type": "string"
          }
        },
        "recipient_channels": {
          "type": "array",
          "description": "The Slack/MS Teams channels that receive the notification.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Update an Anomaly Notification."
    },
    "createBudget": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the Budget."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token of the Workspace to add the Budget to."
        },
        "cost_report_token": {
          "type": "string",
          "description": "The CostReport token."
        },
        "periods": {
          "type": "array",
          "description": "The periods for the Budget. The start_at and end_at must be iso8601 formatted e.g. YYYY-MM-DD.",
          "items": {
            "type": "object",
            "properties": {
              "start_at": {
                "type": "string",
                "format": "date",
                "description": "The start date of the period."
              },
              "end_at": {
                "type": "string",
                "format": "date",
                "description": "The end date of the period.",
                "x-nullable": true
              },
              "amount": {
                "type": "number",
                "format": "double",
                "description": "The amount of the period."
              }
            },
            "required": [
              "start_at",
              "amount"
            ]
          }
        }
      },
      "required": [
        "name"
      ],
      "description": "Create a Budget."
    },
    "Budget": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "example": "Acme123 Budget",
          "description": "The name of the Budget."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token for the Workspace the Budget is a part of."
        },
        "user_token": {
          "type": "string",
          "description": "The token for the User who created this Budget."
        },
        "created_by_token": {
          "type": "string",
          "description": "The token of the Creator of the Budget."
        },
        "cost_report_token": {
          "type": "string",
          "description": "The token of the Report associated with the Budget."
        },
        "created_at": {
          "type": "string",
          "example": "2024-03-19T00:00:00Z",
          "description": "The date and time, in UTC, the Budget was created. ISO 8601 Formatted."
        },
        "budget_alert_tokens": {
          "type": "array",
          "items": {
            "type": "string",
            "example": [
              "bdgt_alrt_c9cd4e1a7127461b"
            ]
          },
          "description": "The tokens of the BudgetAlerts associated with the Budget."
        },
        "periods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BudgetPeriod"
          },
          "description": "The budget periods associated with the Budget."
        },
        "performance": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BudgetPerformance"
          },
          "description": "The historical performance of the Budget."
        }
      },
      "description": "Budget model"
    },
    "BudgetPeriod": {
      "type": "object",
      "properties": {
        "start_at": {
          "type": "string",
          "example": "2024-03-19T00:00:00Z",
          "description": "The date and time, in UTC, the Budget was created. ISO 8601 Formatted."
        },
        "end_at": {
          "type": "string",
          "example": "2024-03-19T00:00:00Z",
          "description": "The date and time, in UTC, the Budget was created. ISO 8601 Formatted."
        },
        "amount": {
          "type": "string",
          "example": "100.00",
          "description": "The amount of the Budget Period as a string to ensure precision."
        }
      }
    },
    "BudgetPerformance": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "example": "2024-03-19T00:00:00Z",
          "description": "The date and time, in UTC, the Budget was created. ISO 8601 Formatted."
        },
        "actual": {
          "type": "string",
          "example": "2024-03-19T00:00:00Z",
          "description": "The date and time, in UTC, the Budget was created. ISO 8601 Formatted."
        },
        "amount": {
          "type": "string",
          "example": "100.00",
          "description": "The amount of the Budget Period as a string to ensure precision."
        }
      }
    },
    "Budgets": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "budgets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Budget"
          }
        }
      },
      "description": "Budgets model"
    },
    "updateBudget": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the Budget."
        },
        "cost_report_token": {
          "type": "string",
          "description": "The CostReport token."
        },
        "periods": {
          "type": "array",
          "description": "The periods for the Budget. The start_at and end_at must be iso8601 formatted e.g. YYYY-MM-DD.",
          "items": {
            "type": "object",
            "properties": {
              "start_at": {
                "type": "string",
                "format": "date",
                "description": "The start date of the period."
              },
              "end_at": {
                "type": "string",
                "format": "date",
                "description": "The end date of the period.",
                "x-nullable": true
              },
              "amount": {
                "type": "number",
                "format": "double",
                "description": "The amount of the period."
              }
            },
            "required": [
              "start_at",
              "amount"
            ]
          }
        }
      },
      "description": "Update a Budget."
    },
    "BudgetAlert": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "budget_tokens": {
          "type": "array",
          "items": {
            "type": "string",
            "example": [
              "bdgt_22dc1ac6e000cd14",
              "bdgt_e045e8d2c739cb2c"
            ]
          },
          "description": "The tokens for the Budgets that the Budget Alert is monitoring to trigger alerts on."
        },
        "created_at": {
          "type": "string",
          "example": "2024-03-19T00:00:00Z",
          "description": "The date and time, in UTC, the Budget Alert was created. ISO 8601 Formatted."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token for the Workspace the ResourceReport is a part of."
        },
        "user_token": {
          "type": "string",
          "description": "The token for the User who created this BudgetAlert."
        },
        "user_tokens": {
          "type": "array",
          "items": {
            "type": "string",
            "example": [
              "usr_abcd1234",
              "usr_efgh5678"
            ]
          },
          "description": "The Users that receive the alert."
        },
        "duration_in_days": {
          "type": "string",
          "description": "The number of days from the start or end of the month to trigger the alert if the threshold is reached."
        },
        "threshold": {
          "type": "string",
          "example": "75",
          "description": "Alerts only send if they reach this number (as a percentage). When threshold is 100, that means alerts are triggered once costs reach 100% of the budget."
        },
        "period_to_track": {
          "type": "string",
          "example": "start_of_the_month",
          "description": "The period tracked on the alert. Used with duration_in_days to determine the time window of the alert. Possible values: start_of_the_month, end_of_the_month."
        },
        "integration_provider": {
          "type": "string",
          "example": "slack",
          "description": "The provider used for sending alerts. This must be configured in the console. Possible values are: slack, microsoft_graph."
        },
        "recipient_channels": {
          "type": "string",
          "example": [
            "#budget-notifications",
            "#finance"
          ],
          "description": "The channels receiving the alerts. Requires an integration provider to be connected."
        }
      },
      "description": "BudgetAlert model"
    },
    "BudgetAlerts": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "budget_alerts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BudgetAlert"
          }
        }
      },
      "description": "BudgetAlerts model"
    },
    "createAzureIntegration": {
      "type": "object",
      "properties": {
        "tenant": {
          "type": "string",
          "description": "Azure AD Tenant ID."
        },
        "app_id": {
          "type": "string",
          "description": "Service Principal Application ID."
        },
        "password": {
          "type": "string",
          "description": "Service Principal Password."
        }
      },
      "required": [
        "tenant",
        "app_id",
        "password"
      ],
      "description": "Create an Azure Integration"
    },
    "Integration": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "provider": {
          "type": "string",
          "example": "AWS",
          "description": "The name of the Integration."
        },
        "account_identifier": {
          "type": "string",
          "example": "011389-EF4C3E-3ED7AE",
          "description": "The account identifier. For GCP this is the billing Account ID, for Azure this is the account ID"
        },
        "status": {
          "type": "string",
          "example": "connected",
          "enum": [
            "connected",
            "disconnected"
          ],
          "description": "The status of the Integration. Can be 'connected' or 'disconnected'."
        },
        "workspace_tokens": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The tokens for any Workspaces that the account belongs to."
        },
        "created_at": {
          "type": "string",
          "example": "2023-08-04T00:00:00Z",
          "description": "The date and time, in UTC, the Integration was created. ISO 8601 Formatted."
        }
      },
      "description": "Integration model"
    },
    "createGCPIntegration": {
      "type": "object",
      "properties": {
        "billing_account_id": {
          "type": "string",
          "description": "GCP billing account ID."
        },
        "project_id": {
          "type": "string",
          "description": "GCP project ID."
        },
        "dataset_name": {
          "type": "string",
          "description": "BigQuery dataset name."
        }
      },
      "required": [
        "billing_account_id",
        "project_id",
        "dataset_name"
      ],
      "description": "Create a GCP Integration"
    },
    "createCustomProviderIntegration": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Custom Provider Integration."
        },
        "description": {
          "type": "string",
          "description": "Description of the Custom Provider Integration."
        }
      },
      "required": [
        "name"
      ],
      "description": "Create a Custom Provider Integration"
    },
    "Integrations": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "integrations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Integration"
          }
        }
      },
      "description": "Integrations model"
    },
    "UserCostsUploads": {
      "type": "object",
      "properties": {
        "user_costs_uploads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserCostsUpload"
          }
        }
      },
      "description": "UserCostsUploads model"
    },
    "UserCostsUpload": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "example": "usr_csts_upld_1234",
          "description": "The token of the UserCostsUpload."
        },
        "filename": {
          "type": "string",
          "example": "usr_csts_upld_1234.parquet",
          "description": "The filename of the uploaded costs UserCostsUpload."
        },
        "amount": {
          "type": "string",
          "example": 1234.56,
          "description": "The total amount of the costs in the UserCostsUpload."
        },
        "start_date": {
          "type": "string",
          "example": "2021-01-01",
          "description": "The start date of the costs in the UserCostsUpload."
        },
        "end_date": {
          "type": "string",
          "example": "2021-01-31",
          "description": "The end date of the costs in the UserCostsUpload."
        },
        "import_status": {
          "type": "string",
          "example": "processing",
          "description": "Import status of the UserCostsUpload."
        },
        "created_by_token": {
          "type": "string",
          "example": "usr_1234",
          "description": "The token of the Creator of the UserCostsUpload."
        },
        "created_at": {
          "type": "string",
          "example": "2021-01-01T00:00:00Z",
          "description": "When the UserCostsUpload was uploaded."
        }
      },
      "description": "UserCostsUpload model"
    },
    "Recommendations": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "recommendations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Recommendation"
          }
        }
      },
      "description": "Recommendations model"
    },
    "Recommendation": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "category": {
          "type": "string",
          "example": "ec2_rightsizing_recommender",
          "description": "The category of the Recommendation."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token for the Workspace the Recommendation is a part of."
        },
        "provider": {
          "type": "string",
          "description": "The provider the Recommendation is for."
        },
        "provider_account_id": {
          "type": "string",
          "description": "The account ID of the provider. For Azure, this is the subscription ID."
        },
        "description": {
          "type": "string"
        },
        "potential_savings": {
          "type": "string",
          "example": "100.00",
          "description": "The monthly potential savings of the Recommendation."
        },
        "service": {
          "type": "string",
          "example": "Amazon EC2",
          "description": "The service the Recommendation is for."
        },
        "created_at": {
          "type": "string",
          "description": "The date and time, in UTC, the Recommendation was created. ISO 8601 Formatted."
        },
        "resources_affected_count": {
          "type": "string",
          "description": "The number of ProviderResources related to the Recommendation. Use the `recommendations/:token/resources` endpoint to get the full list of resources."
        }
      },
      "description": "Recommendation model"
    },
    "ProviderResource": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "resource_id": {
          "type": "string",
          "example": "i-0a1b2c3d4e5f6g7h8",
          "description": "The unique identifier of the Active Resource."
        },
        "recommendation_actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecommendationAction"
          },
          "description": "The actions to take to implement the Recommendation."
        }
      },
      "description": "ProviderResource model"
    },
    "RecommendationAction": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "potential_savings": {
          "type": "string",
          "example": "100.00",
          "description": "Potential savings in dollars"
        },
        "instance_type": {
          "type": "string"
        },
        "containers": {
          "type": "string"
        }
      }
    },
    "createManagedAccount": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the Managed Account."
        },
        "contact_email": {
          "type": "string",
          "description": "The contact email address for the Managed Account."
        },
        "access_credential_tokens": {
          "type": "array",
          "description": "Access Credential (aka Integrations) tokens to assign to the Managed Account.",
          "items": {
            "type": "string"
          }
        },
        "billing_rule_tokens": {
          "type": "array",
          "description": "Billing Rule tokens to assign to the Managed Account.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name",
        "contact_email"
      ],
      "description": "Create a Managed Account."
    },
    "ManagedAccount": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "contact_email": {
          "type": "string"
        },
        "parent_account_token": {
          "type": "string",
          "description": "The token for the parent Account."
        },
        "access_credential_tokens": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The tokens for the Access Credentials assigned to the Managed Account."
        },
        "billing_rule_tokens": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The tokens for the Billing Rules assigned to the Managed Account."
        }
      },
      "description": "ManagedAccount model"
    },
    "ManagedAccounts": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "managed_accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedAccount"
          }
        }
      },
      "description": "ManagedAccounts model"
    },
    "updateManagedAccount": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the Managed Account."
        },
        "contact_email": {
          "type": "string",
          "description": "The contact email address for the Managed Account."
        },
        "access_credential_tokens": {
          "type": "array",
          "description": "Access Credential (aka Integrations) tokens to assign to the Managed Account.",
          "items": {
            "type": "string"
          }
        },
        "billing_rule_tokens": {
          "type": "array",
          "description": "Billing Rule tokens to assign to the Managed Account.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Update a Managed Account."
    },
    "createBillingRule": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of the Billing Rule. Note: the values are case insensitive.",
          "enum": [
            "exclusion",
            "adjustment",
            "credit",
            "charge"
          ]
        },
        "title": {
          "type": "string",
          "description": "The title of the Billing Rule."
        },
        "charge_type": {
          "type": "string",
          "description": "The charge type of the Billing Rule."
        },
        "percentage": {
          "type": "number",
          "format": "double",
          "description": "The percentage of the cost shown. Example value: 75.0"
        },
        "service": {
          "type": "string",
          "description": "The service of the Billing Rule."
        },
        "category": {
          "type": "string",
          "description": "The category of the Billing Rule."
        },
        "sub_category": {
          "type": "string",
          "description": "The subcategory of the Billing Rule."
        },
        "start_period": {
          "type": "string",
          "description": "The start period of the Billing Rule."
        },
        "amount": {
          "type": "number",
          "format": "double",
          "description": "The amount for the Billing Rule. Example value: 300"
        }
      },
      "required": [
        "type",
        "title",
        "charge_type",
        "percentage",
        "service",
        "category",
        "sub_category",
        "start_period",
        "amount"
      ],
      "description": "Create a Billing Rule."
    },
    "BillingRule": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "title": {
          "type": "string",
          "example": "Credit for Unused EC2 Instances",
          "description": "The title of the Billing Rule."
        },
        "type": {
          "type": "string",
          "example": "credit",
          "description": "The type of the Billing Rule."
        },
        "created_by_token": {
          "type": "string",
          "example": "usr_1234",
          "description": "The token of the Creator of the Billing Rule."
        },
        "created_at": {
          "type": "string",
          "example": "2024-06-28T00:00:00Z",
          "description": "The date and time, in UTC, the Billing Rule was created. ISO 8601 Formatted."
        },
        "service": {
          "type": "string",
          "example": "AWS Cloudfront",
          "description": "The service for the Billing Rule (Charge)."
        },
        "category": {
          "type": "string",
          "example": "MSP Fee",
          "description": "The category for the Billing Rule (Charge)."
        },
        "percentage": {
          "type": "string",
          "example": "75.0",
          "description": "The percentage of the cost shown for the Billing Rule (Adjustment)."
        },
        "charge_type": {
          "type": "string",
          "example": "RIFee",
          "description": "The charge type for the Billing Rule."
        },
        "sub_category": {
          "type": "string",
          "example": "One-time",
          "description": "The subcategory for the Billing Rule (Charge)."
        },
        "start_period": {
          "type": "string",
          "example": "2024-05-01",
          "description": "The start period for the Billing Rule (Charge)."
        },
        "amount": {
          "type": "string",
          "example": "5000.25",
          "description": "The amount for the Billing Rule (Charge)."
        }
      },
      "description": "BillingRule model"
    },
    "BillingRules": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "billing_rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BillingRule"
          }
        }
      },
      "description": "BillingRules model"
    },
    "updateBillingRule": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the Billing Rule."
        },
        "charge_type": {
          "type": "string",
          "description": "The charge type of the Billing Rule."
        },
        "percentage": {
          "type": "number",
          "format": "double",
          "description": "The percentage of the cost shown. Example value: 75.0"
        },
        "service": {
          "type": "string",
          "description": "The service of the Billing Rule."
        },
        "category": {
          "type": "string",
          "description": "The category of the Billing Rule."
        },
        "sub_category": {
          "type": "string",
          "description": "The subcategory of the Billing Rule."
        },
        "start_period": {
          "type": "string",
          "description": "The start period of the Billing Rule."
        },
        "amount": {
          "type": "number",
          "format": "double",
          "description": "The credit amount for the Billing Rule. Example value: 300"
        }
      },
      "description": "Update a Billing Rule."
    }
  }
}
