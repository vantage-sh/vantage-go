{
  "info": {
    "title": "Vantage",
    "description": "Vantage API",
    "termsOfService": "https://www.vantage.sh/terms-of-use",
    "contact": {
      "name": "Vantage Support",
      "email": "support@vantage.sh",
      "url": "https://www.vantage.sh"
    },
    "version": "2.0.0"
  },
  "swagger": "2.0",
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "flow": "application",
      "scopes": {
        "read": "Grants read access",
        "write": "Grants write access"
      },
      "tokenUrl": "https://console.vantage.sh/account/profile"
    }
  },
  "security": [
    {
      "oauth2": [
        "read"
      ]
    }
  ],
  "host": "api.vantage.sh",
  "basePath": "/v2",
  "schemes": [
    "https"
  ],
  "tags": [
    {
      "name": "Workspaces",
      "description": "Operations about Workspaces"
    },
    {
      "name": "Folders",
      "description": "Operations about Folders"
    },
    {
      "name": "Filters",
      "description": "Operations about Filters"
    },
    {
      "name": "Costs",
      "description": "Operations about Costs"
    },
    {
      "name": "Segments",
      "description": "Operations about Segments"
    },
    {
      "name": "Dashboards",
      "description": "Operations about Dashboards"
    },
    {
      "name": "Teams",
      "description": "Operations about Teams"
    },
    {
      "name": "AccessGrants",
      "description": "Operations about AccessGrants"
    },
    {
      "name": "Notifications",
      "description": "Operations about Notifications"
    },
    {
      "name": "Users",
      "description": "Operations about Users"
    },
    {
      "name": "BusinessMetrics",
      "description": "Operations about BusinessMetrics"
    },
    {
      "name": "Prices",
      "description": "Operations about Prices"
    },
    {
      "name": "ResourceReports",
      "description": "Operations about ResourceReports"
    },
    {
      "name": "FinancialCommitmentReports",
      "description": "Operations about FinancialCommitmentReports"
    },
    {
      "name": "KubernetesEfficiencyReports",
      "description": "Operations about KubernetesEfficiencyReports"
    },
    {
      "name": "AnomalyAlerts",
      "description": "Operations about AnomalyAlerts"
    },
    {
      "name": "VirtualTags",
      "description": "Operations about VirtualTags"
    },
    {
      "name": "ReportAlerts",
      "description": "Operations about ReportAlerts"
    },
    {
      "name": "Budgets",
      "description": "Operations about Budgets"
    },
    {
      "name": "Ping",
      "description": "Operations about Pings"
    }
  ],
  "paths": {
    "/workspaces": {
      "get": {
        "description": "Return all Workspaces that the current API token has access to.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Workspaces"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/workspaces",
                  "first": "https://api.vantage.com/v2/workspaces?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/workspaces?page=1",
                  "prev": null
                },
                "workspaces": [
                  {
                    "token": "wrkspc_f936ced69bcbf8fa",
                    "name": "Senger and Sons"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Workspaces"
        ],
        "operationId": "getWorkspaces"
      }
    },
    "/workspaces/{workspace_token}": {
      "get": {
        "description": "Return a specific Workspace.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspace_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Workspace"
            },
            "examples": {
              "application/json": {
                "token": "wrkspc_be2a1b2c1ebfa3c9",
                "name": "Crist-Simonis"
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Workspaces"
        ],
        "operationId": "getWorkspace"
      }
    },
    "/folders": {
      "post": {
        "description": "Create a Folder for CostReports.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createFolder",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createFolder"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Folder"
            },
            "examples": {
              "application/json": {
                "token": "fldr_4aabe6f482c2a9e4",
                "title": "New Folder",
                "parent_folder_token": "fldr_4d29cbecf2601266",
                "created_at": "2023-09-12T05:06:52Z",
                "updated_at": "2023-09-12T05:06:52Z",
                "workspace_token": "wrkspc_510cc77828001f9b"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Folders"
        ],
        "operationId": "createFolder"
      },
      "get": {
        "description": "Return all Folders for CostReports.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Folders"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/folders",
                  "first": "https://api.vantage.com/v2/folders?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/folders?page=1",
                  "prev": null
                },
                "folders": [
                  {
                    "token": "fldr_baf37f32280f5444",
                    "title": "synergy",
                    "parent_folder_token": null,
                    "created_at": "2023-09-12T05:06:54Z",
                    "updated_at": "2023-09-12T05:06:54Z",
                    "workspace_token": "wrkspc_f583a08beb76f679"
                  },
                  {
                    "token": "fldr_625d4591e46f7dfa",
                    "title": "website",
                    "parent_folder_token": "fldr_baf37f32280f5444",
                    "created_at": "2023-09-12T05:06:54Z",
                    "updated_at": "2023-09-12T05:06:54Z",
                    "workspace_token": "wrkspc_f583a08beb76f679"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Folders"
        ],
        "operationId": "getFolders"
      }
    },
    "/folders/{folder_token}": {
      "delete": {
        "description": "Delete a Folder for CostReports.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "folder_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Folder"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Folders"
        ],
        "operationId": "deleteFolder"
      },
      "put": {
        "description": "Update a Folder for CostReports.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "folder_token",
            "type": "string",
            "required": true
          },
          {
            "name": "updateFolder",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateFolder"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Folder"
            },
            "examples": {
              "application/json": {
                "token": "fldr_68e18d8d7df0be96",
                "title": "New Title",
                "parent_folder_token": "fldr_9aa0c735a6b615c6",
                "created_at": "2023-09-12T05:06:53Z",
                "updated_at": "2023-09-12T05:06:53Z",
                "workspace_token": "wrkspc_e65a48e5d9684439"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Folders"
        ],
        "operationId": "updateFolder"
      },
      "get": {
        "description": "Return a specific Folder for CostReports.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "folder_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Folder"
            },
            "examples": {
              "application/json": {
                "token": "fldr_3653e0f460786b1e",
                "title": "intermediate",
                "parent_folder_token": "fldr_b6bf120a1d3a794b",
                "created_at": "2023-09-12T05:07:36Z",
                "updated_at": "2023-09-12T05:07:36Z",
                "workspace_token": "wrkspc_a707105ff54966c3"
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Folders"
        ],
        "operationId": "getFolder"
      }
    },
    "/saved_filters": {
      "post": {
        "description": "Create a SavedFilter for CostReports.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createSavedFilter",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createSavedFilter"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SavedFilter"
            },
            "examples": {
              "application/json": {
                "token": "svd_fltr_84a8a4e35a845f97",
                "title": "New Saved Filter",
                "cost_report_tokens": [],
                "filter": "(costs.provider = 'datadog')",
                "created_at": "2023-09-12T05:06:52Z",
                "created_by": "usr_4011f2b8a607729d",
                "workspace_token": "wrkspc_6f54abb1b2a5aefc"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Filters"
        ],
        "operationId": "createSavedFilter"
      },
      "get": {
        "description": "Return all SavedFilters that can be applied to a CostReport.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SavedFilters"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/saved_filters",
                  "first": "https://api.vantage.com/v2/saved_filters?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/saved_filters?page=1",
                  "prev": null
                },
                "saved_filters": [
                  {
                    "token": "svd_fltr_52a89bb6b1c84380",
                    "title": "White",
                    "cost_report_tokens": [
                      "rprt_fef8f7e70f993108"
                    ],
                    "filter": "(costs.provider = 'aws' AND costs.account_id = '74')",
                    "created_at": "2023-09-12T05:07:35Z",
                    "created_by": "usr_055cb925f37bfa75",
                    "workspace_token": "wrkspc_c3a582b964a67afd"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Filters"
        ],
        "operationId": "getSavedFilters"
      }
    },
    "/saved_filters/{saved_filter_token}": {
      "delete": {
        "description": "Delete a SavedFilter for CostReports.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "saved_filter_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SavedFilter"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Filters"
        ],
        "operationId": "deleteSavedFilter"
      },
      "put": {
        "description": "Update a SavedFilter for CostReports.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "saved_filter_token",
            "type": "string",
            "required": true
          },
          {
            "name": "updateSavedFilter",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateSavedFilter"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SavedFilter"
            },
            "examples": {
              "application/json": {
                "token": "svd_fltr_92c840f4c76c76b3",
                "title": "Updated Saved Filter",
                "cost_report_tokens": [],
                "filter": "(costs.provider = 'azure')",
                "created_at": "2023-09-12T05:07:35Z",
                "created_by": "usr_fcd9ff9f8aa6bd1f",
                "workspace_token": "wrkspc_49c6865bb1f6356f"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Filters"
        ],
        "operationId": "updateSavedFilter"
      },
      "get": {
        "description": "Return a specific SavedFilter.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "saved_filter_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SavedFilter"
            },
            "examples": {
              "application/json": {
                "token": "svd_fltr_7d37f2b3704d1c41",
                "title": "Black",
                "cost_report_tokens": [
                  "rprt_267f8c135c20bf99"
                ],
                "filter": "(costs.provider = 'aws' AND costs.account_id = '57')",
                "created_at": "2023-09-12T05:07:36Z",
                "created_by": "usr_86017037cec4a852",
                "workspace_token": "wrkspc_7020b8708f0e6556"
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Filters"
        ],
        "operationId": "getSavedFilter"
      }
    },
    "/cost_reports": {
      "post": {
        "description": "Create a CostReport.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createCostReport",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createCostReport"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CostReport"
            },
            "examples": {
              "application/json": {
                "token": "rprt_362b04093c087475",
                "title": "New Cost Report",
                "folder_token": "fldr_819fe3807f88ff90",
                "saved_filter_tokens": [
                  "svd_fltr_a50b002184902819"
                ],
                "business_metric_tokens_with_metadata": [
                  {
                    "business_metric_token": "bsnss_mtrc_bc0689f1b54094b1",
                    "unit_scale": "per_thousand"
                  }
                ],
                "filter": "costs.provider = 'aws' AND costs.service = 'Amazon Simple Storage Service'",
                "groupings": "provider,service",
                "settings": {
                  "include_credits": false,
                  "include_refunds": false,
                  "include_discounts": true,
                  "include_tax": true,
                  "amortize": true,
                  "unallocated": false
                },
                "created_at": "2024-03-19T15:22:51Z",
                "workspace_token": "wrkspc_d50edff4c3ae23b2"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Costs"
        ],
        "operationId": "createCostReport"
      },
      "get": {
        "description": "Return all CostReports.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CostReports"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/cost_reports",
                  "first": "https://api.vantage.com/v2/cost_reports?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/cost_reports?page=1",
                  "prev": null
                },
                "cost_reports": [
                  {
                    "token": "rprt_e97ef22efaa6da12",
                    "title": "Untitled",
                    "folder_token": null,
                    "saved_filter_tokens": [
                      "svd_fltr_cc4a422cf86f9e26"
                    ],
                    "business_metric_tokens_with_metadata": [],
                    "filter": null,
                    "groupings": "provider,service",
                    "settings": {
                      "include_credits": false,
                      "include_refunds": false,
                      "include_discounts": true,
                      "include_tax": true,
                      "amortize": true,
                      "unallocated": false
                    },
                    "created_at": "2024-03-19T15:22:54Z",
                    "workspace_token": "wrkspc_3dc89ff43657f255"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Costs"
        ],
        "operationId": "getCostReports"
      }
    },
    "/cost_reports/{cost_report_token}": {
      "delete": {
        "description": "Delete a CostReport.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cost_report_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CostReport"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Costs"
        ],
        "operationId": "deleteCostReport"
      },
      "put": {
        "description": "Update a CostReport.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cost_report_token",
            "type": "string",
            "required": true
          },
          {
            "name": "updateCostReport",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateCostReport"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CostReport"
            },
            "examples": {
              "application/json": {
                "token": "rprt_77fec1422cfc25df",
                "title": "Updated Cost Report",
                "folder_token": "fldr_54b65b6cb9af21d0",
                "saved_filter_tokens": [
                  "svd_fltr_33736ce7e17d7803"
                ],
                "business_metric_tokens_with_metadata": [
                  {
                    "business_metric_token": "bsnss_mtrc_58c57f66d35a1ad7",
                    "unit_scale": "per_thousand"
                  }
                ],
                "filter": "costs.provider = 'azure'",
                "groupings": "service,account_id",
                "settings": {
                  "include_credits": false,
                  "include_refunds": false,
                  "include_discounts": true,
                  "include_tax": true,
                  "amortize": true,
                  "unallocated": false
                },
                "created_at": "2024-03-19T15:22:52Z",
                "workspace_token": "wrkspc_ca0b4a774e8fa57c"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Costs"
        ],
        "operationId": "updateCostReport"
      },
      "get": {
        "description": "Return a CostReport.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cost_report_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CostReport"
            },
            "examples": {
              "application/json": {
                "token": "rprt_16a4d01d67a50631",
                "title": "Segment Report",
                "folder_token": "fldr_fa3d9420651c11d7",
                "business_metric_tokens_with_metadata": [],
                "filter": null,
                "groupings": null,
                "settings": {
                  "include_credits": false,
                  "include_refunds": false,
                  "include_discounts": true,
                  "include_tax": true,
                  "amortize": true,
                  "unallocated": false
                },
                "created_at": "2024-03-19T15:22:54Z",
                "workspace_token": "wrkspc_6a917500aba6bca8"
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Costs"
        ],
        "operationId": "getCostReport"
      }
    },
    "/segments": {
      "post": {
        "description": "Create a Segment.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createSegment",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createSegment"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Segment"
            },
            "examples": {
              "application/json": {
                "token": "fltr_sgmt_1e47944f3821d5c3",
                "title": "New Segment",
                "parent_segment_token": "fltr_sgmt_ac17f90b94f8d00f",
                "description": "I'm a Segment.",
                "track_unallocated": false,
                "priority": 100,
                "filter": "(costs.provider = 'aws' AND costs.service = 'Amazon Simple Storage Service')",
                "created_at": "2024-02-02T01:02:08Z",
                "workspace_token": "wrkspc_d5d4814d5e42522c"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Segments"
        ],
        "operationId": "createSegment"
      },
      "get": {
        "description": "Return all Segments.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Segments"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/segments",
                  "first": "https://api.vantage.com/v2/segments?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/segments?page=1",
                  "prev": null
                },
                "segments": [
                  {
                    "token": "fltr_sgmt_0db07f2863f779cc",
                    "title": "installation",
                    "parent_segment_token": null,
                    "description": "Multi-lateral attitude-oriented process improvement",
                    "track_unallocated": false,
                    "report_settings": {
                      "include_credits": false,
                      "include_refunds": false,
                      "include_discounts": true,
                      "include_tax": true,
                      "amortize": true
                    },
                    "priority": 100,
                    "filter": "(costs.provider = 'aws')",
                    "created_at": "2024-02-02T01:02:07Z",
                    "workspace_token": "wrkspc_7036b752bf43a658"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Segments"
        ],
        "operationId": "getSegments"
      }
    },
    "/segments/{segment_token}": {
      "delete": {
        "description": "Delete a Segment.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "segment_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Segment"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Segments"
        ],
        "operationId": "deleteSegment"
      },
      "put": {
        "description": "Update a Segment.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "segment_token",
            "type": "string",
            "required": true
          },
          {
            "name": "updateSegment",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateSegment"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Segment"
            },
            "examples": {
              "application/json": {
                "token": "fltr_sgmt_99969c652d4df258",
                "title": "Updated Segment",
                "parent_segment_token": "fltr_sgmt_d8d4da2ef1751c13",
                "description": "Ameliorated disintermediate challenge",
                "track_unallocated": false,
                "priority": 42,
                "filter": "(costs.provider = 'azure')",
                "created_at": "2024-02-02T01:05:01Z",
                "workspace_token": "wrkspc_c144e5f763a5b05e"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Segments"
        ],
        "operationId": "updateSegment"
      },
      "get": {
        "description": "Return a Segment.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "segment_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Segment"
            },
            "examples": {
              "application/json": {
                "token": "fltr_sgmt_d1de6bdb3133d61e",
                "title": "benchmark",
                "parent_segment_token": null,
                "description": "Synergized bandwidth-monitored help-desk",
                "track_unallocated": false,
                "report_settings": {
                  "include_credits": false,
                  "include_refunds": false,
                  "include_discounts": true,
                  "include_tax": true,
                  "amortize": true
                },
                "priority": 100,
                "filter": "(costs.provider = 'aws')",
                "created_at": "2024-02-02T01:02:09Z",
                "workspace_token": "wrkspc_5c9b1211804105ff"
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Segments"
        ],
        "operationId": "getSegment"
      }
    },
    "/dashboards": {
      "post": {
        "description": "Create a Dashboard.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createDashboard",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createDashboard"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Dashboard"
            },
            "examples": {
              "application/json": {
                "token": "dshbrd_40d2a85e60872ee4",
                "title": "New Dashboard",
                "widget_tokens": [
                  "rprt_d1262358f4d2de03"
                ],
                "saved_filter_tokens": [
                  "svd_fltr_03bae07fb40ef1e0"
                ],
                "date_bin": "week",
                "date_interval": "this_month",
                "start_date": "2023-08-01",
                "end_date": "2023-08-31",
                "created_at": "2023-08-15T00:00:00Z",
                "updated_at": "2023-08-15T00:00:00Z",
                "workspace_token": "wrkspc_7c586d05929f60b4"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Dashboards",
          "Costs"
        ],
        "operationId": "createDashboard"
      },
      "get": {
        "description": "Return all Dashboards.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Dashboards"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/dashboards",
                  "first": "https://api.vantage.com/v2/dashboards?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/dashboards?page=1",
                  "prev": null
                },
                "dashboards": [
                  {
                    "token": "dshbrd_0e00316c1b6ccdf5",
                    "title": "O Jerusalem!",
                    "widget_tokens": [
                      "rprt_63e2ca172354d16a"
                    ],
                    "saved_filter_tokens": [
                      "svd_fltr_447e67636b3c789a"
                    ],
                    "date_bin": null,
                    "date_interval": null,
                    "start_date": null,
                    "end_date": null,
                    "created_at": "2024-03-04T18:49:33Z",
                    "updated_at": "2024-03-04T18:49:33Z",
                    "workspace_token": "wrkspc_d42986a4825b18c7"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Dashboards",
          "Costs"
        ],
        "operationId": "getDashboards"
      }
    },
    "/dashboards/{dashboard_token}": {
      "delete": {
        "description": "Delete a Dashboard.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dashboard_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Dashboard"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Dashboards",
          "Costs"
        ],
        "operationId": "deleteDashboard"
      },
      "put": {
        "description": "Update a Dashboard.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dashboard_token",
            "type": "string",
            "required": true
          },
          {
            "name": "updateDashboard",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateDashboard"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Dashboard"
            },
            "examples": {
              "application/json": {
                "token": "dshbrd_43f0df22a2b28fc1",
                "title": "Updated Dashboard",
                "widget_tokens": [
                  "rprt_1f78a31ae74c183f"
                ],
                "saved_filter_tokens": [
                  "svd_fltr_c90a915a9b8c4128"
                ],
                "date_bin": "week",
                "date_interval": "this_month",
                "start_date": "2023-08-01",
                "end_date": "2023-08-31",
                "created_at": "2024-03-04T18:49:32Z",
                "updated_at": "2023-08-15T00:00:00Z",
                "workspace_token": "wrkspc_1f7d72cc9302b876"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Dashboards",
          "Costs"
        ],
        "operationId": "updateDashboard"
      },
      "get": {
        "description": "Return a specific Dashboard.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dashboard_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Dashboard"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/dashboards",
                  "first": "https://api.vantage.com/v2/dashboards?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/dashboards?page=1",
                  "prev": null
                },
                "dashboards": [
                  {
                    "token": "dshbrd_77736ea6e502a481",
                    "title": "The Road Less Traveled",
                    "widget_tokens": [
                      "rprt_7d955d7fbe334706"
                    ],
                    "saved_filter_tokens": [
                      "svd_fltr_cd8f90c99b33dfa6"
                    ],
                    "date_bin": null,
                    "date_interval": null,
                    "start_date": null,
                    "end_date": null,
                    "created_at": "2024-03-04T18:49:33Z",
                    "updated_at": "2024-03-04T18:49:33Z",
                    "workspace_token": "wrkspc_863089db412905d9"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Dashboards",
          "Costs"
        ],
        "operationId": "getDashboard"
      }
    },
    "/costs": {
      "get": {
        "description": "Return all Costs for a CostReport.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cost_report_token",
            "description": "The CostReport token.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "First date you would like to filter costs from. ISO 8601 formatted.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Last date you would like to filter costs to. ISO 8601 formatted.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "groupings",
            "description": "Group the results by specific field(s). Defaults to provider, service, account_id. Valid groupings: account_id, billing_account_id, charge_type, cost_category, cost_subcategory, provider, region, resource_id, service, tagged, tag:<tag_value>. If providing multiple groupings, join as comma separated values: groupings=provider,service,region",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "required": false
          },
          {
            "in": "query",
            "name": "order",
            "description": "Whether to order costs by date in an ascending or descending manner.",
            "type": "string",
            "default": "desc",
            "enum": [
              "asc",
              "desc"
            ],
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Costs"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/costs?cost_report_token=rprt_ea7dbb4f5783d677",
                  "first": "https://api.vantage.com/v2/costs?cost_report_token=rprt_ea7dbb4f5783d677&page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/costs?cost_report_token=rprt_ea7dbb4f5783d677&page=1",
                  "prev": null
                },
                "total_cost": {
                  "amount": "500.0",
                  "currency": "USD"
                },
                "costs": [
                  {
                    "accrued_at": "2023-06-05",
                    "amount": "100.0",
                    "currency": "USD",
                    "provider": "aws",
                    "account_id": "mock_56789",
                    "service": "AmazonSNS"
                  },
                  {
                    "accrued_at": "2023-06-04",
                    "amount": "100.0",
                    "currency": "USD",
                    "provider": "aws",
                    "account_id": "mock_56789",
                    "service": "AmazonSNS"
                  },
                  {
                    "accrued_at": "2023-06-03",
                    "amount": "100.0",
                    "currency": "USD",
                    "provider": "aws",
                    "account_id": "mock_56789",
                    "service": "AmazonSNS"
                  },
                  {
                    "accrued_at": "2023-06-02",
                    "amount": "100.0",
                    "currency": "USD",
                    "provider": "aws",
                    "account_id": "mock_56789",
                    "service": "AmazonSNS"
                  },
                  {
                    "accrued_at": "2023-06-01",
                    "amount": "100.0",
                    "currency": "USD",
                    "provider": "aws",
                    "account_id": "mock_56789",
                    "service": "AmazonSNS"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "402": {
            "description": "PaymentRequired",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Costs"
        ],
        "operationId": "getCosts"
      }
    },
    "/teams": {
      "post": {
        "description": "Create a new Team.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createTeam",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createTeam"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Team"
            },
            "examples": {
              "application/json": {
                "token": "team_8467157535a30221",
                "name": "New Team",
                "description": "New Team Description",
                "workspace_tokens": [
                  "wrkspc_52b6e5e663b4cde1"
                ],
                "user_tokens": [
                  "usr_a00e614b5843c234"
                ]
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "operationId": "createTeam"
      },
      "get": {
        "description": "Return all Teams that the current API token has access to.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Teams"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/teams",
                  "first": "https://api.vantage.com/v2/teams?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/teams?page=1",
                  "prev": null
                },
                "teams": [
                  {
                    "token": "team_2d4733920ec4385e",
                    "name": "New Mexico people",
                    "description": "Consequuntur ratione.",
                    "workspace_tokens": [
                      "wrkspc_08026aa5fb4c90f8"
                    ],
                    "user_tokens": [
                      "usr_c59398553e838116"
                    ]
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "operationId": "getTeams"
      }
    },
    "/teams/{team_token}": {
      "delete": {
        "description": "Delete a Team.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "team_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Team"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "operationId": "deleteTeam"
      },
      "put": {
        "description": "Update a Team.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "team_token",
            "type": "string",
            "required": true
          },
          {
            "name": "updateTeam",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateTeam"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Team"
            },
            "examples": {
              "application/json": {
                "token": "team_d617e73dcc6b57c5",
                "name": "Updated Team",
                "description": "Updated Team Description",
                "workspace_tokens": [
                  "wrkspc_efc4284a56772481"
                ],
                "user_tokens": [
                  "usr_d268561e520c7aac"
                ]
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "operationId": "updateTeam"
      },
      "get": {
        "description": "Return a specific Team.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "team_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Team"
            },
            "examples": {
              "application/json": {
                "token": "team_081e09bbb812d369",
                "name": "Missouri cats",
                "description": "Voluptas et.",
                "workspace_tokens": [
                  "wrkspc_ddc003a2f0171bf8"
                ],
                "user_tokens": [
                  "usr_7c309915e847cfc6"
                ]
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "operationId": "getTeam"
      }
    },
    "/access_grants": {
      "post": {
        "description": "Create an Access Grant.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createAccessGrant",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createAccessGrant"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AccessGrant"
            },
            "examples": {
              "application/json": {
                "token": "rsrc_accss_grnt_9f8aeb3cedda3831",
                "resource_token": "rprt_3b935d26cba36fb0",
                "access": "denied",
                "team_token": "team_26865e16e46028ae",
                "created_at": "2024-01-18T17:39:37Z",
                "created_by": "usr_2fc38883da3726b9"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "406": {
            "description": "NotAcceptable",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "AccessGrants"
        ],
        "operationId": "createAccessGrant"
      },
      "get": {
        "description": "Return all Access Grants that the current API token has access to.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AccessGrants"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/access_grants",
                  "first": "https://api.vantage.com/v2/access_grants?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/access_grants?page=1",
                  "prev": null
                },
                "access_grants": [
                  {
                    "token": "rsrc_accss_grnt_c40f15062b6d5c37",
                    "resource_token": "rprt_5a269d316483b01c",
                    "access": "denied",
                    "team_token": "team_fd5c524ba104712b",
                    "created_at": "2024-01-18T17:39:37Z",
                    "created_by": "usr_eb8ce6bdc1fa31d5"
                  },
                  {
                    "token": "rsrc_accss_grnt_9723e984e93d8907",
                    "resource_token": "dshbrd_a08561ec24875ac9",
                    "access": "allowed",
                    "team_token": "team_fd5c524ba104712b",
                    "created_at": "2024-01-18T17:39:37Z",
                    "created_by": "usr_eb8ce6bdc1fa31d5"
                  },
                  {
                    "token": "rsrc_accss_grnt_eee5c4fd777d4dc8",
                    "resource_token": "fldr_9d4ad1a769131c58",
                    "access": "allowed",
                    "team_token": "team_fd5c524ba104712b",
                    "created_at": "2024-01-18T17:39:38Z",
                    "created_by": "usr_eb8ce6bdc1fa31d5"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "AccessGrants"
        ],
        "operationId": "getAccessGrants"
      }
    },
    "/access_grants/{access_grant_token}": {
      "delete": {
        "description": "Delete an Access Grant.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "access_grant_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AccessGrant"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "AccessGrants"
        ],
        "operationId": "deleteAccessGrant"
      },
      "put": {
        "description": "Update an AccessGrant.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "access_grant_token",
            "type": "string",
            "required": true
          },
          {
            "name": "updateAccessGrant",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateAccessGrant"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AccessGrant"
            },
            "examples": {
              "application/json": {
                "token": "rsrc_accss_grnt_eea11f0d35318b0d",
                "resource_token": "rprt_e84d7760ab2dd7dc",
                "access": "allowed",
                "team_token": "team_25fc4aa890869602",
                "created_at": "2024-01-18T17:39:36Z",
                "created_by": "usr_57ed2fa2a7b30166"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "AccessGrants"
        ],
        "operationId": "updateAccessGrant"
      },
      "get": {
        "description": "Return a specific Access Grant.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "access_grant_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AccessGrant"
            },
            "examples": {
              "application/json": {
                "token": "rsrc_accss_grnt_07ed83a5069b91c4",
                "resource_token": "rprt_b8df14aa8a4ad5c7",
                "access": "denied",
                "team_token": "team_14bd13a8bccb8406",
                "created_at": "2024-01-18T17:39:36Z",
                "created_by": "usr_0e1cb254743b26cb"
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "AccessGrants"
        ],
        "operationId": "getAccessGrant"
      }
    },
    "/report_notifications": {
      "post": {
        "description": "Create a ReportNotification.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createReportNotification",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createReportNotification"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReportNotification"
            },
            "examples": {
              "application/json": {
                "token": "rprt_ntfctn_8ce31b43a149cd2e",
                "title": "New Report Notification",
                "cost_report_token": "rprt_933010600676b02f",
                "user_tokens": [
                  "usr_45e7d17e9f402226"
                ],
                "frequency": "daily",
                "change": "percentage"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Notifications"
        ],
        "operationId": "createReportNotification"
      },
      "get": {
        "description": "Return all ReportNotifications.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReportNotifications"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/report_notifications",
                  "first": "https://api.vantage.com/v2/report_notifications?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/report_notifications?page=1",
                  "prev": null
                },
                "report_notifications": [
                  {
                    "token": "rprt_ntfctn_7c09ca27d07d8d1e",
                    "title": "Test Notification",
                    "cost_report_token": "rprt_ba0a5a5201390d72",
                    "user_tokens": [
                      "usr_27edb13f3beac3cb"
                    ],
                    "frequency": "weekly",
                    "change": "percentage"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Notifications"
        ],
        "operationId": "getReportNotifications"
      }
    },
    "/report_notifications/{report_notification_token}": {
      "delete": {
        "description": "Delete a ReportNotification.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "report_notification_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReportNotification"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Notifications"
        ],
        "operationId": "deleteReportNotification"
      },
      "put": {
        "description": "Update a ReportNotification.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "report_notification_token",
            "type": "string",
            "required": true
          },
          {
            "name": "updateReportNotification",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateReportNotification"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReportNotification"
            },
            "examples": {
              "application/json": {
                "token": "rprt_ntfctn_b36b208a90ee87f6",
                "title": "Updated Report Notification",
                "cost_report_token": "rprt_07b88c04aa6bed8c",
                "user_tokens": [
                  "usr_35ed19fadcfed8c9"
                ],
                "frequency": "weekly",
                "change": "dollars"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Notifications"
        ],
        "operationId": "updateReportNotification"
      },
      "get": {
        "description": "Return a ReportNotification.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "report_notification_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReportNotification"
            },
            "examples": {
              "application/json": {
                "token": "rprt_ntfctn_21b4287a212406b1",
                "title": "Test Notification",
                "cost_report_token": "rprt_d084c84455edc606",
                "user_tokens": [
                  "usr_56d53f802edba3e6"
                ],
                "frequency": "weekly",
                "change": "percentage"
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Notifications"
        ],
        "operationId": "getReportNotification"
      }
    },
    "/users": {
      "get": {
        "description": "Return all Users that the current API token has access to.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Users"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/users",
                  "first": "https://api.vantage.com/v2/users?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/users?page=1",
                  "prev": null
                },
                "users": [
                  {
                    "token": "usr_3f30f56e7773e72b",
                    "name": "Pres. Sudie Kuvalis",
                    "email": "kuvalis.sudie.pres@mckenzie-herman.net",
                    "role": "Owner"
                  },
                  {
                    "token": "usr_dc69dfedf704d4ea",
                    "name": "Carisa Tromp",
                    "email": "carisa.tromp@morissette.co",
                    "role": "Viewer"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "operationId": "getUsers"
      }
    },
    "/users/{user_token}": {
      "get": {
        "description": "Return a specific User.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            },
            "examples": {
              "application/json": {
                "token": "usr_92c7273af4de2fb4",
                "name": "Miss Shirlene Weissnat",
                "email": "miss.shirlene.weissnat@west-howe.net",
                "role": "Owner"
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "operationId": "getUser"
      }
    },
    "/business_metrics": {
      "post": {
        "description": "Create a new Business Metric.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createBusinessMetric",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createBusinessMetric"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BusinessMetric"
            },
            "examples": {
              "application/json": {
                "token": "bsnss_mtrc_5cb1416ffdb71e45",
                "title": "New Biz Metric",
                "created_by_token": "usr_c7ed8af27690461d",
                "cost_report_tokens_with_metadata": [
                  {
                    "cost_report_token": "rprt_d9456b5218e47888",
                    "unit_scale": "per_thousand"
                  }
                ],
                "values": [
                  {
                    "date": "2024-01-03T00:00:00Z",
                    "amount": "300.0"
                  },
                  {
                    "date": "2024-01-02T00:00:00Z",
                    "amount": "200.0"
                  },
                  {
                    "date": "2024-01-01T00:00:00Z",
                    "amount": "100.0"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "BusinessMetrics"
        ],
        "operationId": "createBusinessMetric"
      },
      "get": {
        "description": "Return all Business Metrics that the current API token has access to.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BusinessMetrics"
            },
            "examples": {
              "application/json": {
                "business_metrics": [
                  {
                    "token": "bsnss_mtrc_59f5539480219769",
                    "title": "Biz Metric",
                    "created_by_token": null,
                    "cost_report_tokens_with_metadata": [],
                    "values": []
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "BusinessMetrics"
        ],
        "operationId": "getBusinessMetrics"
      }
    },
    "/business_metrics/{business_metric_token}": {
      "delete": {
        "description": "Deletes an existing BusinessMetric.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "business_metric_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BusinessMetric"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "BusinessMetrics"
        ],
        "operationId": "deleteBusinessMetric"
      },
      "put": {
        "description": "Updates an existing BusinessMetric.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "business_metric_token",
            "type": "string",
            "required": true
          },
          {
            "name": "updateBusinessMetric",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateBusinessMetric"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BusinessMetric"
            },
            "examples": {
              "application/json": {
                "token": "bsnss_mtrc_892d49c3863e90a6",
                "title": "New Title",
                "created_by_token": null,
                "cost_report_tokens_with_metadata": [
                  {
                    "cost_report_token": "rprt_8914e211c6bad755",
                    "unit_scale": "per_thousand"
                  }
                ],
                "values": [
                  {
                    "date": "2024-01-03T00:00:00Z",
                    "amount": "600.0"
                  },
                  {
                    "date": "2024-01-02T00:00:00Z",
                    "amount": "500.0"
                  },
                  {
                    "date": "2024-01-01T00:00:00Z",
                    "amount": "400.0"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "BusinessMetrics"
        ],
        "operationId": "updateBusinessMetric"
      },
      "get": {
        "description": "Return a specific Business Metric.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "business_metric_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BusinessMetric"
            },
            "examples": {
              "application/json": {
                "token": "bsnss_mtrc_fef64b1f7e56165f",
                "title": "Biz Metric",
                "created_by_token": null,
                "cost_report_tokens_with_metadata": [],
                "values": []
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "BusinessMetrics"
        ],
        "operationId": "getBusinessMetric"
      }
    },
    "/business_metrics/{business_metric_token}/values.csv": {
      "put": {
        "description": "Updates the values for an existing BusinessMetric from a CSV file.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "csv",
            "description": "CSV file containing BusinessMetric dates and amounts",
            "type": "file",
            "required": true
          },
          {
            "in": "path",
            "name": "business_metric_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BusinessMetric"
            },
            "examples": {
              "application/json": {
                "token": "bsnss_mtrc_6bc29b57fecf9ab5",
                "title": "Biz Metric",
                "created_by_token": null,
                "cost_report_tokens": [],
                "values": [
                  {
                    "date": "2024-01-03T00:00:00Z",
                    "amount": "300.3"
                  },
                  {
                    "date": "2024-01-02T00:00:00Z",
                    "amount": "200.2"
                  },
                  {
                    "date": "2024-01-01T00:00:00Z",
                    "amount": "100.1"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "BusinessMetrics"
        ],
        "operationId": "updateBusinessMetricValuesCSV"
      }
    },
    "/products": {
      "get": {
        "description": "Return available Products for a Service. For example, with a Provider of AWS and a Service of EC2, Products will be a list of all EC2 Instances. By default, this endpoint returns all Products across all Services and Providers but has optional query parameters for filtering listed below.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "provider_id",
            "description": "Query by Provider to list all Products across all Services for a Provider. e.g. aws",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "service_id",
            "description": "Query by Service to list all Products for a specific provider service. e.g. aws-ec2",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "name",
            "description": "Query by name of the Product to see a list of products which match that name. e.g. m5a.16xlarge",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Products"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v1/products",
                  "first": "https://api.vantage.com/v1/products?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v1/products?page=1",
                  "prev": null
                },
                "products": [
                  {
                    "id": "aws-ec2-m5d_16xlarge",
                    "category": "compute",
                    "name": "m5d.16xlarge",
                    "service_id": "aws-ec2",
                    "provider_id": "aws",
                    "details": {
                      "gpu": 0,
                      "name": "M5 General Purpose 16xlarge",
                      "vcpu": 64,
                      "memory": 256,
                      "clock_speed_ghz": 3.1,
                      "physical_processor_description": "Intel Xeon Platinum 8175 (Skylake)",
                      "network_performance_description": "20 Gigabit"
                    }
                  },
                  {
                    "id": "aws-ec2-c5a_8xlarge",
                    "category": "compute",
                    "name": "c5a.8xlarge",
                    "service_id": "aws-ec2",
                    "provider_id": "aws",
                    "details": {
                      "gpu": 0,
                      "name": "C5A 8xlarge",
                      "vcpu": 64,
                      "memory": 256
                    }
                  },
                  {
                    "id": "aws-ec2-c5a_4large",
                    "category": "compute",
                    "name": "c5a.4large",
                    "service_id": "aws-ec2",
                    "provider_id": "aws",
                    "details": {
                      "gpu": 0,
                      "name": "C5A 4large",
                      "vcpu": 64,
                      "memory": 4
                    }
                  },
                  {
                    "id": "aws-s3-standard",
                    "category": "object_storage",
                    "name": "standard",
                    "service_id": "aws-s3",
                    "provider_id": "aws",
                    "details": {}
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Prices"
        ],
        "operationId": "getProducts"
      }
    },
    "/products/{id}": {
      "get": {
        "description": "Return a product",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            },
            "examples": {
              "application/json": {
                "id": "aws-ec2-m5d_16xlarge",
                "category": "compute",
                "name": "m5d.16xlarge",
                "service_id": "aws-ec2",
                "provider_id": "aws",
                "details": {
                  "gpu": 0,
                  "name": "M5 General Purpose 16xlarge",
                  "vcpu": 64,
                  "memory": 256,
                  "clock_speed_ghz": 3.1,
                  "physical_processor_description": "Intel Xeon Platinum 8175 (Skylake)",
                  "network_performance_description": "20 Gigabit"
                }
              }
            }
          }
        },
        "tags": [
          "Prices"
        ],
        "operationId": "getProduct"
      }
    },
    "/products/{product_id}/prices": {
      "get": {
        "description": "Return available Prices across all Regions for a Product.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "product_id",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Prices"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v1/products/aws-ec2-m5d_16xlarge/prices",
                  "first": "https://api.vantage.com/v1/products/aws-ec2-m5d_16xlarge/prices?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v1/products/aws-ec2-m5d_16xlarge/prices?page=1",
                  "prev": null
                },
                "prices": [
                  {
                    "id": "aws-ec2-m5d_16xlarge-eu_central_1-on_demand-linux_enterprise",
                    "unit": "hour",
                    "region": "eu-central-1",
                    "rate_type": "compute",
                    "currency": "USD",
                    "amount": 27.328,
                    "details": {
                      "platform": "linux-enterprise",
                      "lifecycle": "on-demand"
                    }
                  },
                  {
                    "id": "aws-ec2-m5d_16xlarge-us_east_1-on_demand-linux_enterprise",
                    "unit": "hour",
                    "region": "us-east-1",
                    "rate_type": "compute",
                    "currency": "USD",
                    "amount": 3.616,
                    "details": {
                      "platform": "linux-enterprise",
                      "lifecycle": "on-demand"
                    }
                  },
                  {
                    "id": "aws-ec2-m5d_16xlarge-us_east_1-on_demand-rhel",
                    "unit": "hour",
                    "region": "us-east-1",
                    "rate_type": "compute",
                    "currency": "USD",
                    "amount": 3.746,
                    "details": {
                      "platform": "rhel",
                      "lifecycle": "on-demand"
                    }
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Prices"
        ],
        "operationId": "getPrices"
      }
    },
    "/products/{product_id}/prices/{id}": {
      "get": {
        "description": "Returns a price",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "product_id",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Price"
            },
            "examples": {
              "application/json": {
                "id": "aws-ec2-m5d_16xlarge-eu_central_1-on_demand-linux_enterprise",
                "unit": "hour",
                "region": "eu-central-1",
                "rate_type": "compute",
                "currency": "USD",
                "amount": 27.328,
                "details": {
                  "platform": "linux-enterprise",
                  "lifecycle": "on-demand"
                }
              }
            }
          }
        },
        "tags": [
          "Prices"
        ],
        "operationId": "getPrice"
      }
    },
    "/resource_reports": {
      "get": {
        "description": "Return all ResourceReports.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The number of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ResourceReports"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/provider_resource_reports",
                  "first": "https://api.vantage.com/v2/provider_resource_reports?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/provider_resource_reports?page=1",
                  "prev": null
                },
                "provider_resource_reports": [
                  {
                    "token": "prvdr_rsrc_rprt_c013a8c9280ed485",
                    "title": "Resource Report 098e130a",
                    "default": false,
                    "created_at": "2024-03-19T22:09:43Z",
                    "workspace_token": "wrkspc_5a15339e6128797f",
                    "report_token": null,
                    "user_token": null,
                    "recommendation_service": null,
                    "recommendation_category": null
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "ResourceReports"
        ],
        "operationId": "getResourceReports"
      }
    },
    "/resource_reports/{resource_report_token}": {
      "delete": {
        "description": "Delete a ResourceReport.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "resource_report_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ResourceReport"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "ResourceReports"
        ],
        "operationId": "deleteResourceReport"
      },
      "get": {
        "description": "Return a ResourceReport.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "resource_report_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ResourceReport"
            },
            "examples": {
              "application/json": {
                "token": "prvdr_rsrc_rprt_b4b9884d0bb2e121",
                "title": "Resource Report 46d7371d",
                "default": false,
                "created_at": "2024-03-19T22:09:43Z",
                "workspace_token": "wrkspc_3b72a68131df0d33",
                "report_token": null,
                "user_token": null,
                "recommendation_service": null,
                "recommendation_category": null
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "ResourceReports"
        ],
        "operationId": "getResourceReport"
      }
    },
    "/financial_commitment_reports": {
      "get": {
        "description": "Return all FinancialCommitmentReports.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FinancialCommitmentReports"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/financial_commitment_reports",
                  "first": "https://api.vantage.com/v2/financial_commitment_reports?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/financial_commitment_reports?page=1",
                  "prev": null
                },
                "financial_commitment_reports": [
                  {
                    "token": "fncl_cmnt_rprt_8856c4e96c5a7a0e",
                    "title": "All Financial Commitments",
                    "default": false,
                    "created_at": "2024-03-28T18:26:26Z",
                    "workspace_token": "wrkspc_1ca9ae316e86906f",
                    "user_token": null,
                    "start_date": "2023-12-01",
                    "end_date": "2024-03-26",
                    "date_interval": "last_3_months",
                    "date_bucket": "month",
                    "groupings": "cost_type",
                    "on_demand_costs_scope": "discountable"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "FinancialCommitmentReports"
        ],
        "operationId": "getFinancialCommitmentReports"
      }
    },
    "/financial_commitment_reports/{financial_commitment_report_token}": {
      "delete": {
        "description": "Delete a FinancialCommitmentReport.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "financial_commitment_report_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FinancialCommitmentReport"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "FinancialCommitmentReports"
        ],
        "operationId": "deleteFinancialCommitmentReport"
      },
      "get": {
        "description": "Return a FinancialCommitmentReport.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "financial_commitment_report_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FinancialCommitmentReport"
            },
            "examples": {
              "application/json": {
                "token": "fncl_cmnt_rprt_674cf1d6ef5f55e5",
                "title": "All Financial Commitments",
                "default": false,
                "created_at": "2024-03-28T18:26:26Z",
                "workspace_token": "wrkspc_075ac35ab0dc1b4a",
                "user_token": null,
                "start_date": "2023-12-01",
                "end_date": "2024-03-26",
                "date_interval": "last_3_months",
                "date_bucket": "month",
                "groupings": "cost_type",
                "on_demand_costs_scope": "discountable"
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "FinancialCommitmentReports"
        ],
        "operationId": "getFinancialCommitmentReport"
      }
    },
    "/kubernetes_efficiency_reports": {
      "get": {
        "description": "Return all KubernetesEfficiencyReports.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/KubernetesEfficiencyReports"
            },
            "examples": {}
          }
        },
        "tags": [
          "KubernetesEfficiencyReports"
        ],
        "operationId": "getKubernetesEfficiencyReports"
      }
    },
    "/kubernetes_efficiency_reports/{kubernetes_efficiency_report_token}": {
      "delete": {
        "description": "Delete a KubernetesEfficiencyReport.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "kubernetes_efficiency_report_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/KubernetesEfficiencyReport"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "KubernetesEfficiencyReports"
        ],
        "operationId": "deleteKubernetesEfficiencyReport"
      },
      "get": {
        "description": "Return a KubernetesEfficiencyReport.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "kubernetes_efficiency_report_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/KubernetesEfficiencyReport"
            },
            "examples": {}
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "KubernetesEfficiencyReports"
        ],
        "operationId": "getKubernetesEfficiencyReport"
      }
    },
    "/anomaly_alerts": {
      "get": {
        "description": "Return all Anomaly Alerts that the current API token has access to.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AnomalyAlerts"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/anomaly_alerts",
                  "first": "https://api.vantage.com/v2/anomaly_alerts?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/anomaly_alerts?page=1",
                  "prev": null
                },
                "anomaly_alerts": [
                  {
                    "token": "anmly_alrt_e1fb8184ecdf129d",
                    "created_at": "2024-04-01T17:14:45Z",
                    "alerted_at": "2024-04-01T17:14:45Z",
                    "category": "Compute",
                    "service": "AmazonEKS",
                    "provider": "aws",
                    "amount": "100.0",
                    "previous_amount": "25.0",
                    "seven_day_average": "10.0",
                    "status": "active",
                    "feedback": null,
                    "cost_report_token": "rprt_3d541a4c5160711f"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "AnomalyAlerts"
        ],
        "operationId": "getAnomalyAlerts"
      }
    },
    "/anomaly_alerts/{anomaly_alert_token}": {
      "put": {
        "description": "Update an AnomalyAlert.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "anomaly_alert_token",
            "type": "string",
            "required": true
          },
          {
            "name": "updateAnomalyAlert",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateAnomalyAlert"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AnomalyAlert"
            },
            "examples": {
              "application/json": {
                "token": "anmly_alrt_51a2ce4137305fc6",
                "created_at": "2024-04-01T17:14:46Z",
                "alerted_at": "2024-04-01T17:14:46Z",
                "category": "Compute",
                "service": "AmazonEKS",
                "provider": "aws",
                "amount": "100.0",
                "previous_amount": "25.0",
                "seven_day_average": "10.0",
                "status": "archived",
                "feedback": "this stinks",
                "cost_report_token": "rprt_57912c584fdf88f4"
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "AnomalyAlerts"
        ],
        "operationId": "updateAnomalyAlert"
      },
      "get": {
        "description": "Return an AnomalyAlert that the current API token has access to.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "anomaly_alert_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AnomalyAlert"
            },
            "examples": {
              "application/json": {
                "token": "anmly_alrt_6056b98225236ece",
                "created_at": "2024-04-01T17:14:45Z",
                "alerted_at": "2024-04-01T17:14:45Z",
                "category": "Compute",
                "service": "AmazonEKS",
                "provider": "aws",
                "amount": "100.0",
                "previous_amount": "25.0",
                "seven_day_average": "10.0",
                "status": "active",
                "feedback": null,
                "cost_report_token": "rprt_bf0a30084fbf52c2"
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "AnomalyAlerts"
        ],
        "operationId": "getAnomalyAlert"
      }
    },
    "/virtual_tag_configs": {
      "post": {
        "description": "Create a new VirtualTagConfig.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createVirtualTagConfig",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createVirtualTagConfig"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualTagConfig"
            },
            "examples": {
              "application/json": {
                "token": "vtag_f4a84302f614d658",
                "created_by_token": "usr_b594fc347b8216fc",
                "key": "Expense Code",
                "overridable": false,
                "backfill_until": "2024-04-01",
                "values": [
                  {
                    "name": "EXPC-1234",
                    "filter": "(costs.provider = 'aws' AND costs.service = 'Amazon Elastic Compute Cloud') AND (costs.provider = 'aws' AND costs.account_id IN ('1234', '5678'))"
                  },
                  {
                    "name": "EXPC-9876",
                    "filter": "(costs.provider = 'aws' AND costs.account_id IN ('1234', '5678')) OR (costs.provider = 'gcp' AND costs.service = 'Google Compute Engine')"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "VirtualTags"
        ],
        "operationId": "createVirtualTagConfig"
      },
      "get": {
        "description": "Return all VirtualTagConfigs that the current API token has access to.",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualTagConfigs"
            },
            "examples": {
              "application/json": {
                "virtual_tag_configs": [
                  {
                    "token": "vtag_8ec959d189f5e069",
                    "created_by_token": "usr_95037e6816d8274c",
                    "key": "Product Team",
                    "overridable": false,
                    "backfill_until": "2024-04-01",
                    "values": [
                      {
                        "name": "Growth",
                        "filter": "(costs.provider = 'aws' AND costs.service = 'Amazon Elastic Compute Cloud') AND (costs.provider = 'aws' AND costs.account_id IN ('1234', '5678'))"
                      },
                      {
                        "name": "API",
                        "filter": "(costs.provider = 'aws' AND costs.account_id IN ('1234', '5678')) OR (costs.provider = 'gcp' AND costs.service = 'Google Compute Engine')"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "VirtualTags"
        ],
        "operationId": "getVirtualTagConfigs"
      }
    },
    "/virtual_tag_configs/{virtual_tag_config_token}": {
      "delete": {
        "description": "Deletes an existing VirtualTagConfig.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtual_tag_config_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualTagConfig"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "VirtualTags"
        ],
        "operationId": "deleteVirtualTagConfig"
      },
      "put": {
        "description": "Updates an existing VirtualTagConfig.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtual_tag_config_token",
            "type": "string",
            "required": true
          },
          {
            "name": "updateVirtualTagConfig",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateVirtualTagConfig"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualTagConfig"
            },
            "examples": {
              "application/json": {
                "token": "vtag_a479efbaec5eb18a",
                "created_by_token": "usr_e490836e766d2f3b",
                "key": "team",
                "overridable": true,
                "backfill_until": "2024-04-01",
                "values": [
                  {
                    "name": "marketing",
                    "filter": "(costs.provider = 'aws' AND costs.service = 'Amazon Elastic Compute Cloud') AND (costs.provider = 'aws' AND costs.account_id IN ('1234', '5678'))"
                  },
                  {
                    "name": "third-party integrations",
                    "filter": "(costs.provider = 'aws' AND costs.account_id IN ('1234', '5678')) OR (costs.provider = 'gcp' AND costs.service = 'Google Compute Engine')"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "VirtualTags"
        ],
        "operationId": "updateVirtualTagConfig"
      },
      "get": {
        "description": "Return a specific VirtualTagConfig.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtual_tag_config_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualTagConfig"
            },
            "examples": {
              "application/json": {
                "token": "vtag_d8ec602528464b61",
                "created_by_token": "usr_64ff4a87ec8aeef2",
                "key": "Product Team",
                "overridable": false,
                "backfill_until": "2024-04-01",
                "values": [
                  {
                    "name": "Growth",
                    "filter": "(costs.provider = 'aws' AND costs.service = 'Amazon Elastic Compute Cloud') AND (costs.provider = 'aws' AND costs.account_id IN ('1234', '5678'))"
                  },
                  {
                    "name": "API",
                    "filter": "(costs.provider = 'aws' AND costs.account_id IN ('1234', '5678')) OR (costs.provider = 'gcp' AND costs.service = 'Google Compute Engine')"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "VirtualTags"
        ],
        "operationId": "getVirtualTagConfig"
      }
    },
    "/report_alerts": {
      "post": {
        "description": "Create a Report Alert for a Cost Report.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createReportAlert",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createReportAlert"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReportAlert"
            },
            "examples": {
              "application/json": {
                "token": "rprt_alrt_c95a119256122aac",
                "cost_report_token": "rprt_05c19b987b3d21f3",
                "created_at": "2024-04-03T15:04:18Z",
                "updated_at": "2024-04-03T15:04:18Z",
                "threshold": 1,
                "user_tokens": [
                  "usr_b6802dbbecce2326"
                ],
                "recipient_channels": [
                  "channel1",
                  "channel2"
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "ReportAlerts"
        ],
        "operationId": "createReportAlert"
      },
      "get": {
        "description": "Return all Report Alerts.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReportAlerts"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/report_alerts",
                  "first": "https://api.vantage.com/v2/report_alerts?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/report_alerts?page=1",
                  "prev": null
                },
                "report_alerts": [
                  {
                    "token": "rprt_alrt_496a92cad85de231",
                    "cost_report_token": "rprt_922688d462f896f7",
                    "created_at": "2024-04-03T15:04:18Z",
                    "updated_at": "2024-04-03T15:04:18Z",
                    "threshold": 10,
                    "user_tokens": [
                      "usr_add0269884a41ffb"
                    ],
                    "recipient_channels": []
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "ReportAlerts"
        ],
        "operationId": "getReportAlerts"
      }
    },
    "/report_alerts/{report_alert_token}": {
      "delete": {
        "description": "Delete a Report Alert.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "report_alert_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReportAlert"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "ReportAlerts"
        ],
        "operationId": "deleteReportAlert"
      },
      "put": {
        "description": "Update a Report Alert.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "report_alert_token",
            "type": "string",
            "required": true
          },
          {
            "name": "updateReportAlert",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateReportAlert"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReportAlert"
            },
            "examples": {
              "application/json": {
                "token": "rprt_alrt_aa997f8c99c77fe3",
                "cost_report_token": "rprt_c63b4d7acc8afcb1",
                "created_at": "2024-04-03T15:04:18Z",
                "updated_at": "2024-04-03T15:04:18Z",
                "threshold": 2,
                "user_tokens": [
                  "usr_75acbef5368ee7ca"
                ],
                "recipient_channels": [
                  "channel3",
                  "channel4"
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "ReportAlerts"
        ],
        "operationId": "updateReportAlert"
      },
      "get": {
        "description": "Return a Report Alert that the current API token has access to.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "report_alert_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReportAlert"
            },
            "examples": {
              "application/json": {
                "token": "rprt_alrt_c5f4140456b1ab56",
                "cost_report_token": "rprt_072f3d4a00f190a7",
                "created_at": "2024-04-03T15:04:18Z",
                "updated_at": "2024-04-03T15:04:18Z",
                "threshold": 10,
                "user_tokens": [
                  "usr_7aba2573ebd51b9e"
                ],
                "recipient_channels": []
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "ReportAlerts"
        ],
        "operationId": "getReportAlert"
      }
    },
    "/budgets": {
      "post": {
        "description": "Create a Budget.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createBudget",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createBudget"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Budget"
            },
            "examples": {
              "application/json": {
                "token": "bdgt_d89d3095c96b176d",
                "name": "New Budget Name",
                "workspace_token": "wrkspc_d8afd3ba2e890a43",
                "user_token": "usr_5ea63c4507f840e0",
                "cost_report_token": null,
                "created_at": "2024-04-04T14:39:40Z",
                "budget_alert_tokens": [],
                "periods": [
                  {
                    "start_at": "2024-01-01",
                    "end_at": "2024-01-31",
                    "amount": "100.0"
                  },
                  {
                    "start_at": "2024-02-01",
                    "end_at": "2024-02-29",
                    "amount": "200.0"
                  },
                  {
                    "start_at": "2024-03-01",
                    "end_at": "2024-04-30",
                    "amount": "300.0"
                  }
                ],
                "performance": [
                  {
                    "date": "April, 2024",
                    "amount": "300.0",
                    "actual": "0%"
                  },
                  {
                    "date": "March, 2024",
                    "amount": "300.0",
                    "actual": "0%"
                  },
                  {
                    "date": "February, 2024",
                    "amount": "200.0",
                    "actual": "0%"
                  },
                  {
                    "date": "January, 2024",
                    "amount": "100.0",
                    "actual": "0%"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Costs"
        ],
        "operationId": "createBudget"
      },
      "get": {
        "description": "Return all Budgets.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The number of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Budgets"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/budgets",
                  "first": "https://api.vantage.com/v2/budgets?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/budgets?page=1",
                  "prev": null
                },
                "budgets": [
                  {
                    "token": "bdgt_ec89c09eb58c7b7e",
                    "name": "Intuitive",
                    "workspace_token": "wrkspc_49e375735bef7e30",
                    "user_token": "usr_9a17f8477e65c9f5",
                    "cost_report_token": "rprt_200e51c399b25594",
                    "created_at": "2024-04-04T14:39:40Z",
                    "budget_alert_tokens": [],
                    "periods": [
                      {
                        "start_at": "2024-04-01",
                        "end_at": "2024-06-30",
                        "amount": "10000.0"
                      }
                    ],
                    "performance": [
                      {
                        "date": "April, 2024",
                        "amount": "10000.0",
                        "actual": "-100%"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Budgets"
        ],
        "operationId": "getBudgets"
      }
    },
    "/budgets/{budget_token}": {
      "delete": {
        "description": "Delete a Budget.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "budget_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Budget"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Budgets"
        ],
        "operationId": "deleteBudget"
      },
      "put": {
        "description": "Update a Budget.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "budget_token",
            "type": "string",
            "required": true
          },
          {
            "name": "updateBudget",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateBudget"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Budget"
            },
            "examples": {
              "application/json": {
                "token": "bdgt_8ab822e0b56c0349",
                "name": "New Name New Budget Who Dis",
                "workspace_token": "wrkspc_69af636d55841adf",
                "user_token": "usr_ebaf7cc710552dc2",
                "cost_report_token": "rprt_4b3d1a0345f8772c",
                "created_at": "2024-04-04T14:39:41Z",
                "budget_alert_tokens": [],
                "periods": [
                  {
                    "start_at": "2023-01-01",
                    "end_at": "2023-01-31",
                    "amount": "234.0"
                  },
                  {
                    "start_at": "2024-01-01",
                    "end_at": "2024-01-31",
                    "amount": "123.0"
                  },
                  {
                    "start_at": "2024-04-01",
                    "end_at": "2024-06-30",
                    "amount": "10000.0"
                  }
                ],
                "performance": [
                  {
                    "date": "April, 2024",
                    "amount": "10000.0",
                    "actual": "-100%"
                  },
                  null,
                  null,
                  {
                    "date": "January, 2024",
                    "amount": "123.0",
                    "actual": "-100%"
                  },
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  {
                    "date": "January, 2023",
                    "amount": "234.0",
                    "actual": "1224%"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Notifications"
        ],
        "operationId": "updateBudget"
      },
      "get": {
        "description": "Return a Budget.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "budget_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Budget"
            },
            "examples": {
              "application/json": {
                "token": "bdgt_981c4454e188a671",
                "name": "Face to face",
                "workspace_token": "wrkspc_ec3b9aa1615e79b7",
                "user_token": "usr_3ad183776db59a4a",
                "cost_report_token": "rprt_d60f14840ca3425a",
                "created_at": "2024-04-04T14:39:40Z",
                "budget_alert_tokens": [],
                "periods": [
                  {
                    "start_at": "2024-04-01",
                    "end_at": "2024-06-30",
                    "amount": "10000.0"
                  }
                ],
                "performance": [
                  {
                    "date": "April, 2024",
                    "amount": "10000.0",
                    "actual": "-100%"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Budgets"
        ],
        "operationId": "getBudget"
      }
    },
    "/ping": {
      "get": {
        "description": "This is a health check endpoint that can be used to determine Vantage API healthiness. It will return 200 if everything is running smoothly.",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "This is a health check endpoint that can be used to determine Vantage API healthiness. It will return 200 if everything is running smoothly."
          }
        },
        "tags": [
          "Ping"
        ],
        "operationId": "ping"
      }
    }
  },
  "definitions": {
    "Workspaces": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "workspaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Workspace"
          }
        }
      },
      "description": "Workspaces model"
    },
    "Workspace": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "example": "Acme Corp.",
          "description": "The name of the Workspace."
        }
      },
      "description": "Workspace model"
    },
    "Errors": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Errors model"
    },
    "createFolder": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the Folder."
        },
        "parent_folder_token": {
          "type": "string",
          "description": "The token of the parent Folder."
        },
        "saved_filter_tokens": {
          "type": "array",
          "description": "The tokens of the SavedFilters to apply to any Cost Report contained within the Folder.",
          "items": {
            "type": "string"
          }
        },
        "workspace_token": {
          "type": "string",
          "description": "The token of the Workspace to add the Folder to. Ignored if 'parent_folder_token' is set. Required if the API token is associated with multiple Workspaces."
        }
      },
      "required": [
        "title"
      ],
      "description": "Create a Folder for CostReports."
    },
    "Folder": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "title": {
          "type": "string",
          "example": "Platform Team Reports",
          "description": "The title of the Folder."
        },
        "parent_folder_token": {
          "type": "string",
          "description": "The token for the parent Folder, if any."
        },
        "saved_filter_tokens": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The tokens for the SavedFilters assigned to the Folder."
        },
        "created_at": {
          "type": "string",
          "example": "2023-08-04T00:00:00Z",
          "description": "The date and time, in UTC, the Folder was created. ISO 8601 Formatted."
        },
        "updated_at": {
          "type": "string",
          "example": "2023-08-04T00:00:00Z",
          "description": "The date and time, in UTC, the Folder was last updated at. ISO 8601 Formatted."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token for the Workspace the Folder is a part of."
        }
      },
      "description": "Folder model"
    },
    "Folders": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "folders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Folder"
          }
        }
      },
      "description": "Folders model"
    },
    "updateFolder": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the Folder."
        },
        "parent_folder_token": {
          "type": "string",
          "description": "The token of the parent Folder."
        },
        "saved_filter_tokens": {
          "type": "array",
          "description": "The tokens of the SavedFilters to apply to any Cost Report contained within the Folder.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Update a Folder for CostReports."
    },
    "createSavedFilter": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the SavedFilter."
        },
        "workspace_token": {
          "type": "string",
          "description": "The Workspace to associate the SavedFilter with. Required if the API token is associated with multiple Workspaces."
        },
        "filter": {
          "type": "string",
          "description": "The filter query language to apply to the SavedFilter, which subsequently gets applied to a CostReport. Additional documentation available at https://docs.vantage.sh/vql."
        }
      },
      "required": [
        "title"
      ],
      "description": "Create a SavedFilter for CostReports."
    },
    "SavedFilter": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "title": {
          "type": "string",
          "example": "Platform Team Reports",
          "description": "The title of the SavedFilter."
        },
        "cost_report_tokens": {
          "type": "array",
          "items": {
            "type": "string",
            "example": [
              "rprt_abcd1234",
              "rprt_efgh5678"
            ]
          },
          "description": "The tokens for any CostReports the SavedFilter is applied to."
        },
        "filter": {
          "type": "string",
          "example": "costs.provider = 'azure'",
          "description": "The SavedFilter's filter, applied to any relevant CostReports. Additional documentation available at https://docs.vantage.sh/vql."
        },
        "created_at": {
          "type": "string",
          "example": "2023-08-04T00:00:00Z",
          "description": "The date and time, in UTC, the report was created. ISO 8601 Formatted."
        },
        "created_by": {
          "type": "string",
          "description": "The User who created the SavedFilter."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token for the Workspace the SavedFilter is a part of."
        }
      },
      "description": "SavedFilter model"
    },
    "SavedFilters": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "saved_filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SavedFilter"
          }
        }
      },
      "description": "SavedFilters model"
    },
    "updateSavedFilter": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the SavedFilter."
        },
        "filter": {
          "type": "string",
          "description": "The filter query language to apply to the SavedFilter, which subsequently gets applied to a CostReport. Additional documentation available at https://docs.vantage.sh/vql."
        }
      },
      "description": "Update a SavedFilter for CostReports."
    },
    "createCostReport": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the CostReport."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token of the Workspace to add the Cost Report to. Ignored if 'folder_token' is set. Required if the API token is associated with multiple Workspaces."
        },
        "groupings": {
          "type": "string",
          "description": "Grouping values for aggregating costs on the report. Valid groupings: account_id, billing_account_id, charge_type, cost_category, cost_subcategory, provider, region, resource_id, service, tagged, tag:<tag_value>. If providing multiple groupings, join as comma separated values: groupings=provider,service,region"
        },
        "filter": {
          "type": "string",
          "description": "The filter query language to apply to the CostReport. Additional documentation available at https://docs.vantage.sh/vql."
        },
        "saved_filter_tokens": {
          "type": "array",
          "description": "The tokens of the SavedFilters to apply to the CostReport.",
          "items": {
            "type": "string"
          }
        },
        "business_metric_tokens_with_metadata": {
          "type": "array",
          "description": "The tokens for any BusinessMetrics to attach to the CostReport, and the unit scale.",
          "items": {
            "type": "object",
            "properties": {
              "business_metric_token": {
                "type": "string",
                "description": "The token of the BusinessMetric to attach to the CostReport."
              },
              "unit_scale": {
                "type": "string",
                "description": "Determines the scale of the BusinessMetric's values within the CostReport.",
                "enum": [
                  "per_unit",
                  "per_hundred",
                  "per_thousand",
                  "per_million",
                  "per_billion"
                ],
                "default": "per_unit"
              }
            },
            "required": [
              "business_metric_token"
            ]
          }
        },
        "folder_token": {
          "type": "string",
          "description": "The token of the Folder to add the CostReport to. Determines the Workspace the report is assigned to."
        },
        "settings": {
          "type": "object",
          "description": "Report settings.",
          "properties": {
            "include_credits": {
              "type": "boolean",
              "description": "Report will include credits.",
              "default": false
            },
            "include_refunds": {
              "type": "boolean",
              "description": "Report will include refunds.",
              "default": false
            },
            "include_discounts": {
              "type": "boolean",
              "description": "Report will include discounts.",
              "default": true
            },
            "include_tax": {
              "type": "boolean",
              "description": "Report will include tax.",
              "default": true
            },
            "amortize": {
              "type": "boolean",
              "description": "Report will amortize.",
              "default": true
            },
            "unallocated": {
              "type": "boolean",
              "description": "Report will show unallocated costs.",
              "default": false
            }
          }
        }
      },
      "required": [
        "title"
      ],
      "description": "Create a CostReport."
    },
    "CostReport": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "title": {
          "type": "string",
          "example": "Production Environment",
          "description": "The title of the CostReport."
        },
        "folder_token": {
          "type": "string",
          "description": "The token for the Folder the CostReport is a part of."
        },
        "saved_filter_tokens": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The tokens for the SavedFilters assigned to the CostReport."
        },
        "business_metric_tokens_with_metadata": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The tokens for the BusinessMetrics assigned to the CostReport, and the unit scale."
        },
        "filter": {
          "type": "string",
          "description": "The filter applied to the CostReport. Additional documentation available at https://docs.vantage.sh/vql."
        },
        "groupings": {
          "type": "string",
          "example": "provider, service",
          "description": "The grouping aggregations applied to the filtered data."
        },
        "settings": {
          "type": "object",
          "properties": {
            "include_credits": {
              "type": "boolean",
              "default": false,
              "description": "Report will include credits."
            },
            "include_refunds": {
              "type": "boolean",
              "default": false,
              "description": "Report will include refunds."
            },
            "include_discounts": {
              "type": "boolean",
              "default": true,
              "description": "Report will include discounts."
            },
            "include_tax": {
              "type": "boolean",
              "default": true,
              "description": "Report will include tax."
            },
            "amortize": {
              "type": "boolean",
              "default": true,
              "description": "Report will amortize."
            },
            "unallocated": {
              "type": "boolean",
              "default": false,
              "description": "Report will show unallocated costs."
            }
          },
          "description": "Report settings."
        },
        "created_at": {
          "type": "string",
          "example": "2021-07-09T00:00:00Z",
          "description": "The date and time, in UTC, the report was created. ISO 8601 Formatted."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token for the Workspace the CostReport is a part of."
        }
      },
      "description": "CostReport model"
    },
    "CostReports": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "cost_reports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CostReport"
          }
        }
      },
      "description": "CostReports model"
    },
    "updateCostReport": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the CostReport."
        },
        "groupings": {
          "type": "string",
          "description": "Grouping values for aggregating costs on the report. Valid groupings: account_id, billing_account_id, charge_type, cost_category, cost_subcategory, provider, region, resource_id, service, tagged, tag:<tag_value>. If providing multiple groupings, join as comma separated values: groupings=provider,service,region"
        },
        "filter": {
          "type": "string",
          "description": "The filter query language to apply to the CostReport. Additional documentation available at https://docs.vantage.sh/vql."
        },
        "saved_filter_tokens": {
          "type": "array",
          "description": "The tokens of the SavedFilters to apply to the CostReport.",
          "items": {
            "type": "string"
          }
        },
        "business_metric_tokens_with_metadata": {
          "type": "array",
          "description": "The tokens for any BusinessMetrics to attach to the CostReport, and the unit scale.",
          "items": {
            "type": "object",
            "properties": {
              "business_metric_token": {
                "type": "string",
                "description": "The token of the BusinessMetric to attach to the CostReport."
              },
              "unit_scale": {
                "type": "string",
                "description": "Determines the scale of the BusinessMetric's values within the CostReport.",
                "enum": [
                  "per_unit",
                  "per_hundred",
                  "per_thousand",
                  "per_million",
                  "per_billion"
                ],
                "default": "per_unit"
              }
            },
            "required": [
              "business_metric_token"
            ]
          }
        },
        "folder_token": {
          "type": "string",
          "description": "The token of the Folder to add the CostReport to. Determines the Workspace the report is assigned to."
        },
        "settings": {
          "type": "object",
          "description": "Report settings.",
          "properties": {
            "include_credits": {
              "type": "boolean",
              "description": "Report will include credits."
            },
            "include_refunds": {
              "type": "boolean",
              "description": "Report will include refunds."
            },
            "include_discounts": {
              "type": "boolean",
              "description": "Report will include discounts."
            },
            "include_tax": {
              "type": "boolean",
              "description": "Report will include tax."
            },
            "amortize": {
              "type": "boolean",
              "description": "Report will amortize."
            },
            "unallocated": {
              "type": "boolean",
              "description": "Report will show unallocated costs."
            }
          }
        }
      },
      "description": "Update a CostReport."
    },
    "createSegment": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the Segment."
        },
        "description": {
          "type": "string",
          "description": "The description of the Segment."
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the Segment."
        },
        "track_unallocated": {
          "type": "boolean",
          "description": "Track Unallocated Costs which are not assigned to any of the created Segments.",
          "default": false
        },
        "report_settings": {
          "type": "object",
          "description": "Report settings configurable on top-level Segments.",
          "properties": {
            "include_credits": {
              "type": "boolean",
              "description": "Reports created under this Segment will include credits."
            },
            "include_refunds": {
              "type": "boolean",
              "description": "Reports created under this Segment will include refunds."
            },
            "include_discounts": {
              "type": "boolean",
              "description": "Reports created under this Segment will include discounts."
            },
            "include_tax": {
              "type": "boolean",
              "description": "Reports created under this Segment will include tax."
            },
            "amortize": {
              "type": "boolean",
              "description": "Reports created under this Segment will amortize."
            }
          }
        },
        "workspace_token": {
          "type": "string",
          "description": "The token of the Workspace to add the Segment to. Ignored if 'segment_token' is set. Required if the API token is associated with multiple Workspaces."
        },
        "filter": {
          "type": "string",
          "description": "The filter query language to apply to the Segment. Additional documentation available at https://docs.vantage.sh/vql."
        },
        "parent_segment_token": {
          "type": "string",
          "description": "The token of the parent Segment this new Segment belongs to. Determines the Workspace the segment is assigned to."
        }
      },
      "required": [
        "title"
      ],
      "description": "Create a Segment."
    },
    "Segment": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "title": {
          "type": "string",
          "example": "OPEX",
          "description": "The title of the Segment."
        },
        "parent_segment_token": {
          "type": "string",
          "description": "The token of the parent Segment of this Segment."
        },
        "description": {
          "type": "string",
          "example": "Operating expenses",
          "description": "The description of the Segment."
        },
        "track_unallocated": {
          "type": "boolean",
          "example": false,
          "description": "Track Unallocated Costs which are not assigned to any of the created Segments."
        },
        "report_settings": {
          "type": "object",
          "properties": {
            "include_credits": {
              "type": "boolean"
            },
            "include_refunds": {
              "type": "boolean"
            },
            "include_discounts": {
              "type": "boolean"
            },
            "include_tax": {
              "type": "boolean"
            },
            "amortize": {
              "type": "boolean"
            }
          },
          "description": "Report settings configurable on top-level Segments."
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "example": 100,
          "description": "Costs are assigned in priority order across all Segments with assigned filters."
        },
        "filter": {
          "type": "string",
          "description": "The filter applied to the Segment. Additional documentation available at https://docs.vantage.sh/vql."
        },
        "created_at": {
          "type": "string",
          "example": "2021-07-09T00:00:00Z",
          "description": "The date and time, in UTC, the Segment was created. ISO 8601 Formatted."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token for the Workspace the Segment is a part of."
        }
      },
      "description": "Segment model"
    },
    "Segments": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "segments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Segment"
          }
        }
      },
      "description": "Segments model"
    },
    "updateSegment": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the Segment."
        },
        "description": {
          "type": "string",
          "description": "The description of the Segment."
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the Segment."
        },
        "track_unallocated": {
          "type": "boolean",
          "description": "Track Unallocated Costs which are not assigned to any of the created Segments.",
          "default": false
        },
        "report_settings": {
          "type": "object",
          "description": "Report settings configurable on top-level Segments.",
          "properties": {
            "include_credits": {
              "type": "boolean",
              "description": "Reports created under this Segment will include credits."
            },
            "include_refunds": {
              "type": "boolean",
              "description": "Reports created under this Segment will include refunds."
            },
            "include_discounts": {
              "type": "boolean",
              "description": "Reports created under this Segment will include discounts."
            },
            "include_tax": {
              "type": "boolean",
              "description": "Reports created under this Segment will include tax."
            },
            "amortize": {
              "type": "boolean",
              "description": "Reports created under this Segment will amortize."
            }
          }
        },
        "filter": {
          "type": "string",
          "description": "The filter query language to apply to the Segment. Additional documentation available at https://docs.vantage.sh/vql."
        },
        "parent_segment_token": {
          "type": "string",
          "description": "The token of the parent Segment this new Segment belongs to. Determines the Workspace the segment is assigned to."
        }
      },
      "description": "Update a Segment."
    },
    "createDashboard": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the Dashboard."
        },
        "widget_tokens": {
          "type": "array",
          "description": "The tokens of the widgets to add to the Dashboard. Currently only supports CostReport tokens.",
          "items": {
            "type": "string"
          }
        },
        "saved_filter_tokens": {
          "type": "array",
          "description": "The tokens of the Saved Filters used in the Dashboard.",
          "items": {
            "type": "string"
          }
        },
        "date_bin": {
          "type": "string",
          "description": "Determines how to group costs in the Dashboard.",
          "enum": [
            "cumulative",
            "day",
            "week",
            "month"
          ]
        },
        "date_interval": {
          "type": "string",
          "description": "Determines the date range in the Dashboard. Incompatible with 'start_date' and 'end_date' parameters.",
          "enum": [
            "this_month",
            "last_7_days",
            "last_30_days",
            "last_month",
            "last_3_months",
            "last_6_months",
            "custom",
            "last_12_months",
            "last_24_months",
            "last_36_months",
            "next_month",
            "next_3_months",
            "next_6_months",
            "next_12_months"
          ]
        },
        "start_date": {
          "type": "string",
          "description": "The start date for the date range for costs in the Dashboard. ISO 8601 Formatted. Incompatible with 'date_interval' parameter."
        },
        "end_date": {
          "type": "string",
          "description": "The end date for the date range for costs in the Dashboard. ISO 8601 Formatted. Incompatible with 'date_interval' parameter."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token of the Workspace to add the Dashboard to. Required if the API token is associated with multiple Workspaces."
        }
      },
      "required": [
        "title",
        "end_date"
      ],
      "description": "Create a Dashboard."
    },
    "Dashboard": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "example": "dshbrd_abcd1234567890"
        },
        "title": {
          "type": "string",
          "example": "AWS Dashboard",
          "description": "The title of the Dashboard."
        },
        "widget_tokens": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The tokens of the widgets displayed in the Dashboard. Currently only supports CostReport tokens."
        },
        "saved_filter_tokens": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The tokens of the Saved Filters used in the Dashboard."
        },
        "date_bin": {
          "type": "string",
          "enum": [
            "cumulative",
            "day",
            "week",
            "month"
          ],
          "description": "Determines how to group costs in the Dashboard."
        },
        "date_interval": {
          "type": "string",
          "enum": [
            "this_month",
            "last_7_days",
            "last_30_days",
            "last_month",
            "last_3_months",
            "last_6_months",
            "custom",
            "last_12_months",
            "last_24_months",
            "last_36_months",
            "next_month",
            "next_3_months",
            "next_6_months",
            "next_12_months"
          ],
          "description": "Determines the date range in the Dashboard. Guaranteed to be set to 'custom' if 'start_date' and 'end_date' are set."
        },
        "start_date": {
          "type": "string",
          "example": "2023-08-04",
          "description": "The start date for the date range for CostReports in the Dashboard. ISO 8601 Formatted. Overwrites 'date_interval' if set."
        },
        "end_date": {
          "type": "string",
          "example": "2023-09-04",
          "description": "The end date for the date range for CostReports in the Dashboard. ISO 8601 Formatted. Overwrites 'date_interval' if set."
        },
        "created_at": {
          "type": "string",
          "example": "2023-08-04T00:00:00Z",
          "description": "The date and time, in UTC, the Dashboard was created. ISO 8601 Formatted."
        },
        "updated_at": {
          "type": "string",
          "example": "2023-08-04T00:00:00Z",
          "description": "The date and time, in UTC, the Dashboard was created. ISO 8601 Formatted."
        },
        "workspace_token": {
          "type": "string",
          "example": "wrkspc_abcd1234567890",
          "description": "The token for the Workspace the Dashboard is a part of."
        }
      },
      "description": "Dashboard model"
    },
    "Dashboards": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "dashboards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Dashboard"
          }
        }
      },
      "description": "Dashboards model"
    },
    "updateDashboard": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the Dashboard."
        },
        "widget_tokens": {
          "type": "array",
          "description": "The tokens of the widgets to add to the Dashboard. Currently only supports CostReport tokens.",
          "items": {
            "type": "string"
          }
        },
        "saved_filter_tokens": {
          "type": "array",
          "description": "The tokens of the Saved Filters used in the Dashboard.",
          "items": {
            "type": "string"
          }
        },
        "date_bin": {
          "type": "string",
          "description": "Determines how to group costs in the Dashboard.",
          "enum": [
            "cumulative",
            "day",
            "week",
            "month"
          ]
        },
        "date_interval": {
          "type": "string",
          "description": "Determines the date range in the Dashboard. Incompatible with 'start_date' and 'end_date' parameters.",
          "enum": [
            "this_month",
            "last_7_days",
            "last_30_days",
            "last_month",
            "last_3_months",
            "last_6_months",
            "custom",
            "last_12_months",
            "last_24_months",
            "last_36_months",
            "next_month",
            "next_3_months",
            "next_6_months",
            "next_12_months"
          ]
        },
        "start_date": {
          "type": "string",
          "description": "The start date for the date range for costs in the Dashboard. ISO 8601 Formatted. Incompatible with 'date_interval' parameter."
        },
        "end_date": {
          "type": "string",
          "description": "The end date for the date range for costs in the Dashboard. ISO 8601 Formatted. Incompatible with 'date_interval' parameter."
        }
      },
      "required": [
        "end_date"
      ],
      "description": "Update a Dashboard."
    },
    "Costs": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "total_cost": {
          "type": "string",
          "description": "The sum of all costs for the CostReport for the requested period, rounded to 2 decimal places, alongside the ISO 4217 currency code."
        },
        "costs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cost"
          }
        }
      },
      "description": "Costs model"
    },
    "Cost": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "accrued_at": {
          "type": "string",
          "example": "2023-09-05+00:00",
          "description": "The date the cost was accrued. ISO 8601 Formatted."
        },
        "amount": {
          "type": "string",
          "example": "4.25",
          "description": "The amount of the cost."
        },
        "currency": {
          "type": "string",
          "example": "USD",
          "description": "The currency of the cost."
        },
        "provider": {
          "type": "string",
          "example": "aws",
          "enum": [
            "aws",
            "azure",
            "gcp",
            "snowflake",
            "databricks",
            "mongo",
            "datadog",
            "fastly",
            "new_relic",
            "opencost",
            "open_ai",
            "oracle",
            "confluent",
            "planetscale",
            "coralogix",
            "kubernetes"
          ],
          "description": "The cost provider which incurred the cost."
        },
        "billing_account_id": {
          "type": "string",
          "example": "9109237192",
          "description": "The cost provider's billing account id that incurred the cost."
        },
        "account_id": {
          "type": "string",
          "example": "9109237192",
          "description": "The cost provider's account id that incurred the cost."
        },
        "service": {
          "type": "string",
          "example": "Amazon Elastic Compute Cloud - Compute",
          "description": "The service which incurred the cost."
        },
        "region": {
          "type": "string",
          "example": "us-east-1",
          "description": "The region which incurred the cost."
        },
        "resource_id": {
          "type": "string",
          "example": "arn:aws:ec2:us-east-1:123456789012:instance/i-1234567890abcdef0",
          "description": "The resource id which incurred the cost."
        },
        "tag": {
          "type": "string",
          "example": "production",
          "description": "The tag attached to the cost that was incurred.\nDEPRECATED: does not support multiple tags."
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "example": [
              "environment:production",
              "aws:ecs:serviceName:frontend"
            ]
          },
          "description": "The tag pairs attached to the cost that was incurred."
        },
        "cost_category": {
          "type": "string",
          "example": "Data Transfer",
          "description": "The category for the cost."
        },
        "cost_subcategory": {
          "type": "string",
          "example": "DataTransfer-Regional-Bytes",
          "description": "The subcategory for the cost."
        }
      }
    },
    "createTeam": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the Team."
        },
        "description": {
          "type": "string",
          "description": "The description of the Team."
        },
        "workspace_tokens": {
          "type": "array",
          "description": "The Workspace tokens to associate to the Team.",
          "items": {
            "type": "string"
          }
        },
        "user_tokens": {
          "type": "array",
          "description": "The User tokens to associate to the Team.",
          "items": {
            "type": "string"
          }
        },
        "user_emails": {
          "type": "array",
          "description": "The User emails to associate to the Team.",
          "items": {
            "type": "string"
          }
        },
        "role": {
          "type": "string",
          "description": "The role to assign to the provided Users. Defaults to 'editor' which has editor permissions.",
          "enum": [
            "owner",
            "editor",
            "viewer"
          ]
        }
      },
      "required": [
        "name"
      ],
      "description": "Create a new Team."
    },
    "Team": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "example": "Cost Savers",
          "description": "The name of the Team."
        },
        "description": {
          "type": "string",
          "example": "The Team that saves costs",
          "description": "The description of the Team."
        },
        "workspace_tokens": {
          "type": "array",
          "items": {
            "type": "string",
            "example": [
              "wrkspc_abcd1234",
              "wrkspc_efgh5678"
            ]
          },
          "description": "The tokens for any Workspaces that the Team belongs to"
        },
        "user_emails": {
          "type": "array",
          "items": {
            "type": "string",
            "example": [
              "wileycoyote@acme.com",
              "roadrunner@acme.com"
            ]
          },
          "description": "The email addresses for Users that belong to the Team"
        },
        "user_tokens": {
          "type": "array",
          "items": {
            "type": "string",
            "example": [
              "usr_abcd1234",
              "usr_efgh5678"
            ]
          },
          "description": "The tokens for Users that belong to the Team"
        }
      },
      "description": "Team model"
    },
    "Teams": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Team"
          }
        }
      },
      "description": "Teams model"
    },
    "updateTeam": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the Team."
        },
        "description": {
          "type": "string",
          "description": "The description of the Team."
        },
        "workspace_tokens": {
          "type": "array",
          "description": "The Workspace tokens to associate to the Team.",
          "items": {
            "type": "string"
          }
        },
        "user_tokens": {
          "type": "array",
          "description": "The User tokens to associate to the Team.",
          "items": {
            "type": "string"
          }
        },
        "user_emails": {
          "type": "array",
          "description": "The User emails to associate to the Team.",
          "items": {
            "type": "string"
          }
        },
        "role": {
          "type": "string",
          "description": "The role to assign to the provided Users. Defaults to 'editor' which has editor permissions.",
          "enum": [
            "owner",
            "editor",
            "viewer"
          ]
        }
      },
      "description": "Update a Team."
    },
    "createAccessGrant": {
      "type": "object",
      "properties": {
        "resource_token": {
          "type": "string",
          "description": "The token of the resource for which you are granting access."
        },
        "team_token": {
          "type": "string",
          "description": "The token of the Team you want to grant access to."
        },
        "access": {
          "type": "string",
          "description": "The access level you want to grant. Defaults to 'allowed'.",
          "enum": [
            "denied",
            "allowed"
          ]
        }
      },
      "required": [
        "resource_token",
        "team_token"
      ],
      "description": "Create an Access Grant."
    },
    "AccessGrant": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "resource_token": {
          "type": "string",
          "example": "rprt_abcd1234",
          "description": "The token for any resource the AccessGrant is applied to."
        },
        "access": {
          "type": "string",
          "description": "The access status of the AccessGrant."
        },
        "team_token": {
          "type": "string",
          "description": "The Team token for which an AccessGrant is applied to."
        },
        "created_at": {
          "type": "string",
          "example": "2023-08-04T00:00:00Z",
          "description": "The date and time, in UTC, the AccessGrant was created. ISO 8601 Formatted."
        },
        "created_by": {
          "type": "string",
          "description": "The token for the User who created the AccessGrant."
        }
      },
      "description": "AccessGrant model"
    },
    "AccessGrants": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "access_grants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessGrant"
          }
        }
      },
      "description": "AccessGrants model"
    },
    "updateAccessGrant": {
      "type": "object",
      "properties": {
        "access": {
          "type": "string",
          "description": "Allowed or denied access to resource.",
          "enum": [
            "denied",
            "allowed"
          ]
        }
      },
      "required": [
        "access"
      ],
      "description": "Update an AccessGrant."
    },
    "createReportNotification": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the ReportNotification."
        },
        "cost_report_token": {
          "type": "string",
          "description": "The CostReport token."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token of the Workspace to add the ReportNotification to. Required if the API token is associated with multiple Workspaces."
        },
        "user_tokens": {
          "type": "array",
          "description": "The Users that receive the notification.",
          "items": {
            "type": "string"
          }
        },
        "recipient_channels": {
          "type": "array",
          "description": "The Slack or Microsoft Teams channels that receive the notification.",
          "items": {
            "type": "string"
          }
        },
        "frequency": {
          "type": "string",
          "description": "The frequency the ReportNotification is sent. Possible values: daily, weekly, monthly."
        },
        "change": {
          "type": "string",
          "description": "The type of change the ReportNotification is tracking. Possible values: percentage, dollars."
        }
      },
      "required": [
        "title",
        "cost_report_token",
        "frequency",
        "change"
      ],
      "description": "Create a ReportNotification."
    },
    "ReportNotification": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "title": {
          "type": "string",
          "example": "Acme Report Notification",
          "description": "The title of the ReportNotification."
        },
        "cost_report_token": {
          "type": "string",
          "example": "rprt_abcd1234",
          "description": "The token for a CostReport the ReportNotification is applied to."
        },
        "user_tokens": {
          "type": "array",
          "items": {
            "type": "string",
            "example": [
              "usr_abcd1234",
              "usr_efgh5678"
            ]
          },
          "description": "The Users that receive the notification."
        },
        "recipient_channels": {
          "type": "array",
          "items": {
            "type": "string",
            "example": [
              "#notifications-channel"
            ]
          },
          "description": "The Slack or Microsoft Teams channels that receive the notification."
        },
        "frequency": {
          "type": "string",
          "example": "weekly",
          "enum": [
            "daily",
            "weekly",
            "monthly"
          ],
          "description": "The frequency the ReportNotification is sent."
        },
        "change": {
          "type": "string",
          "example": "percentage",
          "enum": [
            "percentage",
            "dollars"
          ],
          "description": "The type of change the ReportNotification is tracking."
        }
      },
      "description": "ReportNotification model"
    },
    "ReportNotifications": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "report_notifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportNotification"
          }
        }
      },
      "description": "ReportNotifications model"
    },
    "updateReportNotification": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the ReportNotification."
        },
        "cost_report_token": {
          "type": "string",
          "description": "The CostReport token."
        },
        "user_tokens": {
          "type": "array",
          "description": "The Users that receive the notification.",
          "items": {
            "type": "string"
          }
        },
        "recipient_channels": {
          "type": "array",
          "description": "The Slack or Microsoft Teams channels that receive the notification.",
          "items": {
            "type": "string"
          }
        },
        "frequency": {
          "type": "string",
          "description": "The frequency the ReportNotification is sent. Possible values: daily, weekly, monthly."
        },
        "change": {
          "type": "string",
          "description": "The type of change the ReportNotification is tracking. Possible values: percentage, dollars."
        }
      },
      "description": "Update a ReportNotification."
    },
    "Users": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          }
        }
      },
      "description": "Users model"
    },
    "User": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "example": "John Doe",
          "description": "The name of the User."
        },
        "email": {
          "type": "string",
          "example": "john_doe@acme.com",
          "description": "The email of the User."
        },
        "role": {
          "type": "string",
          "example": "Admin",
          "description": "The role of the User."
        }
      },
      "description": "User model"
    },
    "createBusinessMetric": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the Business Metric."
        },
        "cost_report_tokens_with_metadata": {
          "type": "array",
          "description": "The tokens for any CostReports that use the BusinessMetric, and the unit scale.",
          "items": {
            "type": "object",
            "properties": {
              "cost_report_token": {
                "type": "string",
                "description": "The token of the CostReport the BusinessMetric is attached to."
              },
              "unit_scale": {
                "type": "string",
                "description": "Determines the scale of the BusinessMetric's values within the CostReport.",
                "enum": [
                  "per_unit",
                  "per_hundred",
                  "per_thousand",
                  "per_million",
                  "per_billion"
                ],
                "default": "per_unit"
              }
            },
            "required": [
              "cost_report_token"
            ]
          }
        },
        "values": {
          "type": "array",
          "description": "The dates and amounts for the BusinessMetric.",
          "items": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "format": "date-time"
              },
              "amount": {
                "type": "number",
                "format": "double"
              }
            },
            "required": [
              "date",
              "amount"
            ]
          }
        }
      },
      "required": [
        "title"
      ],
      "description": "Create a new Business Metric."
    },
    "BusinessMetric": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "example": "bsnss_mtrc_1234",
          "description": "The token of the BusinessMetric."
        },
        "title": {
          "type": "string",
          "example": "Total Revenue",
          "description": "The title of the BusinessMetric."
        },
        "created_by_token": {
          "type": "string",
          "example": "usr_1234",
          "description": "The token of the User who created the BusinessMetric."
        },
        "cost_report_tokens_with_metadata": {
          "type": "array",
          "items": {
            "type": "string",
            "example": [
              {
                "cost_report_token": "rprt_1234",
                "unit_scale": "per_hundred"
              }
            ]
          },
          "description": "The tokens for any CostReports that use the BusinessMetric, and the unit scale."
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string",
            "example": [
              {
                "date": "2024-03-01",
                "amount": "100.123"
              }
            ]
          },
          "description": "The dates and amounts for the BusinessMetric"
        }
      },
      "description": "BusinessMetric model"
    },
    "BusinessMetrics": {
      "type": "object",
      "properties": {
        "business_metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessMetric"
          }
        }
      },
      "description": "BusinessMetrics model"
    },
    "updateBusinessMetric": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the BusinessMetric."
        },
        "cost_report_tokens_with_metadata": {
          "type": "array",
          "description": "The tokens for any CostReports that use the BusinessMetric, and the unit scale.",
          "items": {
            "type": "object",
            "properties": {
              "cost_report_token": {
                "type": "string",
                "description": "The token of the CostReport the BusinessMetric is attached to."
              },
              "unit_scale": {
                "type": "string",
                "description": "Determines the scale of the BusinessMetric's values within the CostReport.",
                "enum": [
                  "per_unit",
                  "per_hundred",
                  "per_thousand",
                  "per_million",
                  "per_billion"
                ],
                "default": "per_unit"
              }
            },
            "required": [
              "cost_report_token"
            ]
          }
        },
        "values": {
          "type": "array",
          "description": "The dates and amounts for the BusinessMetric.",
          "items": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "format": "date-time"
              },
              "amount": {
                "type": "number",
                "format": "double"
              }
            },
            "required": [
              "date",
              "amount"
            ]
          }
        }
      },
      "description": "Updates an existing BusinessMetric."
    },
    "Products": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          }
        }
      },
      "description": "Products model"
    },
    "Product": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "category": {
          "type": "string",
          "example": "compute",
          "description": "The category of the cloud product"
        },
        "name": {
          "type": "string",
          "example": "EC2",
          "description": "The common name of the product."
        },
        "service_id": {
          "type": "string",
          "example": "aws-ec2",
          "description": "A unique slug for the service the product belongs to."
        },
        "provider_id": {
          "type": "string",
          "example": "aws",
          "description": "A unique slug for the provider the product belongs to."
        },
        "details": {
          "type": "object",
          "example": {
            "gpu": 0,
            "name": "M5 General Purpose 16xlarge",
            "vcpu": 64,
            "memory": 256,
            "clock_speed_ghz": 3.1,
            "physical_processor_description": "Intel Xeon Platinum 8175 (Skylake)",
            "network_performance_description": "20 Gigabit"
          },
          "description": "An object of metadata about the product."
        }
      },
      "description": "Product model"
    },
    "Prices": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "prices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Price"
          }
        }
      },
      "description": "Prices model"
    },
    "Price": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "unit": {
          "type": "string",
          "example": "hour",
          "description": "The unit in which the amount is billed."
        },
        "region": {
          "type": "string",
          "example": "us-east-1",
          "description": "The region the price is specific to."
        },
        "rate_type": {
          "type": "string",
          "example": "compute",
          "description": "The part of the product the price applies to. (compute, transfer, etc..)"
        },
        "currency": {
          "type": "string",
          "example": "USD",
          "description": "The currency of the amount."
        },
        "amount": {
          "type": "number",
          "example": "1.324",
          "description": "The amount of money this specific product price costs."
        },
        "details": {
          "type": "object",
          "example": {
            "platform": "linux-enterprise",
            "lifecycle": "on-demand"
          },
          "description": "Service specific metadata."
        }
      },
      "description": "Price model"
    },
    "ResourceReports": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "resource_reports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceReport"
          }
        }
      },
      "description": "ResourceReports model"
    },
    "ResourceReport": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "title": {
          "type": "string",
          "example": "Acme123 Active Resources",
          "description": "The title of the ResourceReport."
        },
        "default": {
          "type": "boolean",
          "description": "Indicates whether the ResourceReport is the default report."
        },
        "created_at": {
          "type": "string",
          "example": "2024-03-19T00:00:00Z",
          "description": "The date and time, in UTC, the report was created. ISO 8601 Formatted."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token for the Workspace the ResourceReport is a part of."
        },
        "segment_token": {
          "type": "string",
          "description": "The token for the Segment the ResourceReport is a part of."
        },
        "user_token": {
          "type": "string",
          "description": "The token for the User who created this ResourceReport."
        }
      },
      "description": "ResourceReport model"
    },
    "FinancialCommitmentReports": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "financial_commitment_reports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FinancialCommitmentReport"
          }
        }
      },
      "description": "FinancialCommitmentReports model"
    },
    "FinancialCommitmentReport": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "title": {
          "type": "string",
          "example": "Acme123 Financial Commitment Report",
          "description": "The title of the FinancialCommitmentReport."
        },
        "default": {
          "type": "boolean",
          "description": "Indicates whether the FinancialCommitmentReport is the default report."
        },
        "created_at": {
          "type": "string",
          "example": "2024-03-19T00:00:00Z",
          "description": "The date and time, in UTC, the report was created. ISO 8601 Formatted."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token for the Workspace the FinancialCommitmentReport is a part of."
        },
        "user_token": {
          "type": "string",
          "description": "The token for the User who created this FinancialCommitmentReport."
        },
        "start_date": {
          "type": "string",
          "example": "2024-03-01",
          "description": "The start date for the FinancialCommitmentReport. Only set for custom date ranges. ISO 8601 Formatted."
        },
        "end_date": {
          "type": "string",
          "example": "2024-03-20",
          "description": "The end date for the FinancialCommitmentReport. Only set for custom date ranges. ISO 8601 Formatted."
        },
        "date_interval": {
          "type": "string",
          "example": "last_month",
          "description": "The date range for the FinancialCommitmentReport. Only present if a custom date range is not specified."
        },
        "date_bucket": {
          "type": "string",
          "example": "month",
          "description": "How costs are grouped and displayed in the FinancialCommitmentReport. Possible values: day, week, month."
        },
        "groupings": {
          "type": "string",
          "example": "cost_type, tag:account",
          "description": "The grouping aggregations applied to the filtered data."
        },
        "on_demand_costs_scope": {
          "type": "string",
          "example": "discountable",
          "description": "The scope for the costs. Possible values: discountable, all."
        }
      },
      "description": "FinancialCommitmentReport model"
    },
    "KubernetesEfficiencyReports": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "kubernetes_efficiency_reports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KubernetesEfficiencyReport"
          }
        }
      },
      "description": "KubernetesEfficiencyReports model"
    },
    "KubernetesEfficiencyReport": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "title": {
          "type": "string",
          "example": "Acme123 Kubernetes Efficiency Metrics",
          "description": "The title of the KubernetesEfficiencyReport."
        },
        "default": {
          "type": "boolean",
          "description": "Indicates whether the KubernetesEfficiencyReport is the default report."
        },
        "created_at": {
          "type": "string",
          "example": "2024-03-19T00:00:00Z",
          "description": "The date and time, in UTC, the report was created. ISO 8601 Formatted."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token for the Workspace the KubernetesEfficiencyReport is a part of."
        },
        "user_token": {
          "type": "string",
          "description": "The token for the User who created this KubernetesEfficiencyReport."
        },
        "start_date": {
          "type": "string",
          "example": "2024-03-01",
          "description": "The start date for the KubernetesEfficiencyReport. Only set for custom date ranges. ISO 8601 Formatted."
        },
        "end_date": {
          "type": "string",
          "example": "2024-03-20",
          "description": "The end date for the KubernetesEfficiencyReport. Only set for custom date ranges. ISO 8601 Formatted."
        },
        "date_interval": {
          "type": "string",
          "example": "last_month",
          "description": "The date range for the KubernetesEfficiencyReport. Only present if a custom date range is not specified."
        },
        "date_bucket": {
          "type": "string",
          "example": "month",
          "description": "How costs are grouped and displayed in the KubernetesEfficiencyReport. Possible values: day, week, month."
        },
        "aggregated_by": {
          "type": "string",
          "description": "How costs are aggregated by. Possible values: idle_costs, amount."
        },
        "groupings": {
          "type": "string",
          "example": "cluster_id, namespace",
          "description": "The grouping aggregations applied to the filtered data."
        }
      },
      "description": "KubernetesEfficiencyReport model"
    },
    "AnomalyAlerts": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "anomaly_alerts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnomalyAlert"
          }
        }
      },
      "description": "AnomalyAlerts model"
    },
    "AnomalyAlert": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "example": "2021-07-09T00:00:00Z",
          "description": "The date and time, in UTC, the AnomalyAlert was created. ISO 8601 Formatted."
        },
        "alerted_at": {
          "type": "string",
          "example": "2021-07-09T00:00:00Z",
          "description": "The date and time, in UTC, the AnomalyAlert is sent. ISO 8601 Formatted."
        },
        "category": {
          "type": "string",
          "description": "The category of the AnomalyAlert."
        },
        "service": {
          "type": "string",
          "description": "The provider service causing the AnomalyAlert."
        },
        "provider": {
          "type": "string",
          "description": "The provider of the service causing the AnomalyAlert."
        },
        "amount": {
          "type": "string",
          "description": "The amount observed."
        },
        "previous_amount": {
          "type": "string",
          "description": "The previous amount observed."
        },
        "seven_day_average": {
          "type": "string",
          "description": "The seven day average of the amount observed."
        },
        "status": {
          "type": "string",
          "description": "The status of the AnomalyAlert."
        },
        "feedback": {
          "type": "string",
          "description": "The user-provided feedback of why alert was ignored/archived."
        },
        "cost_report_token": {
          "type": "string",
          "description": "The token of the Report associated with the AnomalyAlert."
        }
      },
      "description": "AnomalyAlert model"
    },
    "updateAnomalyAlert": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "The status of the Anomaly Alert."
        },
        "feedback": {
          "type": "string",
          "description": "Optional additional comments for why this alert is ignored."
        }
      },
      "required": [
        "status"
      ],
      "description": "Update an AnomalyAlert."
    },
    "createVirtualTagConfig": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key of the VirtualTagConfig."
        },
        "overridable": {
          "type": "boolean",
          "description": "Whether the VirtualTagConfig can override a provider-supplied tag on a matching Cost."
        },
        "backfill_until": {
          "type": "string",
          "format": "date",
          "description": "The earliest month the VirtualTagConfig should be backfilled to."
        },
        "values": {
          "type": "array",
          "description": "Values for the VirtualTagConfig, with match precedence determined by order in the list.",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the value."
              },
              "filter": {
                "type": "string",
                "description": "The filter query language to apply to the value. Additional documentation available at https://docs.vantage.sh/vql."
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "required": [
        "key",
        "overridable"
      ],
      "description": "Create a new VirtualTagConfig."
    },
    "VirtualTagConfig": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "example": "vtag_1234",
          "description": "The token of the VirtualTagConfig."
        },
        "created_by_token": {
          "type": "string",
          "example": "usr_1234",
          "description": "The token of the User who created the VirtualTagConfig."
        },
        "key": {
          "type": "string",
          "example": "Cost Center",
          "description": "The key of the VirtualTagConfig."
        },
        "overridable": {
          "type": "boolean",
          "description": "Whether the VirtualTagConfig can override a provider-supplied tag on a matching Cost."
        },
        "backfill_until": {
          "type": "string",
          "example": "2023-10-01",
          "description": "The earliest month VirtualTagConfig should be backfilled to."
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualTagConfigValue"
          },
          "description": "Values for the VirtualTagConfig, with match precedence determined by their relative order in the list."
        }
      },
      "description": "VirtualTagConfig model"
    },
    "VirtualTagConfigValue": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Informatics",
          "description": "The name of the Value."
        },
        "filter": {
          "type": "string",
          "example": "costs.provider = 'aws' AND costs.service = 'Amazon Simple Storage Service'",
          "description": "The filter VQL for the Value."
        }
      }
    },
    "VirtualTagConfigs": {
      "type": "object",
      "properties": {
        "virtual_tag_configs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualTagConfig"
          }
        }
      },
      "description": "VirtualTagConfigs model"
    },
    "updateVirtualTagConfig": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key of the VirtualTagConfig."
        },
        "overridable": {
          "type": "boolean",
          "description": "Whether the VirtualTagConfig can override a provider-supplied tag on a matching Cost.",
          "x-nullable": true
        },
        "backfill_until": {
          "type": "string",
          "format": "date",
          "description": "The earliest month the VirtualTagConfig should be backfilled to.",
          "x-nullable": true
        },
        "values": {
          "type": "array",
          "description": "Values for the VirtualTagConfig, with match precedence determined by order in the list.",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the value."
              },
              "filter": {
                "type": "string",
                "description": "The filter query language to apply to the value. Additional documentation available at https://docs.vantage.sh/vql."
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "description": "Updates an existing VirtualTagConfig."
    },
    "createReportAlert": {
      "type": "object",
      "properties": {
        "cost_report_token": {
          "type": "string",
          "description": "The token of the Cost Report folder that has the alert."
        },
        "threshold": {
          "type": "integer",
          "format": "int32",
          "description": "The threshold amount that must be met for the alert to fire."
        },
        "user_tokens": {
          "type": "array",
          "description": "The tokens of the users that receive the alert.",
          "items": {
            "type": "string"
          }
        },
        "recipient_channels": {
          "type": "array",
          "description": "The Slack/MS Teams channels that receive the alert.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "cost_report_token"
      ],
      "description": "Create a Report Alert for a Cost Report."
    },
    "ReportAlert": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "cost_report_token": {
          "type": "string",
          "description": "The token for the CostReport the ReportAlert is associated with."
        },
        "created_at": {
          "type": "string",
          "example": "2023-08-04T00:00:00Z",
          "description": "The date and time, in UTC, the ReportAlert was created. ISO 8601 Formatted."
        },
        "updated_at": {
          "type": "string",
          "example": "2023-08-04T00:00:00Z",
          "description": "The date and time, in UTC, the ReportAlert was last updated at. ISO 8601 Formatted."
        },
        "threshold": {
          "type": "integer",
          "format": "int32",
          "description": "The threshold amount that must be met for the alert to fire."
        },
        "user_tokens": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The tokens of the users that receive the alert."
        },
        "recipient_channels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The channels that the alert is sent to."
        }
      },
      "description": "ReportAlert model"
    },
    "ReportAlerts": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "report_alerts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportAlert"
          }
        }
      },
      "description": "ReportAlerts model"
    },
    "updateReportAlert": {
      "type": "object",
      "properties": {
        "threshold": {
          "type": "integer",
          "format": "int32",
          "description": "The threshold amount that must be met for the alert to fire."
        },
        "user_tokens": {
          "type": "array",
          "description": "The tokens of the users that receive the alert.",
          "items": {
            "type": "string"
          }
        },
        "recipient_channels": {
          "type": "array",
          "description": "The Slack/MS Teams channels that receive the alert.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Update a Report Alert."
    },
    "createBudget": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the Budget."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token of the Workspace to add the Budget to."
        },
        "cost_report_token": {
          "type": "string",
          "description": "The CostReport token."
        },
        "periods_attributes": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "start_at": {
                "type": "string",
                "format": "date"
              },
              "end_at": {
                "type": "string",
                "format": "date"
              },
              "amount": {
                "type": "number",
                "format": "double"
              }
            },
            "required": [
              "start_at",
              "amount"
            ]
          }
        }
      },
      "required": [
        "name"
      ],
      "description": "Create a Budget."
    },
    "Budget": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "example": "Acme123 Budget",
          "description": "The name of the Budget."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token for the Workspace the Budget is a part of."
        },
        "user_token": {
          "type": "string",
          "description": "The token for the User who created this Budget."
        },
        "cost_report_token": {
          "type": "string",
          "description": "The token of the Report associated with the Budget."
        },
        "created_at": {
          "type": "string",
          "example": "2024-03-19T00:00:00Z",
          "description": "The date and time, in UTC, the Budget was created. ISO 8601 Formatted."
        },
        "budget_alert_tokens": {
          "type": "array",
          "items": {
            "type": "string",
            "example": [
              "bdgt_alrt_c9cd4e1a7127461b"
            ]
          },
          "description": "The tokens of the BudgetAlerts associated with the Budget."
        },
        "periods": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The budget periods associated with the Budget."
        },
        "performance": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The historical performance of the Budget."
        }
      },
      "description": "Budget model"
    },
    "Budgets": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "budgets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Budget"
          }
        }
      },
      "description": "Budgets model"
    },
    "updateBudget": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the Budget."
        },
        "cost_report_token": {
          "type": "string",
          "description": "The CostReport token."
        },
        "periods": {
          "type": "array",
          "description": "The periods for the Budget. The start_at and end_at must be iso8601 formatted e.g. YYYY-MM-DD.",
          "items": {
            "type": "object",
            "properties": {
              "start_at": {
                "type": "string",
                "format": "date"
              },
              "end_at": {
                "type": "string",
                "format": "date"
              },
              "amount": {
                "type": "number",
                "format": "double"
              }
            },
            "required": [
              "start_at",
              "amount"
            ]
          }
        }
      },
      "description": "Update a Budget."
    }
  }
}
