{
  "info": {
    "title": "Vantage",
    "description": "Vantage API",
    "termsOfService": "https://www.vantage.sh/terms-of-use",
    "contact": {
      "name": "Vantage Support",
      "email": "support@vantage.sh",
      "url": "https://www.vantage.sh"
    },
    "version": "2.0.0"
  },
  "swagger": "2.0",
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "flow": "application",
      "scopes": {
        "read": "Grants read access",
        "write": "Grants write access"
      },
      "tokenUrl": "https://console.vantage.sh/account/profile"
    }
  },
  "security": [
    {
      "oauth2": [
        "read"
      ]
    }
  ],
  "host": "api.vantage.sh",
  "basePath": "/v2",
  "schemes": [
    "https"
  ],
  "tags": [
    {
      "name": "Workspaces",
      "description": "Operations about Workspaces"
    },
    {
      "name": "Folders",
      "description": "Operations about Folders"
    },
    {
      "name": "Filters",
      "description": "Operations about Filters"
    },
    {
      "name": "Costs",
      "description": "Operations about Costs"
    },
    {
      "name": "Segments",
      "description": "Operations about Segments"
    },
    {
      "name": "Dashboards",
      "description": "Operations about Dashboards"
    },
    {
      "name": "Teams",
      "description": "Operations about Teams"
    },
    {
      "name": "AccessGrants",
      "description": "Operations about AccessGrants"
    },
    {
      "name": "Users",
      "description": "Operations about Users"
    },
    {
      "name": "Prices",
      "description": "Operations about Prices"
    },
    {
      "name": "Ping",
      "description": "Operations about Pings"
    }
  ],
  "paths": {
    "/workspaces": {
      "get": {
        "description": "Return all Workspaces that the current API token has access to.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Workspaces"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/workspaces",
                  "first": "https://api.vantage.com/v2/workspaces?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/workspaces?page=1",
                  "prev": null
                },
                "workspaces": [
                  {
                    "token": "wrkspc_f936ced69bcbf8fa",
                    "name": "Senger and Sons"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Workspaces"
        ],
        "operationId": "getWorkspaces"
      }
    },
    "/workspaces/{workspace_token}": {
      "get": {
        "description": "Return a specific Workspace.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspace_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Workspace"
            },
            "examples": {
              "application/json": {
                "token": "wrkspc_be2a1b2c1ebfa3c9",
                "name": "Crist-Simonis"
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Workspaces"
        ],
        "operationId": "getWorkspace"
      }
    },
    "/folders": {
      "post": {
        "description": "Create a Folder for CostReports.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Folders",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postFolders"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Folder"
            },
            "examples": {
              "application/json": {
                "token": "fldr_4aabe6f482c2a9e4",
                "title": "New Folder",
                "parent_folder_token": "fldr_4d29cbecf2601266",
                "created_at": "2023-09-12T05:06:52Z",
                "updated_at": "2023-09-12T05:06:52Z",
                "workspace_token": "wrkspc_510cc77828001f9b"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Folders"
        ],
        "operationId": "createFolder"
      },
      "get": {
        "description": "Return all Folders for CostReports.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Folders"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/folders",
                  "first": "https://api.vantage.com/v2/folders?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/folders?page=1",
                  "prev": null
                },
                "folders": [
                  {
                    "token": "fldr_baf37f32280f5444",
                    "title": "synergy",
                    "parent_folder_token": null,
                    "created_at": "2023-09-12T05:06:54Z",
                    "updated_at": "2023-09-12T05:06:54Z",
                    "workspace_token": "wrkspc_f583a08beb76f679"
                  },
                  {
                    "token": "fldr_625d4591e46f7dfa",
                    "title": "website",
                    "parent_folder_token": "fldr_baf37f32280f5444",
                    "created_at": "2023-09-12T05:06:54Z",
                    "updated_at": "2023-09-12T05:06:54Z",
                    "workspace_token": "wrkspc_f583a08beb76f679"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Folders"
        ],
        "operationId": "getFolders"
      }
    },
    "/folders/{folder_token}": {
      "delete": {
        "description": "Delete a Folder for CostReports.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "folder_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Folder"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Folders"
        ],
        "operationId": "deleteFolder"
      },
      "put": {
        "description": "Update a Folder for CostReports.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "folder_token",
            "type": "string",
            "required": true
          },
          {
            "name": "Folders",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/putFolders"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Folder"
            },
            "examples": {
              "application/json": {
                "token": "fldr_68e18d8d7df0be96",
                "title": "New Title",
                "parent_folder_token": "fldr_9aa0c735a6b615c6",
                "created_at": "2023-09-12T05:06:53Z",
                "updated_at": "2023-09-12T05:06:53Z",
                "workspace_token": "wrkspc_e65a48e5d9684439"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Folders"
        ],
        "operationId": "updateFolder"
      },
      "get": {
        "description": "Return a specific Folder for CostReports.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "folder_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Folder"
            },
            "examples": {
              "application/json": {
                "token": "fldr_3653e0f460786b1e",
                "title": "intermediate",
                "parent_folder_token": "fldr_b6bf120a1d3a794b",
                "created_at": "2023-09-12T05:07:36Z",
                "updated_at": "2023-09-12T05:07:36Z",
                "workspace_token": "wrkspc_a707105ff54966c3"
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Folders"
        ],
        "operationId": "getFolder"
      }
    },
    "/saved_filters": {
      "post": {
        "description": "Create a SavedFilter for CostReports.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "SavedFilters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postSavedFilters"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SavedFilter"
            },
            "examples": {
              "application/json": {
                "token": "svd_fltr_84a8a4e35a845f97",
                "title": "New Saved Filter",
                "cost_report_tokens": [],
                "filter": "(costs.provider = 'datadog')",
                "created_at": "2023-09-12T05:06:52Z",
                "created_by": "usr_4011f2b8a607729d",
                "workspace_token": "wrkspc_6f54abb1b2a5aefc"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Filters"
        ],
        "operationId": "createSavedFilter"
      },
      "get": {
        "description": "Return all SavedFilters that can be applied to a CostReport.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SavedFilters"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/saved_filters",
                  "first": "https://api.vantage.com/v2/saved_filters?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/saved_filters?page=1",
                  "prev": null
                },
                "saved_filters": [
                  {
                    "token": "svd_fltr_52a89bb6b1c84380",
                    "title": "White",
                    "cost_report_tokens": [
                      "rprt_fef8f7e70f993108"
                    ],
                    "filter": "(costs.provider = 'aws' AND costs.account_id = '74')",
                    "created_at": "2023-09-12T05:07:35Z",
                    "created_by": "usr_055cb925f37bfa75",
                    "workspace_token": "wrkspc_c3a582b964a67afd"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Filters"
        ],
        "operationId": "getSavedFilters"
      }
    },
    "/saved_filters/{saved_filter_token}": {
      "delete": {
        "description": "Delete a SavedFilter for CostReports.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "saved_filter_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SavedFilter"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Filters"
        ],
        "operationId": "deleteSavedFilter"
      },
      "put": {
        "description": "Update a SavedFilter for CostReports.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "saved_filter_token",
            "type": "string",
            "required": true
          },
          {
            "name": "SavedFilters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/putSavedFilters"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SavedFilter"
            },
            "examples": {
              "application/json": {
                "token": "svd_fltr_92c840f4c76c76b3",
                "title": "Updated Saved Filter",
                "cost_report_tokens": [],
                "filter": "(costs.provider = 'azure')",
                "created_at": "2023-09-12T05:07:35Z",
                "created_by": "usr_fcd9ff9f8aa6bd1f",
                "workspace_token": "wrkspc_49c6865bb1f6356f"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Filters"
        ],
        "operationId": "updateSavedFilter"
      },
      "get": {
        "description": "Return a specific SavedFilter.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "saved_filter_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SavedFilter"
            },
            "examples": {
              "application/json": {
                "token": "svd_fltr_7d37f2b3704d1c41",
                "title": "Black",
                "cost_report_tokens": [
                  "rprt_267f8c135c20bf99"
                ],
                "filter": "(costs.provider = 'aws' AND costs.account_id = '57')",
                "created_at": "2023-09-12T05:07:36Z",
                "created_by": "usr_86017037cec4a852",
                "workspace_token": "wrkspc_7020b8708f0e6556"
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Filters"
        ],
        "operationId": "getSavedFilter"
      }
    },
    "/cost_reports": {
      "post": {
        "description": "Create a CostReport.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "CostReports",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postCostReports"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CostReport"
            },
            "examples": {
              "application/json": {
                "token": "rprt_2363f8bdb2e7f1e4",
                "title": "New Cost Report",
                "folder_token": "fldr_2e4dbb93545cec18",
                "saved_filter_tokens": [
                  "svd_fltr_cb89ff66f153a0e9"
                ],
                "filter": "(costs.provider = 'aws')",
                "created_at": "2023-09-12T05:06:54Z",
                "workspace_token": "wrkspc_ad4debc4ecfe4819"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Costs"
        ],
        "operationId": "createCostReport"
      },
      "get": {
        "description": "Return all CostReports.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CostReports"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/cost_reports",
                  "first": "https://api.vantage.com/v2/cost_reports?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/cost_reports?page=1",
                  "prev": null
                },
                "cost_reports": [
                  {
                    "token": "rprt_cc7aa2f5caa0b8f1",
                    "title": "Untitled",
                    "folder_token": null,
                    "saved_filter_tokens": [
                      "svd_fltr_ce2bcefe4075566d"
                    ],
                    "filter": null,
                    "created_at": "2023-09-12T05:06:51Z",
                    "workspace_token": "wrkspc_21d33c2825e7288a"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Costs"
        ],
        "operationId": "getCostReports"
      }
    },
    "/cost_reports/{cost_report_token}": {
      "delete": {
        "description": "Delete a CostReport.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cost_report_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CostReport"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Costs"
        ],
        "operationId": "deleteCostReport"
      },
      "put": {
        "description": "Update a CostReport.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cost_report_token",
            "type": "string",
            "required": true
          },
          {
            "name": "CostReports",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/putCostReports"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CostReport"
            },
            "examples": {
              "application/json": {
                "token": "rprt_b09d9ddcf70103dc",
                "title": "Updated Cost Report",
                "folder_token": "fldr_237684478b1c2447",
                "saved_filter_tokens": [
                  "svd_fltr_40d131c47464afc7"
                ],
                "filter": "(costs.provider = 'azure')",
                "created_at": "2023-09-12T05:07:35Z",
                "workspace_token": "wrkspc_f7747e6da882b0ff"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Costs"
        ],
        "operationId": "updateCostReport"
      },
      "get": {
        "description": "Return a CostReport.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cost_report_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CostReport"
            },
            "examples": {
              "application/json": {
                "token": "rprt_d3df3ba1970f88a7",
                "title": "Untitled",
                "folder_token": null,
                "saved_filter_tokens": [
                  "svd_fltr_83314e1b3b84c4c6"
                ],
                "filter": null,
                "created_at": "2023-09-12T05:06:53Z",
                "workspace_token": "wrkspc_87c17d9ce307cd01"
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Costs"
        ],
        "operationId": "getCostReport"
      }
    },
    "/segments": {
      "post": {
        "description": "Create a Segment.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Segments",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postSegments"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Segment"
            },
            "examples": {
              "application/json": {
                "token": "fltr_sgmt_a793ce52205ca223",
                "title": "New Segment",
                "parent_folder": "fldr_67cc2920f22dea24",
                "description": "I'm a Segment.",
                "track_unallocated": false,
                "priority": 100,
                "filter": "(costs.provider = 'aws' AND costs.service = 'Amazon Simple Storage Service')",
                "created_at": "2023-12-06T21:52:17Z",
                "workspace_token": "wrkspc_d7cc0e18885d3b0f"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Segments"
        ],
        "operationId": "createSegment"
      },
      "get": {
        "description": "Return all Segments.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Segments"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/segments",
                  "first": "https://api.vantage.com/v2/segments?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/segments?page=1",
                  "prev": null
                },
                "segments": [
                  {
                    "token": "fltr_sgmt_f23a067af4cbfebb",
                    "title": "productivity",
                    "parent_folder": "fldr_065c0321590afe4c",
                    "description": "Adaptive modular framework",
                    "track_unallocated": false,
                    "priority": 100,
                    "filter": "(costs.provider = 'aws')",
                    "created_at": "2023-12-06T21:52:16Z",
                    "workspace_token": "wrkspc_2bd5f2e610472d04"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Segments"
        ],
        "operationId": "getSegments"
      }
    },
    "/segments/{segment_token}": {
      "delete": {
        "description": "Delete a Segment.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "segment_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Segment"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Segments"
        ],
        "operationId": "deleteSegment"
      },
      "put": {
        "description": "Update a Segment.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "segment_token",
            "type": "string",
            "required": true
          },
          {
            "name": "Segments",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/putSegments"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Segment"
            },
            "examples": {
              "application/json": {
                "token": "fltr_sgmt_726b302b3d691245",
                "title": "Updated Segment",
                "parent_folder": "fldr_c9543f1acba5309b",
                "description": "Public-key content-based hub",
                "track_unallocated": false,
                "priority": 100,
                "filter": "(costs.provider = 'azure')",
                "created_at": "2023-12-06T21:52:17Z",
                "workspace_token": "wrkspc_59a7f679811b54f1"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Segments"
        ],
        "operationId": "updateSegment"
      },
      "get": {
        "description": "Return a Segment.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "segment_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Segment"
            },
            "examples": {
              "application/json": {
                "token": "fltr_sgmt_8e138f7c45c38b60",
                "title": "Implemented",
                "parent_folder": "fldr_b39a7568a602e4ce",
                "description": "Reduced leading edge product",
                "track_unallocated": false,
                "priority": 100,
                "filter": "(costs.provider = 'aws')",
                "created_at": "2023-12-06T21:52:17Z",
                "workspace_token": "wrkspc_142784e7422458fa"
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Segments"
        ],
        "operationId": "getSegment"
      }
    },
    "/dashboards": {
      "post": {
        "description": "Create a Dashboard.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Dashboards",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postDashboards"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Dashboard"
            },
            "examples": {
              "application/json": {
                "token": "dshbrd_7375cfafdc76d75d",
                "title": "New Dashboard",
                "widget_tokens": [
                  "rprt_c1ee989ed85f8bf5"
                ],
                "date_bin": "week",
                "date_interval": "this_month",
                "start_date": "2023-08-01",
                "end_date": "2023-08-31",
                "created_at": "2023-08-15T00:00:00Z",
                "updated_at": "2023-08-15T00:00:00Z",
                "workspace_token": "wrkspc_d661047bc62df622"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Dashboards"
        ],
        "operationId": "createDashboard"
      },
      "get": {
        "description": "Return all Dashboards.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Dashboards"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/dashboards",
                  "first": "https://api.vantage.com/v2/dashboards?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/dashboards?page=1",
                  "prev": null
                },
                "dashboards": [
                  {
                    "token": "dshbrd_dc993aef24b7c74d",
                    "title": "Things Fall Apart",
                    "widget_tokens": [
                      "rprt_fa30b058f86dc2d4"
                    ],
                    "date_bin": null,
                    "date_interval": null,
                    "start_date": null,
                    "end_date": null,
                    "created_at": "2023-09-12T05:07:37Z",
                    "updated_at": "2023-09-12T05:07:37Z",
                    "workspace_token": "wrkspc_288e29a9531f922c"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Dashboards"
        ],
        "operationId": "getDashboards"
      }
    },
    "/dashboards/{dashboard_token}": {
      "delete": {
        "description": "Delete a Dashboard.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dashboard_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Dashboard"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Dashboards"
        ],
        "operationId": "deleteDashboard"
      },
      "put": {
        "description": "Update a Dashboard.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dashboard_token",
            "type": "string",
            "required": true
          },
          {
            "name": "Dashboards",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/putDashboards"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Dashboard"
            },
            "examples": {
              "application/json": {
                "token": "dshbrd_bfaf1eb2da29d91c",
                "title": "Updated Dashboard",
                "widget_tokens": [
                  "rprt_badc6361e13a83fb"
                ],
                "date_bin": "week",
                "date_interval": "this_month",
                "start_date": "2023-08-01",
                "end_date": "2023-08-31",
                "created_at": "2023-09-12T05:06:54Z",
                "updated_at": "2023-08-15T00:00:00Z",
                "workspace_token": "wrkspc_a07113c8a27a3aff"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Dashboards"
        ],
        "operationId": "updateDashboard"
      },
      "get": {
        "description": "Return a specific Dashboard.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dashboard_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Dashboard"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/dashboards",
                  "first": "https://api.vantage.com/v2/dashboards?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/dashboards?page=1",
                  "prev": null
                },
                "dashboards": [
                  {
                    "token": "dshbrd_3fbac32495b1f5ef",
                    "title": "Look Homeward, Angel",
                    "widget_tokens": [
                      "rprt_3582a790582b12ba"
                    ],
                    "date_bin": null,
                    "date_interval": null,
                    "start_date": null,
                    "end_date": null,
                    "created_at": "2023-09-12T05:07:37Z",
                    "updated_at": "2023-09-12T05:07:37Z",
                    "workspace_token": "wrkspc_1f8bad7f7efd4b8e"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Dashboards"
        ],
        "operationId": "getDashboard"
      }
    },
    "/costs": {
      "get": {
        "description": "Return all Costs for a CostReport.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cost_report_token",
            "description": "The CostReport token.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "First date you would like to filter costs from. ISO 8601 formatted.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Last date you would like to filter costs to. ISO 8601 formatted.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "groupings",
            "description": "Group the results by specific field(s). Defaults to provider, service, account_id. Valid groupings: account_id, billing_account_id, charge_type, cost_category, cost_subcategory, provider, region, resource_id, service, tag:<tag_value>. If providing multiple groupings, join as comma separated values: groupings=provider,service,region",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "required": false
          },
          {
            "in": "query",
            "name": "order",
            "description": "Whether to order costs by date in an ascending or descending manner.",
            "type": "string",
            "default": "desc",
            "enum": [
              "asc",
              "desc"
            ],
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Costs"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/costs?cost_report_token=rprt_c654b0caccb23583",
                  "first": "https://api.vantage.com/v2/costs?cost_report_token=rprt_c654b0caccb23583&page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/costs?cost_report_token=rprt_c654b0caccb23583&page=1",
                  "prev": null
                },
                "total_cost": {
                  "amount": "500.0",
                  "currency": "USD"
                },
                "costs": [
                  {
                    "accrued_at": "2023-06-05",
                    "amount": "100.0",
                    "currency": "USD",
                    "provider": "aws",
                    "account_id": "mock_56789",
                    "service": "AmazonSNS"
                  },
                  {
                    "accrued_at": "2023-06-04",
                    "amount": "100.0",
                    "currency": "USD",
                    "provider": "aws",
                    "account_id": "mock_56789",
                    "service": "AmazonSNS"
                  },
                  {
                    "accrued_at": "2023-06-03",
                    "amount": "100.0",
                    "currency": "USD",
                    "provider": "aws",
                    "account_id": "mock_56789",
                    "service": "AmazonSNS"
                  },
                  {
                    "accrued_at": "2023-06-02",
                    "amount": "100.0",
                    "currency": "USD",
                    "provider": "aws",
                    "account_id": "mock_56789",
                    "service": "AmazonSNS"
                  },
                  {
                    "accrued_at": "2023-06-01",
                    "amount": "100.0",
                    "currency": "USD",
                    "provider": "aws",
                    "account_id": "mock_56789",
                    "service": "AmazonSNS"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "402": {
            "description": "PaymentRequired",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Costs"
        ],
        "operationId": "getCosts"
      }
    },
    "/teams": {
      "post": {
        "description": "Create a new Team.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Teams",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postTeams"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Team"
            },
            "examples": {
              "application/json": {
                "token": "team_8467157535a30221",
                "name": "New Team",
                "description": "New Team Description",
                "workspace_tokens": [
                  "wrkspc_52b6e5e663b4cde1"
                ],
                "user_tokens": [
                  "usr_a00e614b5843c234"
                ]
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "operationId": "createTeam"
      },
      "get": {
        "description": "Return all Teams that the current API token has access to.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Teams"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/teams",
                  "first": "https://api.vantage.com/v2/teams?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/teams?page=1",
                  "prev": null
                },
                "teams": [
                  {
                    "token": "team_2d4733920ec4385e",
                    "name": "New Mexico people",
                    "description": "Consequuntur ratione.",
                    "workspace_tokens": [
                      "wrkspc_08026aa5fb4c90f8"
                    ],
                    "user_tokens": [
                      "usr_c59398553e838116"
                    ]
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "operationId": "getTeams"
      }
    },
    "/teams/{team_token}": {
      "delete": {
        "description": "Delete a Team.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "team_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Team"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "operationId": "deleteTeam"
      },
      "put": {
        "description": "Update a Team.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "team_token",
            "type": "string",
            "required": true
          },
          {
            "name": "Teams",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/putTeams"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Team"
            },
            "examples": {
              "application/json": {
                "token": "team_d617e73dcc6b57c5",
                "name": "Updated Team",
                "description": "Updated Team Description",
                "workspace_tokens": [
                  "wrkspc_efc4284a56772481"
                ],
                "user_tokens": [
                  "usr_d268561e520c7aac"
                ]
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "operationId": "updateTeam"
      },
      "get": {
        "description": "Return a specific Team.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "team_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Team"
            },
            "examples": {
              "application/json": {
                "token": "team_081e09bbb812d369",
                "name": "Missouri cats",
                "description": "Voluptas et.",
                "workspace_tokens": [
                  "wrkspc_ddc003a2f0171bf8"
                ],
                "user_tokens": [
                  "usr_7c309915e847cfc6"
                ]
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "operationId": "getTeam"
      }
    },
    "/access_grants": {
      "post": {
        "description": "Create an Access Grant.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "AccessGrants",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postAccessGrants"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AccessGrant"
            },
            "examples": {
              "application/json": {
                "token": "rsrc_accss_grnt_9f8aeb3cedda3831",
                "resource_token": "rprt_3b935d26cba36fb0",
                "access": "denied",
                "team_token": "team_26865e16e46028ae",
                "created_at": "2024-01-18T17:39:37Z",
                "created_by": "usr_2fc38883da3726b9"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "406": {
            "description": "NotAcceptable",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "AccessGrants"
        ],
        "operationId": "createAccessGrant"
      },
      "get": {
        "description": "Return all Access Grants that the current API token has access to.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AccessGrants"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/access_grants",
                  "first": "https://api.vantage.com/v2/access_grants?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/access_grants?page=1",
                  "prev": null
                },
                "access_grants": [
                  {
                    "token": "rsrc_accss_grnt_c40f15062b6d5c37",
                    "resource_token": "rprt_5a269d316483b01c",
                    "access": "denied",
                    "team_token": "team_fd5c524ba104712b",
                    "created_at": "2024-01-18T17:39:37Z",
                    "created_by": "usr_eb8ce6bdc1fa31d5"
                  },
                  {
                    "token": "rsrc_accss_grnt_9723e984e93d8907",
                    "resource_token": "dshbrd_a08561ec24875ac9",
                    "access": "allowed",
                    "team_token": "team_fd5c524ba104712b",
                    "created_at": "2024-01-18T17:39:37Z",
                    "created_by": "usr_eb8ce6bdc1fa31d5"
                  },
                  {
                    "token": "rsrc_accss_grnt_eee5c4fd777d4dc8",
                    "resource_token": "fldr_9d4ad1a769131c58",
                    "access": "allowed",
                    "team_token": "team_fd5c524ba104712b",
                    "created_at": "2024-01-18T17:39:38Z",
                    "created_by": "usr_eb8ce6bdc1fa31d5"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "AccessGrants"
        ],
        "operationId": "getAccessGrants"
      }
    },
    "/access_grants/{access_grant_token}": {
      "delete": {
        "description": "Delete an Access Grant.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "access_grant_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AccessGrant"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "AccessGrants"
        ],
        "operationId": "deleteAccessGrant"
      },
      "put": {
        "description": "Update an AccessGrant.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "access_grant_token",
            "type": "string",
            "required": true
          },
          {
            "name": "AccessGrants",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/putAccessGrants"
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AccessGrant"
            },
            "examples": {
              "application/json": {
                "token": "rsrc_accss_grnt_eea11f0d35318b0d",
                "resource_token": "rprt_e84d7760ab2dd7dc",
                "access": "allowed",
                "team_token": "team_25fc4aa890869602",
                "created_at": "2024-01-18T17:39:36Z",
                "created_by": "usr_57ed2fa2a7b30166"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "AccessGrants"
        ],
        "operationId": "updateAccessGrant"
      },
      "get": {
        "description": "Return a specific Access Grant.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "access_grant_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AccessGrant"
            },
            "examples": {
              "application/json": {
                "token": "rsrc_accss_grnt_07ed83a5069b91c4",
                "resource_token": "rprt_b8df14aa8a4ad5c7",
                "access": "denied",
                "team_token": "team_14bd13a8bccb8406",
                "created_at": "2024-01-18T17:39:36Z",
                "created_by": "usr_0e1cb254743b26cb"
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "AccessGrants"
        ],
        "operationId": "getAccessGrant"
      }
    },
    "/users": {
      "get": {
        "description": "Return all Users that the current API token has access to.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000.",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Users"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v2/users",
                  "first": "https://api.vantage.com/v2/users?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v2/users?page=1",
                  "prev": null
                },
                "users": [
                  {
                    "token": "usr_3f30f56e7773e72b",
                    "name": "Pres. Sudie Kuvalis",
                    "email": "kuvalis.sudie.pres@mckenzie-herman.net",
                    "role": "Owner"
                  },
                  {
                    "token": "usr_dc69dfedf704d4ea",
                    "name": "Carisa Tromp",
                    "email": "carisa.tromp@morissette.co",
                    "role": "Viewer"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "operationId": "getUsers"
      }
    },
    "/users/{user_token}": {
      "get": {
        "description": "Return a specific User.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user_token",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            },
            "examples": {
              "application/json": {
                "token": "usr_92c7273af4de2fb4",
                "name": "Miss Shirlene Weissnat",
                "email": "miss.shirlene.weissnat@west-howe.net",
                "role": "Owner"
              }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "operationId": "getUser"
      }
    },
    "/products": {
      "get": {
        "description": "Return available Products for a Service. For example, with a Provider of AWS and a Service of EC2, Products will be a list of all EC2 Instances. By default, this endpoint returns all Products across all Services and Providers but has optional query parameters for filtering listed below.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "provider_id",
            "description": "Query by Provider to list all Products across all Services for a Provider. e.g. aws",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "service_id",
            "description": "Query by Service to list all Products for a specific provider service. e.g. aws-ec2",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "name",
            "description": "Query by name of the Product to see a list of products which match that name. e.g. m5a.16xlarge",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Products"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v1/products",
                  "first": "https://api.vantage.com/v1/products?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v1/products?page=1",
                  "prev": null
                },
                "products": [
                  {
                    "id": "aws-ec2-m5d_16xlarge",
                    "category": "compute",
                    "name": "m5d.16xlarge",
                    "service_id": "aws-ec2",
                    "provider_id": "aws",
                    "details": {
                      "gpu": 0,
                      "name": "M5 General Purpose 16xlarge",
                      "vcpu": 64,
                      "memory": 256,
                      "clock_speed_ghz": 3.1,
                      "physical_processor_description": "Intel Xeon Platinum 8175 (Skylake)",
                      "network_performance_description": "20 Gigabit"
                    }
                  },
                  {
                    "id": "aws-ec2-c5a_8xlarge",
                    "category": "compute",
                    "name": "c5a.8xlarge",
                    "service_id": "aws-ec2",
                    "provider_id": "aws",
                    "details": {
                      "gpu": 0,
                      "name": "C5A 8xlarge",
                      "vcpu": 64,
                      "memory": 256
                    }
                  },
                  {
                    "id": "aws-ec2-c5a_4large",
                    "category": "compute",
                    "name": "c5a.4large",
                    "service_id": "aws-ec2",
                    "provider_id": "aws",
                    "details": {
                      "gpu": 0,
                      "name": "C5A 4large",
                      "vcpu": 64,
                      "memory": 4
                    }
                  },
                  {
                    "id": "aws-s3-standard",
                    "category": "object_storage",
                    "name": "standard",
                    "service_id": "aws-s3",
                    "provider_id": "aws",
                    "details": {}
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Prices"
        ],
        "operationId": "getProducts"
      }
    },
    "/products/{id}": {
      "get": {
        "description": "Return a product",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Product"
            },
            "examples": {
              "application/json": {
                "id": "aws-ec2-m5d_16xlarge",
                "category": "compute",
                "name": "m5d.16xlarge",
                "service_id": "aws-ec2",
                "provider_id": "aws",
                "details": {
                  "gpu": 0,
                  "name": "M5 General Purpose 16xlarge",
                  "vcpu": 64,
                  "memory": 256,
                  "clock_speed_ghz": 3.1,
                  "physical_processor_description": "Intel Xeon Platinum 8175 (Skylake)",
                  "network_performance_description": "20 Gigabit"
                }
              }
            }
          }
        },
        "tags": [
          "Prices"
        ],
        "operationId": "getProduct"
      }
    },
    "/products/{product_id}/prices": {
      "get": {
        "description": "Return available Prices across all Regions for a Product.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "product_id",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The amount of results to return. The maximum is 1000",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Prices"
            },
            "examples": {
              "application/json": {
                "links": {
                  "self": "https://api.vantage.com/v1/products/aws-ec2-m5d_16xlarge/prices",
                  "first": "https://api.vantage.com/v1/products/aws-ec2-m5d_16xlarge/prices?page=1",
                  "next": null,
                  "last": "https://api.vantage.com/v1/products/aws-ec2-m5d_16xlarge/prices?page=1",
                  "prev": null
                },
                "prices": [
                  {
                    "id": "aws-ec2-m5d_16xlarge-eu_central_1-on_demand-linux_enterprise",
                    "unit": "hour",
                    "region": "eu-central-1",
                    "rate_type": "compute",
                    "currency": "USD",
                    "amount": 27.328,
                    "details": {
                      "platform": "linux-enterprise",
                      "lifecycle": "on-demand"
                    }
                  },
                  {
                    "id": "aws-ec2-m5d_16xlarge-us_east_1-on_demand-linux_enterprise",
                    "unit": "hour",
                    "region": "us-east-1",
                    "rate_type": "compute",
                    "currency": "USD",
                    "amount": 3.616,
                    "details": {
                      "platform": "linux-enterprise",
                      "lifecycle": "on-demand"
                    }
                  },
                  {
                    "id": "aws-ec2-m5d_16xlarge-us_east_1-on_demand-rhel",
                    "unit": "hour",
                    "region": "us-east-1",
                    "rate_type": "compute",
                    "currency": "USD",
                    "amount": 3.746,
                    "details": {
                      "platform": "rhel",
                      "lifecycle": "on-demand"
                    }
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Prices"
        ],
        "operationId": "getPrices"
      }
    },
    "/products/{product_id}/prices/{id}": {
      "get": {
        "description": "Returns a price",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "product_id",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Price"
            },
            "examples": {
              "application/json": {
                "id": "aws-ec2-m5d_16xlarge-eu_central_1-on_demand-linux_enterprise",
                "unit": "hour",
                "region": "eu-central-1",
                "rate_type": "compute",
                "currency": "USD",
                "amount": 27.328,
                "details": {
                  "platform": "linux-enterprise",
                  "lifecycle": "on-demand"
                }
              }
            }
          }
        },
        "tags": [
          "Prices"
        ],
        "operationId": "getPrice"
      }
    },
    "/ping": {
      "get": {
        "description": "This is a health check endpoint that can be used to determine Vantage API healthiness. It will return 200 if everything is running smoothly.",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "This is a health check endpoint that can be used to determine Vantage API healthiness. It will return 200 if everything is running smoothly."
          }
        },
        "tags": [
          "Ping"
        ],
        "operationId": "ping"
      }
    }
  },
  "definitions": {
    "Workspaces": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "workspaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Workspace"
          }
        }
      },
      "description": "Workspaces model"
    },
    "Workspace": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "example": "Acme Corp.",
          "description": "The name of the Workspace."
        }
      },
      "description": "Workspace model"
    },
    "Errors": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Errors model"
    },
    "postFolders": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the Folder."
        },
        "parent_folder_token": {
          "type": "string",
          "description": "The token of the parent Folder."
        },
        "saved_filter_tokens": {
          "type": "array",
          "description": "The tokens of the SavedFilters to apply to any Cost Report contained within the Folder.",
          "items": {
            "type": "string"
          }
        },
        "workspace_token": {
          "type": "string",
          "description": "The token of the Workspace to add the Folder to. Ignored if 'parent_folder_token' is set. Required if the API token is associated with multiple Workspaces."
        }
      },
      "required": [
        "title"
      ],
      "description": "Create a Folder for CostReports."
    },
    "Folder": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "title": {
          "type": "string",
          "example": "Platform Team Reports",
          "description": "The title of the Folder."
        },
        "parent_folder_token": {
          "type": "string",
          "description": "The token for the parent Folder, if any."
        },
        "saved_filter_tokens": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The tokens for the SavedFilters assigned to the Folder."
        },
        "created_at": {
          "type": "string",
          "example": "2023-08-04T00:00:00Z",
          "description": "The date and time, in UTC, the Folder was created. ISO 8601 Formatted."
        },
        "updated_at": {
          "type": "string",
          "example": "2023-08-04T00:00:00Z",
          "description": "The date and time, in UTC, the Folder was last updated at. ISO 8601 Formatted."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token for the Workspace the Folder is a part of."
        }
      },
      "description": "Folder model"
    },
    "Folders": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "folders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Folder"
          }
        }
      },
      "description": "Folders model"
    },
    "putFolders": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the Folder."
        },
        "parent_folder_token": {
          "type": "string",
          "description": "The token of the parent Folder."
        },
        "saved_filter_tokens": {
          "type": "array",
          "description": "The tokens of the SavedFilters to apply to any Cost Report contained within the Folder.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Update a Folder for CostReports."
    },
    "postSavedFilters": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the SavedFilter."
        },
        "workspace_token": {
          "type": "string",
          "description": "The Workspace to associate the SavedFilter with. Required if the API token is associated with multiple Workspaces."
        },
        "filter": {
          "type": "string",
          "description": "The filter query language to apply to the SavedFilter, which subsequently gets applied to a CostReport. Additional documentation available at https://docs.vantage.sh/vql."
        }
      },
      "required": [
        "title"
      ],
      "description": "Create a SavedFilter for CostReports."
    },
    "SavedFilter": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "title": {
          "type": "string",
          "example": "Platform Team Reports",
          "description": "The title of the SavedFilter."
        },
        "cost_report_tokens": {
          "type": "array",
          "items": {
            "type": "string",
            "example": [
              "rprt_abcd1234",
              "rprt_efgh5678"
            ]
          },
          "description": "The tokens for any CostReports the SavedFilter is applied to."
        },
        "filter": {
          "type": "string",
          "example": "costs.provider = 'azure'",
          "description": "The SavedFilter's filter, applied to any relevant CostReports. Additional documentation available at https://docs.vantage.sh/vql."
        },
        "created_at": {
          "type": "string",
          "example": "2023-08-04T00:00:00Z",
          "description": "The date and time, in UTC, the report was created. ISO 8601 Formatted."
        },
        "created_by": {
          "type": "string",
          "description": "The User who created the SavedFilter."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token for the Workspace the SavedFilter is a part of."
        }
      },
      "description": "SavedFilter model"
    },
    "SavedFilters": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "saved_filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SavedFilter"
          }
        }
      },
      "description": "SavedFilters model"
    },
    "putSavedFilters": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the SavedFilter."
        },
        "filter": {
          "type": "string",
          "description": "The filter query language to apply to the SavedFilter, which subsequently gets applied to a CostReport. Additional documentation available at https://docs.vantage.sh/vql."
        }
      },
      "description": "Update a SavedFilter for CostReports."
    },
    "postCostReports": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the CostReport."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token of the Workspace to add the Cost Report to. Ignored if 'folder_token' is set. Required if the API token is associated with multiple Workspaces."
        },
        "filter": {
          "type": "string",
          "description": "The filter query language to apply to the CostReport. Additional documentation available at https://docs.vantage.sh/vql."
        },
        "saved_filter_tokens": {
          "type": "array",
          "description": "The tokens of the SavedFilters to apply to the CostReport.",
          "items": {
            "type": "string"
          }
        },
        "folder_token": {
          "type": "string",
          "description": "The token of the Folder to add the CostReport to. Determines the Workspace the report is assigned to."
        }
      },
      "required": [
        "title"
      ],
      "description": "Create a CostReport."
    },
    "CostReport": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "title": {
          "type": "string",
          "example": "Production Environment",
          "description": "The title of the CostReport."
        },
        "folder_token": {
          "type": "string",
          "description": "The token for the Folder the CostReport is a part of."
        },
        "saved_filter_tokens": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The tokens for the SavedFilters assigned to the CostReport."
        },
        "filter": {
          "type": "string",
          "description": "The filter applied to the CostReport. Additional documentation available at https://docs.vantage.sh/vql."
        },
        "created_at": {
          "type": "string",
          "example": "2021-07-09T00:00:00Z",
          "description": "The date and time, in UTC, the report was created. ISO 8601 Formatted."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token for the Workspace the CostReport is a part of."
        }
      },
      "description": "CostReport model"
    },
    "CostReports": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "cost_reports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CostReport"
          }
        }
      },
      "description": "CostReports model"
    },
    "putCostReports": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the CostReport."
        },
        "filter": {
          "type": "string",
          "description": "The filter query language to apply to the CostReport. Additional documentation available at https://docs.vantage.sh/vql."
        },
        "saved_filter_tokens": {
          "type": "array",
          "description": "The tokens of the SavedFilters to apply to the CostReport.",
          "items": {
            "type": "string"
          }
        },
        "folder_token": {
          "type": "string",
          "description": "The token of the Folder to add the CostReport to. Determines the Workspace the report is assigned to."
        }
      },
      "description": "Update a CostReport."
    },
    "postSegments": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the Segment."
        },
        "description": {
          "type": "string",
          "description": "The description of the Segment."
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the Segment."
        },
        "track_unallocated": {
          "type": "boolean",
          "description": "Track Unallocated Costs which are not assigned to any of the created Segments.",
          "default": false
        },
        "workspace_token": {
          "type": "string",
          "description": "The token of the Workspace to add the Segment to. Ignored if 'segment_token' is set. Required if the API token is associated with multiple Workspaces."
        },
        "filter": {
          "type": "string",
          "description": "The filter query language to apply to the Segment. Additional documentation available at https://docs.vantage.sh/vql."
        },
        "parent_segment_token": {
          "type": "string",
          "description": "The token of the parent Segment this new Segment belongs to. Determines the Workspace the segment is assigned to."
        }
      },
      "required": [
        "title"
      ],
      "description": "Create a Segment."
    },
    "Segment": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "title": {
          "type": "string",
          "example": "OPEX",
          "description": "The title of the Segment."
        },
        "parent_folder": {
          "type": "string",
          "description": "The parent folder of this Segment."
        },
        "description": {
          "type": "string",
          "example": "Operating expenses",
          "description": "The description of the Segment."
        },
        "track_unallocated": {
          "type": "boolean",
          "example": false,
          "description": "Track Unallocated Costs which are not assigned to any of the created segments."
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "example": 100,
          "description": "Costs are assigned in priority order across all segments with assigned filters."
        },
        "filter": {
          "type": "string",
          "description": "The filter applied to the SegmentFilter. Additional documentation available at https://docs.vantage.sh/vql."
        },
        "created_at": {
          "type": "string",
          "example": "2021-07-09T00:00:00Z",
          "description": "The date and time, in UTC, the segment was created. ISO 8601 Formatted."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token for the Workspace the Segment is a part of."
        }
      },
      "description": "Segment model"
    },
    "Segments": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "segments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Segment"
          }
        }
      },
      "description": "Segments model"
    },
    "putSegments": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the Segment."
        },
        "description": {
          "type": "string",
          "description": "The description of the Segment."
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the Segment."
        },
        "track_unallocated": {
          "type": "boolean",
          "description": "Track Unallocated Costs which are not assigned to any of the created Segments.",
          "default": false
        },
        "filter": {
          "type": "string",
          "description": "The filter query language to apply to the Segment. Additional documentation available at https://docs.vantage.sh/vql."
        },
        "parent_segment_token": {
          "type": "string",
          "description": "The token of the parent Segment this new Segment belongs to. Determines the Workspace the segment is assigned to."
        }
      },
      "description": "Update a Segment."
    },
    "postDashboards": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the Dashboard."
        },
        "widget_tokens": {
          "type": "array",
          "description": "The tokens of the widgets to add to the Dashboard. Currently only supports CostReport tokens.",
          "items": {
            "type": "string"
          }
        },
        "date_bin": {
          "type": "string",
          "description": "Determines how to group costs in the Dashboard.",
          "enum": [
            "cumulative",
            "day",
            "week",
            "month"
          ]
        },
        "date_interval": {
          "type": "string",
          "description": "Determines the date range in the Dashboard. Incompatible with 'start_date' and 'end_date' parameters.",
          "enum": [
            "this_month",
            "last_7_days",
            "last_30_days",
            "last_month",
            "last_3_months",
            "last_6_months",
            "custom",
            "last_12_months",
            "last_24_months",
            "last_36_months"
          ]
        },
        "start_date": {
          "type": "string",
          "description": "The start date for the date range for costs in the Dashboard. ISO 8601 Formatted. Incompatible with 'date_interval' parameter."
        },
        "end_date": {
          "type": "string",
          "description": "The end date for the date range for costs in the Dashboard. ISO 8601 Formatted. Incompatible with 'date_interval' parameter."
        },
        "workspace_token": {
          "type": "string",
          "description": "The token of the Workspace to add the Dashboard to. Required if the API token is associated with multiple Workspaces."
        }
      },
      "required": [
        "title",
        "end_date"
      ],
      "description": "Create a Dashboard."
    },
    "Dashboard": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "example": "dshbrd_abcd1234567890"
        },
        "title": {
          "type": "string",
          "example": "AWS Dashboard",
          "description": "The title of the Dashboard."
        },
        "widget_tokens": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The tokens of the widgets displayed in the Dashboard. Currently only supports CostReport tokens."
        },
        "date_bin": {
          "type": "string",
          "enum": [
            "cumulative",
            "day",
            "week",
            "month"
          ],
          "description": "Determines how to group costs in the Dashboard."
        },
        "date_interval": {
          "type": "string",
          "enum": [
            "this_month",
            "last_7_days",
            "last_30_days",
            "last_month",
            "last_3_months",
            "last_6_months",
            "custom",
            "last_12_months",
            "last_24_months",
            "last_36_months"
          ],
          "description": "Determines the date range in the Dashboard. Guaranteed to be set to 'custom' if 'start_date' and 'end_date' are set."
        },
        "start_date": {
          "type": "string",
          "example": "2023-08-04",
          "description": "The start date for the date range for CostReports in the Dashboard. ISO 8601 Formatted. Overwrites 'date_interval' if set."
        },
        "end_date": {
          "type": "string",
          "example": "2023-09-04",
          "description": "The end date for the date range for CostReports in the Dashboard. ISO 8601 Formatted. Overwrites 'date_interval' if set."
        },
        "created_at": {
          "type": "string",
          "example": "2023-08-04T00:00:00Z",
          "description": "The date and time, in UTC, the Dashboard was created. ISO 8601 Formatted."
        },
        "updated_at": {
          "type": "string",
          "example": "2023-08-04T00:00:00Z",
          "description": "The date and time, in UTC, the Dashboard was created. ISO 8601 Formatted."
        },
        "workspace_token": {
          "type": "string",
          "example": "wrkspc_abcd1234567890",
          "description": "The token for the Workspace the Dashboard is a part of."
        }
      },
      "description": "Dashboard model"
    },
    "Dashboards": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "dashboards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Dashboard"
          }
        }
      },
      "description": "Dashboards model"
    },
    "putDashboards": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the Dashboard."
        },
        "widget_tokens": {
          "type": "array",
          "description": "The tokens of the widgets to add to the Dashboard. Currently only supports CostReport tokens.",
          "items": {
            "type": "string"
          }
        },
        "date_bin": {
          "type": "string",
          "description": "Determines how to group costs in the Dashboard.",
          "enum": [
            "cumulative",
            "day",
            "week",
            "month"
          ]
        },
        "date_interval": {
          "type": "string",
          "description": "Determines the date range in the Dashboard. Incompatible with 'start_date' and 'end_date' parameters.",
          "enum": [
            "this_month",
            "last_7_days",
            "last_30_days",
            "last_month",
            "last_3_months",
            "last_6_months",
            "custom",
            "last_12_months",
            "last_24_months",
            "last_36_months"
          ]
        },
        "start_date": {
          "type": "string",
          "description": "The start date for the date range for costs in the Dashboard. ISO 8601 Formatted. Incompatible with 'date_interval' parameter."
        },
        "end_date": {
          "type": "string",
          "description": "The end date for the date range for costs in the Dashboard. ISO 8601 Formatted. Incompatible with 'date_interval' parameter."
        }
      },
      "required": [
        "end_date"
      ],
      "description": "Update a Dashboard."
    },
    "Costs": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "total_cost": {
          "type": "string",
          "description": "The sum of all costs for the CostReport for the requested period, rounded to 2 decimal places, alongside the ISO 4217 currency code."
        },
        "costs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Costs model"
    },
    "postTeams": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the Team."
        },
        "description": {
          "type": "string",
          "description": "The description of the Team."
        },
        "workspace_tokens": {
          "type": "array",
          "description": "The Workspace tokens to associate to the Team.",
          "items": {
            "type": "string"
          }
        },
        "user_tokens": {
          "type": "array",
          "description": "The User tokens to associate to the Team.",
          "items": {
            "type": "string"
          }
        },
        "user_emails": {
          "type": "array",
          "description": "The User emails to associate to the Team.",
          "items": {
            "type": "string"
          }
        },
        "role": {
          "type": "string",
          "description": "The role to assign to the provided Users. Defaults to 'editor' which has editor permissions.",
          "enum": [
            "owner",
            "editor",
            "viewer"
          ]
        }
      },
      "required": [
        "name"
      ],
      "description": "Create a new Team."
    },
    "Team": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "example": "Cost Savers",
          "description": "The name of the Team."
        },
        "description": {
          "type": "string",
          "example": "The Team that saves costs",
          "description": "The description of the Team."
        },
        "workspace_tokens": {
          "type": "array",
          "items": {
            "type": "string",
            "example": [
              "wrkspc_abcd1234",
              "wrkspc_efgh5678"
            ]
          },
          "description": "The tokens for any Workspaces that the Team belongs to"
        },
        "user_emails": {
          "type": "array",
          "items": {
            "type": "string",
            "example": [
              "wileycoyote@acme.com",
              "roadrunner@acme.com"
            ]
          },
          "description": "The email addresses for Users that belong to the Team"
        },
        "user_tokens": {
          "type": "array",
          "items": {
            "type": "string",
            "example": [
              "usr_abcd1234",
              "usr_efgh5678"
            ]
          },
          "description": "The tokens for Users that belong to the Team"
        }
      },
      "description": "Team model"
    },
    "Teams": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Team"
          }
        }
      },
      "description": "Teams model"
    },
    "putTeams": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the Team."
        },
        "description": {
          "type": "string",
          "description": "The description of the Team."
        },
        "workspace_tokens": {
          "type": "array",
          "description": "The Workspace tokens to associate to the Team.",
          "items": {
            "type": "string"
          }
        },
        "user_tokens": {
          "type": "array",
          "description": "The User tokens to associate to the Team.",
          "items": {
            "type": "string"
          }
        },
        "user_emails": {
          "type": "array",
          "description": "The User emails to associate to the Team.",
          "items": {
            "type": "string"
          }
        },
        "role": {
          "type": "string",
          "description": "The role to assign to the provided Users. Defaults to 'editor' which has editor permissions.",
          "enum": [
            "owner",
            "editor",
            "viewer"
          ]
        }
      },
      "description": "Update a Team."
    },
    "postAccessGrants": {
      "type": "object",
      "properties": {
        "resource_token": {
          "type": "string",
          "description": "The token of the resource for which you are granting access."
        },
        "team_token": {
          "type": "string",
          "description": "The token of the Team you want to grant access to."
        },
        "access": {
          "type": "string",
          "description": "The access level you want to grant. Defaults to 'allowed'.",
          "enum": [
            "denied",
            "allowed"
          ]
        }
      },
      "required": [
        "resource_token",
        "team_token"
      ],
      "description": "Create an Access Grant."
    },
    "AccessGrant": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "resource_token": {
          "type": "string",
          "example": "rprt_abcd1234",
          "description": "The token for any resource the AccessGrant is applied to."
        },
        "access": {
          "type": "string",
          "description": "The access status of the AccessGrant."
        },
        "team_token": {
          "type": "string",
          "description": "The Team token for which an AccessGrant is applied to."
        },
        "created_at": {
          "type": "string",
          "example": "2023-08-04T00:00:00Z",
          "description": "The date and time, in UTC, the AccessGrant was created. ISO 8601 Formatted."
        },
        "created_by": {
          "type": "string",
          "description": "The token for the User who created the AccessGrant."
        }
      },
      "description": "AccessGrant model"
    },
    "AccessGrants": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "access_grants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessGrant"
          }
        }
      },
      "description": "AccessGrants model"
    },
    "putAccessGrants": {
      "type": "object",
      "properties": {
        "access": {
          "type": "string",
          "description": "Allowed or denied access to resource.",
          "enum": [
            "denied",
            "allowed"
          ]
        }
      },
      "required": [
        "access"
      ],
      "description": "Update an AccessGrant."
    },
    "Users": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          }
        }
      },
      "description": "Users model"
    },
    "User": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "example": "John Doe",
          "description": "The name of the User."
        },
        "email": {
          "type": "string",
          "example": "john_doe@acme.com",
          "description": "The email of the User."
        },
        "role": {
          "type": "string",
          "example": "Admin",
          "description": "The role of the User."
        }
      },
      "description": "User model"
    },
    "Products": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          }
        }
      },
      "description": "Products model"
    },
    "Product": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "category": {
          "type": "string",
          "example": "compute",
          "description": "The category of the cloud product"
        },
        "name": {
          "type": "string",
          "example": "EC2",
          "description": "The common name of the product."
        },
        "service_id": {
          "type": "string",
          "example": "aws-ec2",
          "description": "A unique slug for the service the product belongs to."
        },
        "provider_id": {
          "type": "string",
          "example": "aws",
          "description": "A unique slug for the provider the product belongs to."
        },
        "details": {
          "type": "object",
          "example": {
            "gpu": 0,
            "name": "M5 General Purpose 16xlarge",
            "vcpu": 64,
            "memory": 256,
            "clock_speed_ghz": 3.1,
            "physical_processor_description": "Intel Xeon Platinum 8175 (Skylake)",
            "network_performance_description": "20 Gigabit"
          },
          "description": "An object of metadata about the product."
        }
      },
      "description": "Product model"
    },
    "Prices": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object"
        },
        "prices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Price"
          }
        }
      },
      "description": "Prices model"
    },
    "Price": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "unit": {
          "type": "string",
          "example": "hour",
          "description": "The unit in which the amount is billed."
        },
        "region": {
          "type": "string",
          "example": "us-east-1",
          "description": "The region the price is specific to."
        },
        "rate_type": {
          "type": "string",
          "example": "compute",
          "description": "The part of the product the price applies to. (compute, transfer, etc..)"
        },
        "currency": {
          "type": "string",
          "example": "USD",
          "description": "The currency of the amount."
        },
        "amount": {
          "type": "number",
          "example": "1.324",
          "description": "The amount of money this specific product price costs."
        },
        "details": {
          "type": "object",
          "example": {
            "platform": "linux-enterprise",
            "lifecycle": "on-demand"
          },
          "description": "Service specific metadata."
        }
      },
      "description": "Price model"
    }
  }
}
